
os:     file format elf32-littleriscv


Disassembly of section .text:

00000000 <_start>:
# .global _start
# 
# # sets up the stack before calling c function 'run' in 'os.c'
# _start:
#     lui sp, 0x2         # set stack at # 0x1fff0
   0:	00002137          	lui	x2,0x2
#     addi sp, sp, -16    #
   4:	ff010113          	addi	x2,x2,-16 # 1ff0 <delay+0x10c0>
   8:	004000ef          	jal	x1,c <run>

0000000c <run>:
# bool strings_equal(const char *s1, const char *s2);
# 
# unsigned char active_entity = 1;
# 
# void run() {
#   uart_send_str(hello);
   c:	000027b7          	lui	x15,0x2
  10:	5d47a503          	lw	x10,1492(x15) # 25d4 <hello>
# void run() {
  14:	fe010113          	addi	x2,x2,-32
  18:	01212823          	sw	x18,16(x2)
#   while (1) {
#     entity *ent = &entities[active_entity];
#     print_location(ent->location, active_entity);
  1c:	00002937          	lui	x18,0x2
# void run() {
  20:	00912a23          	sw	x9,20(x2)
  24:	01312623          	sw	x19,12(x2)
  28:	01412423          	sw	x20,8(x2)
  2c:	01512223          	sw	x21,4(x2)
  30:	00112e23          	sw	x1,28(x2)
  34:	00812c23          	sw	x8,24(x2)
#     entity *ent = &entities[active_entity];
  38:	000024b7          	lui	x9,0x2
#   uart_send_str(hello);
  3c:	00001097          	auipc	x1,0x1
  40:	e48080e7          	jalr	x1,-440(x1) # e84 <uart_send_str>
#     print_location(ent->location, active_entity);
  44:	25490913          	addi	x18,x18,596 # 2254 <entities>
#     uart_send_str(ent->name);
#     uart_send_str(" > ");
  48:	000019b7          	lui	x19,0x1
#     input_inbuf();
#     uart_send_str("\r\n");
  4c:	00001a37          	lui	x20,0x1
#     handle_inbuf();
#     if (active_entity == 1)
  50:	00100a93          	addi	x21,x0,1
#     entity *ent = &entities[active_entity];
  54:	5d84c583          	lbu	x11,1496(x9) # 25d8 <active_entity>
#     print_location(ent->location, active_entity);
  58:	00259413          	slli	x8,x11,0x2
  5c:	00b40433          	add	x8,x8,x11
  60:	00341413          	slli	x8,x8,0x3
  64:	00890433          	add	x8,x18,x8
  68:	00444503          	lbu	x10,4(x8)
  6c:	00000097          	auipc	x1,0x0
  70:	2d4080e7          	jalr	x1,724(x1) # 340 <print_location>
#     uart_send_str(ent->name);
  74:	00042503          	lw	x10,0(x8)
  78:	00001097          	auipc	x1,0x1
  7c:	e0c080e7          	jalr	x1,-500(x1) # e84 <uart_send_str>
#     uart_send_str(" > ");
  80:	ff498513          	addi	x10,x19,-12 # ff4 <delay+0xc4>
  84:	00001097          	auipc	x1,0x1
  88:	e00080e7          	jalr	x1,-512(x1) # e84 <uart_send_str>
#     input_inbuf();
  8c:	00001097          	auipc	x1,0x1
  90:	d1c080e7          	jalr	x1,-740(x1) # da8 <input_inbuf>
#     uart_send_str("\r\n");
  94:	094a0513          	addi	x10,x20,148 # 1094 <delay+0x164>
  98:	00001097          	auipc	x1,0x1
  9c:	dec080e7          	jalr	x1,-532(x1) # e84 <uart_send_str>
#     handle_inbuf();
  a0:	00000097          	auipc	x1,0x0
  a4:	020080e7          	jalr	x1,32(x1) # c0 <handle_inbuf>
#     if (active_entity == 1)
  a8:	5d84c703          	lbu	x14,1496(x9)
#       active_entity = 2;
  ac:	00200793          	addi	x15,x0,2
#     if (active_entity == 1)
  b0:	01570463          	beq	x14,x21,b8 <run+0xac>
#     else
#       active_entity = 1;
  b4:	00100793          	addi	x15,x0,1
  b8:	5cf48c23          	sb	x15,1496(x9)
  bc:	f99ff06f          	jal	x0,54 <run+0x48>

000000c0 <handle_inbuf>:
#   }
# }
# 
# void handle_inbuf() {
  c0:	fd010113          	addi	x2,x2,-48
#   const char *words[8];
#   char *ptr = inbuf.line;
  c4:	000027b7          	lui	x15,0x2
# void handle_inbuf() {
  c8:	02912223          	sw	x9,36(x2)
  cc:	02112623          	sw	x1,44(x2)
  d0:	02812423          	sw	x8,40(x2)
  d4:	00010713          	addi	x14,x2,0
#   unsigned nwords = 0;
  d8:	00000493          	addi	x9,x0,0
#   char *ptr = inbuf.line;
  dc:	5dc78793          	addi	x15,x15,1500 # 25dc <inbuf>
#   while (1) {
#     words[nwords++] = ptr;
#     while (*ptr && *ptr != ' ') {
  e0:	02000513          	addi	x10,x0,32
#     }
#     if (!*ptr)
#       break;
#     *ptr = 0;
#     ptr++;
#     if (nwords == sizeof(words) / sizeof(const char *)) {
  e4:	00800593          	addi	x11,x0,8
#     words[nwords++] = ptr;
  e8:	00148493          	addi	x9,x9,1
  ec:	00f72023          	sw	x15,0(x14)
#     while (*ptr && *ptr != ' ') {
  f0:	0007c603          	lbu	x12,0(x15)
#       ptr++;
  f4:	00078693          	addi	x13,x15,0
#     while (*ptr && *ptr != ' ') {
  f8:	02060463          	beq	x12,x0,120 <handle_inbuf+0x60>
#       ptr++;
  fc:	00178793          	addi	x15,x15,1
#     while (*ptr && *ptr != ' ') {
 100:	fea618e3          	bne	x12,x10,f0 <handle_inbuf+0x30>
#     *ptr = 0;
 104:	00068023          	sb	x0,0(x13)
#     if (nwords == sizeof(words) / sizeof(const char *)) {
 108:	00470713          	addi	x14,x14,4
 10c:	fcb49ee3          	bne	x9,x11,e8 <handle_inbuf+0x28>
#       uart_send_str("too many words, some ignored\r\n\r\n");
 110:	00001537          	lui	x10,0x1
 114:	ff850513          	addi	x10,x10,-8 # ff8 <delay+0xc8>
 118:	00001097          	auipc	x1,0x1
 11c:	d6c080e7          	jalr	x1,-660(x1) # e84 <uart_send_str>
#   }
#   //  for (unsigned i = 0; i < nwords; i++) {
#   //    uart_send_str(words[i]);
#   //    uart_send_str("\r\n");
#   //  }
#   if (strings_equal(words[0], "help")) {
 120:	00012403          	lw	x8,0(x2)
 124:	000015b7          	lui	x11,0x1
 128:	01c58593          	addi	x11,x11,28 # 101c <delay+0xec>
 12c:	00040513          	addi	x10,x8,0
 130:	00001097          	auipc	x1,0x1
 134:	d24080e7          	jalr	x1,-732(x1) # e54 <strings_equal>
 138:	00050e63          	beq	x10,x0,154 <handle_inbuf+0x94>
#     }
#     action_give(active_entity, words[1], words[2]);
#   } else {
#     uart_send_str("not understood\r\n\r\n");
#   }
# }
 13c:	02812403          	lw	x8,40(x2)
 140:	02c12083          	lw	x1,44(x2)
 144:	02412483          	lw	x9,36(x2)
 148:	03010113          	addi	x2,x2,48
#     print_help();
 14c:	00001317          	auipc	x6,0x1
 150:	c4c30067          	jalr	x0,-948(x6) # d98 <print_help>
#   } else if (strings_equal(words[0], "i")) {
 154:	000015b7          	lui	x11,0x1
 158:	02458593          	addi	x11,x11,36 # 1024 <delay+0xf4>
 15c:	00040513          	addi	x10,x8,0
 160:	00001097          	auipc	x1,0x1
 164:	cf4080e7          	jalr	x1,-780(x1) # e54 <strings_equal>
 168:	02050a63          	beq	x10,x0,19c <handle_inbuf+0xdc>
#     action_inventory(active_entity);
 16c:	000027b7          	lui	x15,0x2
 170:	5d87c503          	lbu	x10,1496(x15) # 25d8 <active_entity>
 174:	00000097          	auipc	x1,0x0
 178:	3fc080e7          	jalr	x1,1020(x1) # 570 <action_inventory>
#     uart_send_str("\r\n");
 17c:	00001537          	lui	x10,0x1
 180:	09450513          	addi	x10,x10,148 # 1094 <delay+0x164>
# }
 184:	02812403          	lw	x8,40(x2)
 188:	02c12083          	lw	x1,44(x2)
 18c:	02412483          	lw	x9,36(x2)
 190:	03010113          	addi	x2,x2,48
#     uart_send_str("not understood\r\n\r\n");
 194:	00001317          	auipc	x6,0x1
 198:	cf030067          	jalr	x0,-784(x6) # e84 <uart_send_str>
#   } else if (strings_equal(words[0], "t")) {
 19c:	000015b7          	lui	x11,0x1
 1a0:	02858593          	addi	x11,x11,40 # 1028 <delay+0xf8>
 1a4:	00040513          	addi	x10,x8,0
 1a8:	00001097          	auipc	x1,0x1
 1ac:	cac080e7          	jalr	x1,-852(x1) # e54 <strings_equal>
 1b0:	02050e63          	beq	x10,x0,1ec <handle_inbuf+0x12c>
#     if (nwords < 2) {
 1b4:	00100793          	addi	x15,x0,1
 1b8:	00f49863          	bne	x9,x15,1c8 <handle_inbuf+0x108>
#       uart_send_str("take what\r\n\r\n");
 1bc:	00001537          	lui	x10,0x1
 1c0:	02c50513          	addi	x10,x10,44 # 102c <delay+0xfc>
 1c4:	fc1ff06f          	jal	x0,184 <handle_inbuf+0xc4>
# }
 1c8:	02812403          	lw	x8,40(x2)
#     action_take(active_entity, words[1]);
 1cc:	000027b7          	lui	x15,0x2
 1d0:	00412583          	lw	x11,4(x2)
# }
 1d4:	02c12083          	lw	x1,44(x2)
 1d8:	02412483          	lw	x9,36(x2)
#     action_take(active_entity, words[1]);
 1dc:	5d87c503          	lbu	x10,1496(x15) # 25d8 <active_entity>
# }
 1e0:	03010113          	addi	x2,x2,48
#     action_take(active_entity, words[1]);
 1e4:	00000317          	auipc	x6,0x0
 1e8:	5ac30067          	jalr	x0,1452(x6) # 790 <action_take>
#   } else if (strings_equal(words[0], "d")) {
 1ec:	000015b7          	lui	x11,0x1
 1f0:	03c58593          	addi	x11,x11,60 # 103c <delay+0x10c>
 1f4:	00040513          	addi	x10,x8,0
 1f8:	00001097          	auipc	x1,0x1
 1fc:	c5c080e7          	jalr	x1,-932(x1) # e54 <strings_equal>
 200:	02050e63          	beq	x10,x0,23c <handle_inbuf+0x17c>
#     if (nwords < 2) {
 204:	00100793          	addi	x15,x0,1
 208:	00f49863          	bne	x9,x15,218 <handle_inbuf+0x158>
#       uart_send_str("drop what\r\n\r\n");
 20c:	00001537          	lui	x10,0x1
 210:	04050513          	addi	x10,x10,64 # 1040 <delay+0x110>
 214:	f71ff06f          	jal	x0,184 <handle_inbuf+0xc4>
# }
 218:	02812403          	lw	x8,40(x2)
#     action_drop(active_entity, words[1]);
 21c:	000027b7          	lui	x15,0x2
 220:	00412583          	lw	x11,4(x2)
# }
 224:	02c12083          	lw	x1,44(x2)
 228:	02412483          	lw	x9,36(x2)
#     action_drop(active_entity, words[1]);
 22c:	5d87c503          	lbu	x10,1496(x15) # 25d8 <active_entity>
# }
 230:	03010113          	addi	x2,x2,48
#     action_drop(active_entity, words[1]);
 234:	00000317          	auipc	x6,0x0
 238:	6d030067          	jalr	x0,1744(x6) # 904 <action_drop>
#   } else if (strings_equal(words[0], "n")) {
 23c:	000015b7          	lui	x11,0x1
 240:	05058593          	addi	x11,x11,80 # 1050 <delay+0x120>
 244:	00040513          	addi	x10,x8,0
 248:	00001097          	auipc	x1,0x1
 24c:	c0c080e7          	jalr	x1,-1012(x1) # e54 <strings_equal>
#     action_go(active_entity, 0);
 250:	00000593          	addi	x11,x0,0
#   } else if (strings_equal(words[0], "n")) {
 254:	04051c63          	bne	x10,x0,2ac <handle_inbuf+0x1ec>
#   } else if (strings_equal(words[0], "e")) {
 258:	000015b7          	lui	x11,0x1
 25c:	fa858593          	addi	x11,x11,-88 # fa8 <delay+0x78>
 260:	00040513          	addi	x10,x8,0
 264:	00001097          	auipc	x1,0x1
 268:	bf0080e7          	jalr	x1,-1040(x1) # e54 <strings_equal>
#     action_go(active_entity, 1);
 26c:	00100593          	addi	x11,x0,1
#   } else if (strings_equal(words[0], "e")) {
 270:	02051e63          	bne	x10,x0,2ac <handle_inbuf+0x1ec>
#   } else if (strings_equal(words[0], "s")) {
 274:	000015b7          	lui	x11,0x1
 278:	05458593          	addi	x11,x11,84 # 1054 <delay+0x124>
 27c:	00040513          	addi	x10,x8,0
 280:	00001097          	auipc	x1,0x1
 284:	bd4080e7          	jalr	x1,-1068(x1) # e54 <strings_equal>
#     action_go(active_entity, 2);
 288:	00200593          	addi	x11,x0,2
#   } else if (strings_equal(words[0], "s")) {
 28c:	02051063          	bne	x10,x0,2ac <handle_inbuf+0x1ec>
#   } else if (strings_equal(words[0], "w")) {
 290:	000015b7          	lui	x11,0x1
 294:	05858593          	addi	x11,x11,88 # 1058 <delay+0x128>
 298:	00040513          	addi	x10,x8,0
 29c:	00001097          	auipc	x1,0x1
 2a0:	bb8080e7          	jalr	x1,-1096(x1) # e54 <strings_equal>
 2a4:	02050463          	beq	x10,x0,2cc <handle_inbuf+0x20c>
#     action_go(active_entity, 3);
 2a8:	00300593          	addi	x11,x0,3
# }
 2ac:	02812403          	lw	x8,40(x2)
#     action_go(active_entity, 3);
 2b0:	000027b7          	lui	x15,0x2
# }
 2b4:	02c12083          	lw	x1,44(x2)
 2b8:	02412483          	lw	x9,36(x2)
#     action_go(active_entity, 3);
 2bc:	5d87c503          	lbu	x10,1496(x15) # 25d8 <active_entity>
# }
 2c0:	03010113          	addi	x2,x2,48
#     action_go(active_entity, 3);
 2c4:	00000317          	auipc	x6,0x0
 2c8:	7c430067          	jalr	x0,1988(x6) # a88 <action_go>
#   } else if (strings_equal(words[0], "g")) {
 2cc:	000015b7          	lui	x11,0x1
 2d0:	05c58593          	addi	x11,x11,92 # 105c <delay+0x12c>
 2d4:	00040513          	addi	x10,x8,0
 2d8:	00001097          	auipc	x1,0x1
 2dc:	b7c080e7          	jalr	x1,-1156(x1) # e54 <strings_equal>
 2e0:	04050a63          	beq	x10,x0,334 <handle_inbuf+0x274>
#     if (nwords < 2) {
 2e4:	00100793          	addi	x15,x0,1
 2e8:	00f49863          	bne	x9,x15,2f8 <handle_inbuf+0x238>
#       uart_send_str("give what\r\n\r\n");
 2ec:	00001537          	lui	x10,0x1
 2f0:	06050513          	addi	x10,x10,96 # 1060 <delay+0x130>
 2f4:	e91ff06f          	jal	x0,184 <handle_inbuf+0xc4>
#     if (nwords < 3) {
 2f8:	00200793          	addi	x15,x0,2
 2fc:	00f49863          	bne	x9,x15,30c <handle_inbuf+0x24c>
#       uart_send_str("give to whom\r\n\r\n");
 300:	00001537          	lui	x10,0x1
 304:	07050513          	addi	x10,x10,112 # 1070 <delay+0x140>
 308:	e7dff06f          	jal	x0,184 <handle_inbuf+0xc4>
# }
 30c:	02812403          	lw	x8,40(x2)
#     action_give(active_entity, words[1], words[2]);
 310:	000027b7          	lui	x15,0x2
 314:	00812603          	lw	x12,8(x2)
 318:	00412583          	lw	x11,4(x2)
# }
 31c:	02c12083          	lw	x1,44(x2)
 320:	02412483          	lw	x9,36(x2)
#     action_give(active_entity, words[1], words[2]);
 324:	5d87c503          	lbu	x10,1496(x15) # 25d8 <active_entity>
# }
 328:	03010113          	addi	x2,x2,48
#     action_give(active_entity, words[1], words[2]);
 32c:	00001317          	auipc	x6,0x1
 330:	85c30067          	jalr	x0,-1956(x6) # b88 <action_give>
#     uart_send_str("not understood\r\n\r\n");
 334:	00001537          	lui	x10,0x1
 338:	08450513          	addi	x10,x10,132 # 1084 <delay+0x154>
 33c:	e49ff06f          	jal	x0,184 <handle_inbuf+0xc4>

00000340 <print_location>:
# 
# void print_location(location_id lid, entity_id eid_exclude_from_output) {
 340:	fd010113          	addi	x2,x2,-48
 344:	03212023          	sw	x18,32(x2)
 348:	00050913          	addi	x18,x10,0
 34c:	02812423          	sw	x8,40(x2)
#   const location *loc = &locations[lid];
#   uart_send_str("u r in ");
#   uart_send_str(loc->name);
 350:	00391413          	slli	x8,x18,0x3
 354:	01240433          	add	x8,x8,x18
#   uart_send_str("u r in ");
 358:	00001537          	lui	x10,0x1
#   uart_send_str(loc->name);
 35c:	00241413          	slli	x8,x8,0x2
# void print_location(location_id lid, entity_id eid_exclude_from_output) {
 360:	02912223          	sw	x9,36(x2)
#   uart_send_str("u r in ");
 364:	09850513          	addi	x10,x10,152 # 1098 <delay+0x168>
#   uart_send_str(loc->name);
 368:	000024b7          	lui	x9,0x2
 36c:	01240433          	add	x8,x8,x18
# void print_location(location_id lid, entity_id eid_exclude_from_output) {
 370:	02112623          	sw	x1,44(x2)
 374:	01312e23          	sw	x19,28(x2)
 378:	01412c23          	sw	x20,24(x2)
 37c:	00058993          	addi	x19,x11,0
#   uart_send_str(loc->name);
 380:	2cc48a13          	addi	x20,x9,716 # 22cc <locations>
# void print_location(location_id lid, entity_id eid_exclude_from_output) {
 384:	01512a23          	sw	x21,20(x2)
#   uart_send_str(loc->name);
 388:	00241413          	slli	x8,x8,0x2
# void print_location(location_id lid, entity_id eid_exclude_from_output) {
 38c:	01612823          	sw	x22,16(x2)
 390:	01712623          	sw	x23,12(x2)
 394:	01812423          	sw	x24,8(x2)
 398:	01912223          	sw	x25,4(x2)
#   uart_send_str("u r in ");
 39c:	00001097          	auipc	x1,0x1
 3a0:	ae8080e7          	jalr	x1,-1304(x1) # e84 <uart_send_str>
#   uart_send_str(loc->name);
 3a4:	008a07b3          	add	x15,x20,x8
 3a8:	0007a503          	lw	x10,0(x15)
#   uart_send_str("\r\nu c: ");
# 
#   // print objects in current location
#   bool add_list_sep = FALSE;
#   const object_id *objs = loc->objects;
 3ac:	00440a93          	addi	x21,x8,4
 3b0:	014a8ab3          	add	x21,x21,x20
#   uart_send_str(loc->name);
 3b4:	00001097          	auipc	x1,0x1
 3b8:	ad0080e7          	jalr	x1,-1328(x1) # e84 <uart_send_str>
#   uart_send_str("\r\nu c: ");
 3bc:	00001537          	lui	x10,0x1
 3c0:	0a050513          	addi	x10,x10,160 # 10a0 <delay+0x170>
 3c4:	00001097          	auipc	x1,0x1
 3c8:	ac0080e7          	jalr	x1,-1344(x1) # e84 <uart_send_str>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
#     const object_id oid = objs[i];
 3cc:	000ac903          	lbu	x18,0(x21)
#     if (!oid)
 3d0:	2cc48493          	addi	x9,x9,716
 3d4:	18090463          	beq	x18,x0,55c <print_location+0x21c>
#     if (add_list_sep) {
#       uart_send_str(", ");
#     } else {
#       add_list_sep = TRUE;
#     }
#     uart_send_str(objects[oid].name);
 3d8:	00002b37          	lui	x22,0x2
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 3dc:	00000a13          	addi	x20,x0,0
#     uart_send_str(objects[oid].name);
 3e0:	244b0b13          	addi	x22,x22,580 # 2244 <objects>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 3e4:	08000b93          	addi	x23,x0,128
#       uart_send_str(", ");
 3e8:	00001c37          	lui	x24,0x1
#     uart_send_str(objects[oid].name);
 3ec:	00291913          	slli	x18,x18,0x2
 3f0:	012b0933          	add	x18,x22,x18
 3f4:	00092503          	lw	x10,0(x18)
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 3f8:	001a0a13          	addi	x20,x20,1
#     uart_send_str(objects[oid].name);
 3fc:	00001097          	auipc	x1,0x1
 400:	a88080e7          	jalr	x1,-1400(x1) # e84 <uart_send_str>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 404:	017a0863          	beq	x20,x23,414 <print_location+0xd4>
#     const object_id oid = objs[i];
 408:	014a87b3          	add	x15,x21,x20
 40c:	0007c903          	lbu	x18,0(x15)
#     if (!oid)
 410:	12091e63          	bne	x18,x0,54c <print_location+0x20c>
#   }
#   if (!add_list_sep) {
#     uart_send_str("nothing");
#   }
#   uart_send_str("\r\n");
 414:	00001a37          	lui	x20,0x1
 418:	094a0513          	addi	x10,x20,148 # 1094 <delay+0x164>
 41c:	00001097          	auipc	x1,0x1
 420:	a68080e7          	jalr	x1,-1432(x1) # e84 <uart_send_str>
#     if (add_list_sep) {
#       uart_send_str(", ");
#     } else {
#       add_list_sep = TRUE;
#     }
#     uart_send_str(entities[eid].name);
 424:	00002937          	lui	x18,0x2
 428:	08440b13          	addi	x22,x8,132
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 42c:	00000c13          	addi	x24,x0,0
#   add_list_sep = FALSE;
 430:	00000793          	addi	x15,x0,0
#     uart_send_str(entities[eid].name);
 434:	25490913          	addi	x18,x18,596 # 2254 <entities>
#       uart_send_str(", ");
 438:	00001bb7          	lui	x23,0x1
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 43c:	00800a93          	addi	x21,x0,8
#     const entity_id eid = ents[i];
 440:	016c0733          	add	x14,x24,x22
 444:	00e48733          	add	x14,x9,x14
 448:	00074c83          	lbu	x25,0(x14)
#     if (!eid)
 44c:	040c8063          	beq	x25,x0,48c <print_location+0x14c>
#     if (eid == eid_exclude_from_output)
 450:	033c8a63          	beq	x25,x19,484 <print_location+0x144>
#     if (add_list_sep) {
 454:	00078863          	beq	x15,x0,464 <print_location+0x124>
#       uart_send_str(", ");
 458:	0a8b8513          	addi	x10,x23,168 # 10a8 <delay+0x178>
 45c:	00001097          	auipc	x1,0x1
 460:	a28080e7          	jalr	x1,-1496(x1) # e84 <uart_send_str>
#     uart_send_str(entities[eid].name);
 464:	002c9793          	slli	x15,x25,0x2
 468:	019787b3          	add	x15,x15,x25
 46c:	00379793          	slli	x15,x15,0x3
 470:	00f907b3          	add	x15,x18,x15
 474:	0007a503          	lw	x10,0(x15)
 478:	00001097          	auipc	x1,0x1
 47c:	a0c080e7          	jalr	x1,-1524(x1) # e84 <uart_send_str>
 480:	00100793          	addi	x15,x0,1
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 484:	001c0c13          	addi	x24,x24,1 # 1001 <delay+0xd1>
 488:	fb5c1ce3          	bne	x24,x21,440 <print_location+0x100>
#   }
#   if (add_list_sep) {
 48c:	00078a63          	beq	x15,x0,4a0 <print_location+0x160>
#     uart_send_str(" is here\r\n");
 490:	00001537          	lui	x10,0x1
 494:	0ac50513          	addi	x10,x10,172 # 10ac <delay+0x17c>
 498:	00001097          	auipc	x1,0x1
 49c:	9ec080e7          	jalr	x1,-1556(x1) # e84 <uart_send_str>
#   }
# 
#   // print exits from current location
#   add_list_sep = FALSE;
#   uart_send_str("exits: ");
 4a0:	00001537          	lui	x10,0x1
 4a4:	0b850513          	addi	x10,x10,184 # 10b8 <delay+0x188>
 4a8:	008484b3          	add	x9,x9,x8
 4ac:	00002437          	lui	x8,0x2
 4b0:	00001097          	auipc	x1,0x1
 4b4:	9d4080e7          	jalr	x1,-1580(x1) # e84 <uart_send_str>
#   for (unsigned i = 0; i < LOCATION_MAX_EXITS; i++) {
 4b8:	5b040413          	addi	x8,x8,1456 # 25b0 <exit_names>
 4bc:	01840913          	addi	x18,x8,24
#   add_list_sep = FALSE;
 4c0:	00000793          	addi	x15,x0,0
#     if (!loc->exits[i])
#       continue;
#     if (add_list_sep) {
#       uart_send_str(", ");
 4c4:	000019b7          	lui	x19,0x1
#     if (!loc->exits[i])
 4c8:	08c4c703          	lbu	x14,140(x9)
 4cc:	02070263          	beq	x14,x0,4f0 <print_location+0x1b0>
#     if (add_list_sep) {
 4d0:	00078863          	beq	x15,x0,4e0 <print_location+0x1a0>
#       uart_send_str(", ");
 4d4:	0a898513          	addi	x10,x19,168 # 10a8 <delay+0x178>
 4d8:	00001097          	auipc	x1,0x1
 4dc:	9ac080e7          	jalr	x1,-1620(x1) # e84 <uart_send_str>
#     } else {
#       add_list_sep = TRUE;
#     }
#     uart_send_str(exit_names[i]);
 4e0:	00042503          	lw	x10,0(x8)
 4e4:	00001097          	auipc	x1,0x1
 4e8:	9a0080e7          	jalr	x1,-1632(x1) # e84 <uart_send_str>
 4ec:	00100793          	addi	x15,x0,1
#   for (unsigned i = 0; i < LOCATION_MAX_EXITS; i++) {
 4f0:	00440413          	addi	x8,x8,4
 4f4:	00148493          	addi	x9,x9,1
 4f8:	fd2418e3          	bne	x8,x18,4c8 <print_location+0x188>
#   }
#   if (!add_list_sep) {
 4fc:	00079a63          	bne	x15,x0,510 <print_location+0x1d0>
#     uart_send_str("none");
 500:	00001537          	lui	x10,0x1
 504:	0c050513          	addi	x10,x10,192 # 10c0 <delay+0x190>
 508:	00001097          	auipc	x1,0x1
 50c:	97c080e7          	jalr	x1,-1668(x1) # e84 <uart_send_str>
#   }
#   uart_send_str("\r\n");
# }
 510:	02812403          	lw	x8,40(x2)
 514:	02c12083          	lw	x1,44(x2)
 518:	02412483          	lw	x9,36(x2)
 51c:	02012903          	lw	x18,32(x2)
 520:	01c12983          	lw	x19,28(x2)
 524:	01412a83          	lw	x21,20(x2)
 528:	01012b03          	lw	x22,16(x2)
 52c:	00c12b83          	lw	x23,12(x2)
 530:	00812c03          	lw	x24,8(x2)
 534:	00412c83          	lw	x25,4(x2)
#   uart_send_str("\r\n");
 538:	094a0513          	addi	x10,x20,148
# }
 53c:	01812a03          	lw	x20,24(x2)
 540:	03010113          	addi	x2,x2,48
#   uart_send_str("\r\n");
 544:	00001317          	auipc	x6,0x1
 548:	94030067          	jalr	x0,-1728(x6) # e84 <uart_send_str>
#       uart_send_str(", ");
 54c:	0a8c0513          	addi	x10,x24,168
 550:	00001097          	auipc	x1,0x1
 554:	934080e7          	jalr	x1,-1740(x1) # e84 <uart_send_str>
 558:	e95ff06f          	jal	x0,3ec <print_location+0xac>
#     uart_send_str("nothing");
 55c:	00001537          	lui	x10,0x1
 560:	0c850513          	addi	x10,x10,200 # 10c8 <delay+0x198>
 564:	00001097          	auipc	x1,0x1
 568:	920080e7          	jalr	x1,-1760(x1) # e84 <uart_send_str>
 56c:	ea9ff06f          	jal	x0,414 <print_location+0xd4>

00000570 <action_inventory>:
# 
# void action_inventory(entity_id eid) {
 570:	fe010113          	addi	x2,x2,-32
 574:	00912a23          	sw	x9,20(x2)
 578:	00050493          	addi	x9,x10,0
#   uart_send_str("u have: ");
 57c:	00001537          	lui	x10,0x1
# void action_inventory(entity_id eid) {
 580:	00812c23          	sw	x8,24(x2)
#   uart_send_str("u have: ");
 584:	0d050513          	addi	x10,x10,208 # 10d0 <delay+0x1a0>
#   bool add_list_sep = FALSE;
#   const object_id *objs = entities[eid].objects;
 588:	00249413          	slli	x8,x9,0x2
 58c:	00940433          	add	x8,x8,x9
# void action_inventory(entity_id eid) {
 590:	00112e23          	sw	x1,28(x2)
 594:	01212823          	sw	x18,16(x2)
 598:	01312623          	sw	x19,12(x2)
 59c:	01412423          	sw	x20,8(x2)
 5a0:	01512223          	sw	x21,4(x2)
#   uart_send_str("u have: ");
 5a4:	00001097          	auipc	x1,0x1
 5a8:	8e0080e7          	jalr	x1,-1824(x1) # e84 <uart_send_str>
#   const object_id *objs = entities[eid].objects;
 5ac:	00341413          	slli	x8,x8,0x3
 5b0:	000027b7          	lui	x15,0x2
 5b4:	00540413          	addi	x8,x8,5
 5b8:	25478793          	addi	x15,x15,596 # 2254 <entities>
 5bc:	00f40433          	add	x8,x8,x15
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
#     const object_id id = objs[i];
 5c0:	00044483          	lbu	x9,0(x8)
#     if (!id)
 5c4:	08048063          	beq	x9,x0,644 <action_inventory+0xd4>
#     if (add_list_sep) {
#       uart_send_str(", ");
#     } else {
#       add_list_sep = TRUE;
#     }
#     uart_send_str(objects[id].name);
 5c8:	000029b7          	lui	x19,0x2
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 5cc:	00000913          	addi	x18,x0,0
#     uart_send_str(objects[id].name);
 5d0:	24498993          	addi	x19,x19,580 # 2244 <objects>
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 5d4:	02000a13          	addi	x20,x0,32
#       uart_send_str(", ");
 5d8:	00001ab7          	lui	x21,0x1
#     uart_send_str(objects[id].name);
 5dc:	00249493          	slli	x9,x9,0x2
 5e0:	009984b3          	add	x9,x19,x9
 5e4:	0004a503          	lw	x10,0(x9)
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 5e8:	00190913          	addi	x18,x18,1
#     uart_send_str(objects[id].name);
 5ec:	00001097          	auipc	x1,0x1
 5f0:	898080e7          	jalr	x1,-1896(x1) # e84 <uart_send_str>
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 5f4:	01490863          	beq	x18,x20,604 <action_inventory+0x94>
#     const object_id id = objs[i];
 5f8:	012407b3          	add	x15,x8,x18
 5fc:	0007c483          	lbu	x9,0(x15)
#     if (!id)
 600:	02049a63          	bne	x9,x0,634 <action_inventory+0xc4>
#   }
#   if (!add_list_sep) {
#     uart_send_str("nothing");
#   }
#   uart_send_str("\r\n");
# }
 604:	01812403          	lw	x8,24(x2)
 608:	01c12083          	lw	x1,28(x2)
 60c:	01412483          	lw	x9,20(x2)
 610:	01012903          	lw	x18,16(x2)
 614:	00c12983          	lw	x19,12(x2)
 618:	00812a03          	lw	x20,8(x2)
 61c:	00412a83          	lw	x21,4(x2)
#   uart_send_str("\r\n");
 620:	00001537          	lui	x10,0x1
 624:	09450513          	addi	x10,x10,148 # 1094 <delay+0x164>
# }
 628:	02010113          	addi	x2,x2,32
#   uart_send_str("\r\n");
 62c:	00001317          	auipc	x6,0x1
 630:	85830067          	jalr	x0,-1960(x6) # e84 <uart_send_str>
#       uart_send_str(", ");
 634:	0a8a8513          	addi	x10,x21,168 # 10a8 <delay+0x178>
 638:	00001097          	auipc	x1,0x1
 63c:	84c080e7          	jalr	x1,-1972(x1) # e84 <uart_send_str>
 640:	f9dff06f          	jal	x0,5dc <action_inventory+0x6c>
#     uart_send_str("nothing");
 644:	00001537          	lui	x10,0x1
 648:	0c850513          	addi	x10,x10,200 # 10c8 <delay+0x198>
 64c:	00001097          	auipc	x1,0x1
 650:	838080e7          	jalr	x1,-1992(x1) # e84 <uart_send_str>
 654:	fb1ff06f          	jal	x0,604 <action_inventory+0x94>

00000658 <remove_object_from_list_by_index>:
# 
# void remove_object_from_list_by_index(object_id list[], unsigned ix) {
#   object_id *ptr = &list[ix];
 658:	00b50533          	add	x10,x10,x11
#   while (1) {
#     object_id *nxt = ptr + 1;
#     *ptr = *nxt;
 65c:	00154783          	lbu	x15,1(x10)
 660:	00f50023          	sb	x15,0(x10)
#     if (!*ptr)
 664:	00078663          	beq	x15,x0,670 <remove_object_from_list_by_index+0x18>
#       return;
#     ptr++;
 668:	00150513          	addi	x10,x10,1
#   while (1) {
 66c:	ff1ff06f          	jal	x0,65c <remove_object_from_list_by_index+0x4>
#   }
# }
 670:	00008067          	jalr	x0,0(x1)

00000674 <add_object_to_list>:
# 
# bool add_object_to_list(object_id list[], unsigned list_len, object_id oid) {
#   for (unsigned i = 0; i < list_len - 1; i++) {
 674:	00000793          	addi	x15,x0,0
 678:	fff58593          	addi	x11,x11,-1
 67c:	02b7e663          	bltu	x15,x11,6a8 <add_object_to_list+0x34>
#       continue;
#     list[i] = oid;
#     list[i + 1] = 0;
#     return TRUE;
#   }
#   uart_send_str("space full\r\n");
 680:	00001537          	lui	x10,0x1
# bool add_object_to_list(object_id list[], unsigned list_len, object_id oid) {
 684:	ff010113          	addi	x2,x2,-16
#   uart_send_str("space full\r\n");
 688:	0dc50513          	addi	x10,x10,220 # 10dc <delay+0x1ac>
# bool add_object_to_list(object_id list[], unsigned list_len, object_id oid) {
 68c:	00112623          	sw	x1,12(x2)
#   uart_send_str("space full\r\n");
 690:	00000097          	auipc	x1,0x0
 694:	7f4080e7          	jalr	x1,2036(x1) # e84 <uart_send_str>
#   return FALSE;
# }
 698:	00c12083          	lw	x1,12(x2)
#   return FALSE;
 69c:	00000513          	addi	x10,x0,0
# }
 6a0:	01010113          	addi	x2,x2,16
 6a4:	00008067          	jalr	x0,0(x1)
#   for (unsigned i = 0; i < list_len - 1; i++) {
 6a8:	00178713          	addi	x14,x15,1
#     if (list[i])
 6ac:	00f507b3          	add	x15,x10,x15
 6b0:	0007c683          	lbu	x13,0(x15)
 6b4:	00069c63          	bne	x13,x0,6cc <add_object_to_list+0x58>
#     list[i + 1] = 0;
 6b8:	00e50533          	add	x10,x10,x14
#     list[i] = oid;
 6bc:	00c78023          	sb	x12,0(x15)
#     list[i + 1] = 0;
 6c0:	00050023          	sb	x0,0(x10)
#     return TRUE;
 6c4:	00100513          	addi	x10,x0,1
# }
 6c8:	00008067          	jalr	x0,0(x1)
#   for (unsigned i = 0; i < list_len - 1; i++) {
 6cc:	00070793          	addi	x15,x14,0
 6d0:	fadff06f          	jal	x0,67c <add_object_to_list+0x8>

000006d4 <add_entity_to_list>:
# 
# bool add_entity_to_list(entity_id list[], unsigned list_len, entity_id eid) {
#   for (unsigned i = 0; i < list_len - 1; i++) {
 6d4:	00000793          	addi	x15,x0,0
 6d8:	fff58593          	addi	x11,x11,-1
 6dc:	02b7e663          	bltu	x15,x11,708 <add_entity_to_list+0x34>
#       continue;
#     list[i] = eid;
#     list[i + 1] = 0;
#     return TRUE;
#   }
#   uart_send_str("location full\r\n");
 6e0:	00001537          	lui	x10,0x1
# bool add_entity_to_list(entity_id list[], unsigned list_len, entity_id eid) {
 6e4:	ff010113          	addi	x2,x2,-16
#   uart_send_str("location full\r\n");
 6e8:	0ec50513          	addi	x10,x10,236 # 10ec <delay+0x1bc>
# bool add_entity_to_list(entity_id list[], unsigned list_len, entity_id eid) {
 6ec:	00112623          	sw	x1,12(x2)
#   uart_send_str("location full\r\n");
 6f0:	00000097          	auipc	x1,0x0
 6f4:	794080e7          	jalr	x1,1940(x1) # e84 <uart_send_str>
#   return FALSE;
# }
 6f8:	00c12083          	lw	x1,12(x2)
#   return FALSE;
 6fc:	00000513          	addi	x10,x0,0
# }
 700:	01010113          	addi	x2,x2,16
 704:	00008067          	jalr	x0,0(x1)
#   for (unsigned i = 0; i < list_len - 1; i++) {
 708:	00178713          	addi	x14,x15,1
#     if (list[i])
 70c:	00f507b3          	add	x15,x10,x15
 710:	0007c683          	lbu	x13,0(x15)
 714:	00069c63          	bne	x13,x0,72c <add_entity_to_list+0x58>
#     list[i + 1] = 0;
 718:	00e50533          	add	x10,x10,x14
#     list[i] = eid;
 71c:	00c78023          	sb	x12,0(x15)
#     list[i + 1] = 0;
 720:	00050023          	sb	x0,0(x10)
#     return TRUE;
 724:	00100513          	addi	x10,x0,1
# }
 728:	00008067          	jalr	x0,0(x1)
#   for (unsigned i = 0; i < list_len - 1; i++) {
 72c:	00070793          	addi	x15,x14,0
 730:	fadff06f          	jal	x0,6dc <add_entity_to_list+0x8>

00000734 <remove_entity_from_list>:
# 
# void remove_entity_from_list(entity_id list[], unsigned list_len,
#                              entity_id eid) {
#   for (unsigned i = 0; i < list_len - 1; i++) {
 734:	fff58813          	addi	x16,x11,-1
 738:	00a585b3          	add	x11,x11,x10
 73c:	00000713          	addi	x14,x0,0
 740:	fff58593          	addi	x11,x11,-1
 744:	01076a63          	bltu	x14,x16,758 <remove_entity_from_list+0x24>
#       list[j] = list[j + 1];
#       if (!list[j])
#         return;
#     }
#   }
#   uart_send_str("entity not here\r\n");
 748:	00001537          	lui	x10,0x1
 74c:	0fc50513          	addi	x10,x10,252 # 10fc <delay+0x1cc>
 750:	00000317          	auipc	x6,0x0
 754:	73430067          	jalr	x0,1844(x6) # e84 <uart_send_str>
#     if (list[i] != eid)
 758:	00e507b3          	add	x15,x10,x14
 75c:	0007c683          	lbu	x13,0(x15)
 760:	00c68e63          	beq	x13,x12,77c <remove_entity_from_list+0x48>
#   for (unsigned i = 0; i < list_len - 1; i++) {
 764:	00170713          	addi	x14,x14,1
 768:	fddff06f          	jal	x0,744 <remove_entity_from_list+0x10>
#       list[j] = list[j + 1];
 76c:	0017c683          	lbu	x13,1(x15)
#       if (!list[j])
 770:	00178793          	addi	x15,x15,1
#       list[j] = list[j + 1];
 774:	fed78fa3          	sb	x13,-1(x15)
#       if (!list[j])
 778:	00068663          	beq	x13,x0,784 <remove_entity_from_list+0x50>
#     for (unsigned j = i; j < list_len - 1; j++) {
 77c:	feb798e3          	bne	x15,x11,76c <remove_entity_from_list+0x38>
 780:	fe5ff06f          	jal	x0,764 <remove_entity_from_list+0x30>
# }
 784:	00008067          	jalr	x0,0(x1)

00000788 <remove_entity_from_list_by_index>:
# 
# void remove_entity_from_list_by_index(entity_id list[], unsigned ix) {
 788:	00000317          	auipc	x6,0x0
 78c:	ed030067          	jalr	x0,-304(x6) # 658 <remove_object_from_list_by_index>

00000790 <action_take>:
#       return;
#     ptr++;
#   }
# }
# 
# void action_take(entity_id eid, object_name obj) {
 790:	fd010113          	addi	x2,x2,-48
 794:	01312e23          	sw	x19,28(x2)
 798:	00050993          	addi	x19,x10,0
 79c:	02912223          	sw	x9,36(x2)
#   entity *ent = &entities[eid];
#   object_id *objs = locations[ent->location].objects;
 7a0:	00299493          	slli	x9,x19,0x2
 7a4:	00002537          	lui	x10,0x2
 7a8:	01348733          	add	x14,x9,x19
 7ac:	25450793          	addi	x15,x10,596 # 2254 <entities>
 7b0:	00371713          	slli	x14,x14,0x3
 7b4:	00e787b3          	add	x15,x15,x14
 7b8:	0047c783          	lbu	x15,4(x15)
# void action_take(entity_id eid, object_name obj) {
 7bc:	02812423          	sw	x8,40(x2)
 7c0:	01612823          	sw	x22,16(x2)
#   object_id *objs = locations[ent->location].objects;
 7c4:	00379413          	slli	x8,x15,0x3
 7c8:	00f40433          	add	x8,x8,x15
 7cc:	00241413          	slli	x8,x8,0x2
 7d0:	00f40433          	add	x8,x8,x15
 7d4:	00241413          	slli	x8,x8,0x2
 7d8:	000027b7          	lui	x15,0x2
 7dc:	00440413          	addi	x8,x8,4
 7e0:	2cc78793          	addi	x15,x15,716 # 22cc <locations>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
#     const object_id oid = objs[i];
#     if (!oid)
#       break;
#     if (!strings_equal(objects[oid].name, obj))
 7e4:	00002b37          	lui	x22,0x2
# void action_take(entity_id eid, object_name obj) {
 7e8:	03212023          	sw	x18,32(x2)
 7ec:	01412c23          	sw	x20,24(x2)
 7f0:	01512a23          	sw	x21,20(x2)
 7f4:	02112623          	sw	x1,44(x2)
 7f8:	00058a13          	addi	x20,x11,0
#   object_id *objs = locations[ent->location].objects;
 7fc:	00f40433          	add	x8,x8,x15
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 800:	00000913          	addi	x18,x0,0
 804:	25450a93          	addi	x21,x10,596
#     if (!strings_equal(objects[oid].name, obj))
 808:	244b0b13          	addi	x22,x22,580 # 2244 <objects>
#     const object_id oid = objs[i];
 80c:	012407b3          	add	x15,x8,x18
 810:	0007c603          	lbu	x12,0(x15)
#     if (!oid)
 814:	02060a63          	beq	x12,x0,848 <action_take+0xb8>
#     if (!strings_equal(objects[oid].name, obj))
 818:	00261793          	slli	x15,x12,0x2
 81c:	00fb07b3          	add	x15,x22,x15
 820:	0007a503          	lw	x10,0(x15)
 824:	000a0593          	addi	x11,x20,0
 828:	00c12623          	sw	x12,12(x2)
 82c:	00000097          	auipc	x1,0x0
 830:	628080e7          	jalr	x1,1576(x1) # e54 <strings_equal>
 834:	00c12603          	lw	x12,12(x2)
 838:	04051863          	bne	x10,x0,888 <action_take+0xf8>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 83c:	00190913          	addi	x18,x18,1
 840:	08000793          	addi	x15,x0,128
 844:	fcf914e3          	bne	x18,x15,80c <action_take+0x7c>
#     if (add_object_to_list(ent->objects, ENTITY_MAX_OBJECTS, oid)) {
#       remove_object_from_list_by_index(objs, i);
#     }
#     return;
#   }
#   uart_send_str(obj);
 848:	000a0513          	addi	x10,x20,0
 84c:	00000097          	auipc	x1,0x0
 850:	638080e7          	jalr	x1,1592(x1) # e84 <uart_send_str>
#   uart_send_str(" not here\r\n\r\n");
# }
 854:	02812403          	lw	x8,40(x2)
 858:	02c12083          	lw	x1,44(x2)
 85c:	02412483          	lw	x9,36(x2)
 860:	02012903          	lw	x18,32(x2)
 864:	01c12983          	lw	x19,28(x2)
 868:	01812a03          	lw	x20,24(x2)
 86c:	01412a83          	lw	x21,20(x2)
 870:	01012b03          	lw	x22,16(x2)
#   uart_send_str(" not here\r\n\r\n");
 874:	00001537          	lui	x10,0x1
 878:	11050513          	addi	x10,x10,272 # 1110 <delay+0x1e0>
# }
 87c:	03010113          	addi	x2,x2,48
#   uart_send_str(" not here\r\n\r\n");
 880:	00000317          	auipc	x6,0x0
 884:	60430067          	jalr	x0,1540(x6) # e84 <uart_send_str>
#     if (add_object_to_list(ent->objects, ENTITY_MAX_OBJECTS, oid)) {
 888:	01348533          	add	x10,x9,x19
 88c:	00351513          	slli	x10,x10,0x3
 890:	00550513          	addi	x10,x10,5
 894:	02000593          	addi	x11,x0,32
 898:	00aa8533          	add	x10,x21,x10
 89c:	00000097          	auipc	x1,0x0
 8a0:	dd8080e7          	jalr	x1,-552(x1) # 674 <add_object_to_list>
 8a4:	02050c63          	beq	x10,x0,8dc <action_take+0x14c>
#       remove_object_from_list_by_index(objs, i);
 8a8:	00040513          	addi	x10,x8,0
# }
 8ac:	02812403          	lw	x8,40(x2)
 8b0:	02c12083          	lw	x1,44(x2)
 8b4:	02412483          	lw	x9,36(x2)
 8b8:	01c12983          	lw	x19,28(x2)
 8bc:	01812a03          	lw	x20,24(x2)
 8c0:	01412a83          	lw	x21,20(x2)
 8c4:	01012b03          	lw	x22,16(x2)
#       remove_object_from_list_by_index(objs, i);
 8c8:	00090593          	addi	x11,x18,0
# }
 8cc:	02012903          	lw	x18,32(x2)
 8d0:	03010113          	addi	x2,x2,48
#       remove_object_from_list_by_index(objs, i);
 8d4:	00000317          	auipc	x6,0x0
 8d8:	d8430067          	jalr	x0,-636(x6) # 658 <remove_object_from_list_by_index>
# }
 8dc:	02c12083          	lw	x1,44(x2)
 8e0:	02812403          	lw	x8,40(x2)
 8e4:	02412483          	lw	x9,36(x2)
 8e8:	02012903          	lw	x18,32(x2)
 8ec:	01c12983          	lw	x19,28(x2)
 8f0:	01812a03          	lw	x20,24(x2)
 8f4:	01412a83          	lw	x21,20(x2)
 8f8:	01012b03          	lw	x22,16(x2)
 8fc:	03010113          	addi	x2,x2,48
 900:	00008067          	jalr	x0,0(x1)

00000904 <action_drop>:
# 
# void action_drop(entity_id eid, object_name obj) {
 904:	fd010113          	addi	x2,x2,-48
 908:	03212023          	sw	x18,32(x2)
#   entity *ent = &entities[eid];
#   object_id *objs = ent->objects;
 90c:	00251913          	slli	x18,x10,0x2
# void action_drop(entity_id eid, object_name obj) {
 910:	02812423          	sw	x8,40(x2)
#   object_id *objs = ent->objects;
 914:	00a90433          	add	x8,x18,x10
 918:	000027b7          	lui	x15,0x2
 91c:	00341413          	slli	x8,x8,0x3
# void action_drop(entity_id eid, object_name obj) {
 920:	01612823          	sw	x22,16(x2)
#   object_id *objs = ent->objects;
 924:	00540413          	addi	x8,x8,5
 928:	25478713          	addi	x14,x15,596 # 2254 <entities>
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
#     const object_id oid = objs[i];
#     if (!oid)
#       break;
#     if (!strings_equal(objects[oid].name, obj))
 92c:	00002b37          	lui	x22,0x2
# void action_drop(entity_id eid, object_name obj) {
 930:	02912223          	sw	x9,36(x2)
 934:	01312e23          	sw	x19,28(x2)
 938:	01412c23          	sw	x20,24(x2)
 93c:	01512a23          	sw	x21,20(x2)
 940:	02112623          	sw	x1,44(x2)
 944:	00050a13          	addi	x20,x10,0
 948:	00058a93          	addi	x21,x11,0
#   object_id *objs = ent->objects;
 94c:	00e40433          	add	x8,x8,x14
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 950:	00000993          	addi	x19,x0,0
 954:	25478493          	addi	x9,x15,596
#     if (!strings_equal(objects[oid].name, obj))
 958:	244b0b13          	addi	x22,x22,580 # 2244 <objects>
#     const object_id oid = objs[i];
 95c:	013407b3          	add	x15,x8,x19
 960:	0007c603          	lbu	x12,0(x15)
#     if (!oid)
 964:	02060a63          	beq	x12,x0,998 <action_drop+0x94>
#     if (!strings_equal(objects[oid].name, obj))
 968:	00261793          	slli	x15,x12,0x2
 96c:	00fb07b3          	add	x15,x22,x15
 970:	0007a503          	lw	x10,0(x15)
 974:	000a8593          	addi	x11,x21,0
 978:	00c12623          	sw	x12,12(x2)
 97c:	00000097          	auipc	x1,0x0
 980:	4d8080e7          	jalr	x1,1240(x1) # e54 <strings_equal>
 984:	00c12603          	lw	x12,12(x2)
 988:	06051063          	bne	x10,x0,9e8 <action_drop+0xe4>
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 98c:	00198993          	addi	x19,x19,1
 990:	02000793          	addi	x15,x0,32
 994:	fcf994e3          	bne	x19,x15,95c <action_drop+0x58>
#                            LOCATION_MAX_OBJECTS, oid)) {
#       remove_object_from_list_by_index(objs, i);
#     }
#     return;
#   }
#   uart_send_str("u don't have ");
 998:	00001537          	lui	x10,0x1
 99c:	12050513          	addi	x10,x10,288 # 1120 <delay+0x1f0>
 9a0:	00000097          	auipc	x1,0x0
 9a4:	4e4080e7          	jalr	x1,1252(x1) # e84 <uart_send_str>
#   uart_send_str(obj);
 9a8:	000a8513          	addi	x10,x21,0
 9ac:	00000097          	auipc	x1,0x0
 9b0:	4d8080e7          	jalr	x1,1240(x1) # e84 <uart_send_str>
#   uart_send_str("\r\n\r\n");
# }
 9b4:	02812403          	lw	x8,40(x2)
 9b8:	02c12083          	lw	x1,44(x2)
 9bc:	02412483          	lw	x9,36(x2)
 9c0:	02012903          	lw	x18,32(x2)
 9c4:	01c12983          	lw	x19,28(x2)
 9c8:	01812a03          	lw	x20,24(x2)
 9cc:	01412a83          	lw	x21,20(x2)
 9d0:	01012b03          	lw	x22,16(x2)
#   uart_send_str("\r\n\r\n");
 9d4:	00001537          	lui	x10,0x1
 9d8:	f7850513          	addi	x10,x10,-136 # f78 <delay+0x48>
# }
 9dc:	03010113          	addi	x2,x2,48
#   uart_send_str("\r\n\r\n");
 9e0:	00000317          	auipc	x6,0x0
 9e4:	4a430067          	jalr	x0,1188(x6) # e84 <uart_send_str>
#     if (add_object_to_list(locations[ent->location].objects,
 9e8:	01490933          	add	x18,x18,x20
 9ec:	00391913          	slli	x18,x18,0x3
 9f0:	012487b3          	add	x15,x9,x18
 9f4:	0047c703          	lbu	x14,4(x15)
 9f8:	00002537          	lui	x10,0x2
 9fc:	2cc50513          	addi	x10,x10,716 # 22cc <locations>
 a00:	00371793          	slli	x15,x14,0x3
 a04:	00e787b3          	add	x15,x15,x14
 a08:	00279793          	slli	x15,x15,0x2
 a0c:	00e787b3          	add	x15,x15,x14
 a10:	00279793          	slli	x15,x15,0x2
 a14:	00478793          	addi	x15,x15,4
 a18:	08000593          	addi	x11,x0,128
 a1c:	00f50533          	add	x10,x10,x15
 a20:	00000097          	auipc	x1,0x0
 a24:	c54080e7          	jalr	x1,-940(x1) # 674 <add_object_to_list>
 a28:	02050c63          	beq	x10,x0,a60 <action_drop+0x15c>
#       remove_object_from_list_by_index(objs, i);
 a2c:	00040513          	addi	x10,x8,0
# }
 a30:	02812403          	lw	x8,40(x2)
 a34:	02c12083          	lw	x1,44(x2)
 a38:	02412483          	lw	x9,36(x2)
 a3c:	02012903          	lw	x18,32(x2)
 a40:	01812a03          	lw	x20,24(x2)
 a44:	01412a83          	lw	x21,20(x2)
 a48:	01012b03          	lw	x22,16(x2)
#       remove_object_from_list_by_index(objs, i);
 a4c:	00098593          	addi	x11,x19,0
# }
 a50:	01c12983          	lw	x19,28(x2)
 a54:	03010113          	addi	x2,x2,48
#       remove_object_from_list_by_index(objs, i);
 a58:	00000317          	auipc	x6,0x0
 a5c:	c0030067          	jalr	x0,-1024(x6) # 658 <remove_object_from_list_by_index>
# }
 a60:	02c12083          	lw	x1,44(x2)
 a64:	02812403          	lw	x8,40(x2)
 a68:	02412483          	lw	x9,36(x2)
 a6c:	02012903          	lw	x18,32(x2)
 a70:	01c12983          	lw	x19,28(x2)
 a74:	01812a03          	lw	x20,24(x2)
 a78:	01412a83          	lw	x21,20(x2)
 a7c:	01012b03          	lw	x22,16(x2)
 a80:	03010113          	addi	x2,x2,48
 a84:	00008067          	jalr	x0,0(x1)

00000a88 <action_go>:
# 
# void action_go(entity_id eid, direction dir) {
 a88:	fe010113          	addi	x2,x2,-32
#   entity *ent = &entities[eid];
#   location *loc = &locations[ent->location];
 a8c:	00251793          	slli	x15,x10,0x2
# void action_go(entity_id eid, direction dir) {
 a90:	00912a23          	sw	x9,20(x2)
#   location *loc = &locations[ent->location];
 a94:	00a787b3          	add	x15,x15,x10
 a98:	000024b7          	lui	x9,0x2
 a9c:	00379793          	slli	x15,x15,0x3
 aa0:	25448493          	addi	x9,x9,596 # 2254 <entities>
 aa4:	00f484b3          	add	x9,x9,x15
 aa8:	0044c783          	lbu	x15,4(x9)
# void action_go(entity_id eid, direction dir) {
 aac:	00812c23          	sw	x8,24(x2)
 ab0:	01312623          	sw	x19,12(x2)
#   location_id to = loc->exits[dir];
 ab4:	00379413          	slli	x8,x15,0x3
 ab8:	00f40433          	add	x8,x8,x15
 abc:	00241413          	slli	x8,x8,0x2
 ac0:	00f40433          	add	x8,x8,x15
 ac4:	000029b7          	lui	x19,0x2
 ac8:	2cc98993          	addi	x19,x19,716 # 22cc <locations>
 acc:	00241413          	slli	x8,x8,0x2
 ad0:	008987b3          	add	x15,x19,x8
 ad4:	00b787b3          	add	x15,x15,x11
# void action_go(entity_id eid, direction dir) {
 ad8:	01212823          	sw	x18,16(x2)
#   location_id to = loc->exits[dir];
 adc:	08c7c903          	lbu	x18,140(x15)
# void action_go(entity_id eid, direction dir) {
 ae0:	00112e23          	sw	x1,28(x2)
 ae4:	01412423          	sw	x20,8(x2)
#   if (!to) {
 ae8:	02091863          	bne	x18,x0,b18 <action_go+0x90>
#                          active_entity)) {
#     remove_entity_from_list(loc->entities, LOCATION_MAX_ENTITIES,
#                             active_entity);
#     ent->location = to;
#   }
# }
 aec:	01812403          	lw	x8,24(x2)
 af0:	01c12083          	lw	x1,28(x2)
 af4:	01412483          	lw	x9,20(x2)
 af8:	01012903          	lw	x18,16(x2)
 afc:	00c12983          	lw	x19,12(x2)
 b00:	00812a03          	lw	x20,8(x2)
#     uart_send_str("cannot go there\r\n\r\n");
 b04:	00001537          	lui	x10,0x1
 b08:	13050513          	addi	x10,x10,304 # 1130 <delay+0x200>
# }
 b0c:	02010113          	addi	x2,x2,32
#     uart_send_str("cannot go there\r\n\r\n");
 b10:	00000317          	auipc	x6,0x0
 b14:	37430067          	jalr	x0,884(x6) # e84 <uart_send_str>
#   if (add_entity_to_list(locations[to].entities, LOCATION_MAX_ENTITIES,
 b18:	00391513          	slli	x10,x18,0x3
 b1c:	01250533          	add	x10,x10,x18
 b20:	00251513          	slli	x10,x10,0x2
 b24:	00002a37          	lui	x20,0x2
 b28:	01250533          	add	x10,x10,x18
 b2c:	00251513          	slli	x10,x10,0x2
 b30:	5d8a4603          	lbu	x12,1496(x20) # 25d8 <active_entity>
 b34:	08450513          	addi	x10,x10,132
 b38:	00800593          	addi	x11,x0,8
 b3c:	00a98533          	add	x10,x19,x10
 b40:	00000097          	auipc	x1,0x0
 b44:	b94080e7          	jalr	x1,-1132(x1) # 6d4 <add_entity_to_list>
 b48:	02050063          	beq	x10,x0,b68 <action_go+0xe0>
#     remove_entity_from_list(loc->entities, LOCATION_MAX_ENTITIES,
 b4c:	5d8a4603          	lbu	x12,1496(x20)
 b50:	08440513          	addi	x10,x8,132
 b54:	00800593          	addi	x11,x0,8
 b58:	00a98533          	add	x10,x19,x10
 b5c:	00000097          	auipc	x1,0x0
 b60:	bd8080e7          	jalr	x1,-1064(x1) # 734 <remove_entity_from_list>
#     ent->location = to;
 b64:	01248223          	sb	x18,4(x9)
# }
 b68:	01c12083          	lw	x1,28(x2)
 b6c:	01812403          	lw	x8,24(x2)
 b70:	01412483          	lw	x9,20(x2)
 b74:	01012903          	lw	x18,16(x2)
 b78:	00c12983          	lw	x19,12(x2)
 b7c:	00812a03          	lw	x20,8(x2)
 b80:	02010113          	addi	x2,x2,32
 b84:	00008067          	jalr	x0,0(x1)

00000b88 <action_give>:
# 
# void action_give(entity_id eid, object_name obj, entity_name to_ent) {
 b88:	fc010113          	addi	x2,x2,-64
 b8c:	02912a23          	sw	x9,52(x2)
#   entity *ent = &entities[eid];
#   location *loc = &locations[ent->location];
 b90:	00251493          	slli	x9,x10,0x2
# void action_give(entity_id eid, object_name obj, entity_name to_ent) {
 b94:	03412423          	sw	x20,40(x2)
#   location *loc = &locations[ent->location];
 b98:	00a48733          	add	x14,x9,x10
 b9c:	00002a37          	lui	x20,0x2
 ba0:	254a0793          	addi	x15,x20,596 # 2254 <entities>
 ba4:	00371713          	slli	x14,x14,0x3
 ba8:	00e787b3          	add	x15,x15,x14
 bac:	0047c783          	lbu	x15,4(x15)
# void action_give(entity_id eid, object_name obj, entity_name to_ent) {
 bb0:	02812c23          	sw	x8,56(x2)
 bb4:	01912a23          	sw	x25,20(x2)
 bb8:	00379413          	slli	x8,x15,0x3
 bbc:	00f40433          	add	x8,x8,x15
 bc0:	00241413          	slli	x8,x8,0x2
 bc4:	00f40433          	add	x8,x8,x15
 bc8:	00241413          	slli	x8,x8,0x2
#   entity_id *ents = loc->entities;
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
#     if (!ents[i])
 bcc:	00002cb7          	lui	x25,0x2
# void action_give(entity_id eid, object_name obj, entity_name to_ent) {
 bd0:	03212823          	sw	x18,48(x2)
 bd4:	03512223          	sw	x21,36(x2)
 bd8:	03612023          	sw	x22,32(x2)
 bdc:	01812c23          	sw	x24,24(x2)
 be0:	02112e23          	sw	x1,60(x2)
 be4:	03312623          	sw	x19,44(x2)
 be8:	01712e23          	sw	x23,28(x2)
 bec:	00050a93          	addi	x21,x10,0
 bf0:	00058913          	addi	x18,x11,0
 bf4:	00060b13          	addi	x22,x12,0
 bf8:	08440413          	addi	x8,x8,132
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 bfc:	00000c13          	addi	x24,x0,0
 c00:	254a0a13          	addi	x20,x20,596
#     if (!ents[i])
 c04:	2ccc8c93          	addi	x25,x25,716 # 22cc <locations>
 c08:	018407b3          	add	x15,x8,x24
 c0c:	019787b3          	add	x15,x15,x25
 c10:	0007cb83          	lbu	x23,0(x15)
 c14:	020b8a63          	beq	x23,x0,c48 <action_give+0xc0>
#       break;
#     entity *to = &entities[ents[i]];
#     if (!strings_equal(to->name, to_ent))
 c18:	002b9993          	slli	x19,x23,0x2
 c1c:	017987b3          	add	x15,x19,x23
 c20:	00379793          	slli	x15,x15,0x3
 c24:	00fa07b3          	add	x15,x20,x15
 c28:	0007a503          	lw	x10,0(x15)
 c2c:	000b0593          	addi	x11,x22,0
 c30:	00000097          	auipc	x1,0x0
 c34:	224080e7          	jalr	x1,548(x1) # e54 <strings_equal>
 c38:	02051463          	bne	x10,x0,c60 <action_give+0xd8>
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 c3c:	001c0c13          	addi	x24,x24,1
 c40:	00800793          	addi	x15,x0,8
 c44:	fcfc12e3          	bne	x24,x15,c08 <action_give+0x80>
#     }
#     uart_send_str(obj);
#     uart_send_str(" not in inventory\r\n\r\n");
#     return;
#   }
#   uart_send_str(to_ent);
 c48:	000b0513          	addi	x10,x22,0
 c4c:	00000097          	auipc	x1,0x0
 c50:	238080e7          	jalr	x1,568(x1) # e84 <uart_send_str>
#   uart_send_str(" is not here\r\n\r\n");
 c54:	00001537          	lui	x10,0x1
 c58:	15c50513          	addi	x10,x10,348 # 115c <delay+0x22c>
 c5c:	0700006f          	jal	x0,ccc <action_give+0x144>
#     object_id *objs = ent->objects;
 c60:	01548433          	add	x8,x9,x21
 c64:	00341413          	slli	x8,x8,0x3
 c68:	00540413          	addi	x8,x8,5
#       if (!strings_equal(objects[oid].name, obj))
 c6c:	00002ab7          	lui	x21,0x2
#     object_id *objs = ent->objects;
 c70:	008a0433          	add	x8,x20,x8
#     for (unsigned j = 0; j < ENTITY_MAX_OBJECTS; j++) {
 c74:	00000493          	addi	x9,x0,0
#       if (!strings_equal(objects[oid].name, obj))
 c78:	244a8a93          	addi	x21,x21,580 # 2244 <objects>
#       const object_id oid = objs[j];
 c7c:	009407b3          	add	x15,x8,x9
 c80:	0007c603          	lbu	x12,0(x15)
#       if (!oid)
 c84:	02060a63          	beq	x12,x0,cb8 <action_give+0x130>
#       if (!strings_equal(objects[oid].name, obj))
 c88:	00261793          	slli	x15,x12,0x2
 c8c:	00fa87b3          	add	x15,x21,x15
 c90:	0007a503          	lw	x10,0(x15)
 c94:	00090593          	addi	x11,x18,0
 c98:	00c12623          	sw	x12,12(x2)
 c9c:	00000097          	auipc	x1,0x0
 ca0:	1b8080e7          	jalr	x1,440(x1) # e54 <strings_equal>
 ca4:	00c12603          	lw	x12,12(x2)
 ca8:	04051e63          	bne	x10,x0,d04 <action_give+0x17c>
#     for (unsigned j = 0; j < ENTITY_MAX_OBJECTS; j++) {
 cac:	00148493          	addi	x9,x9,1
 cb0:	02000793          	addi	x15,x0,32
 cb4:	fcf494e3          	bne	x9,x15,c7c <action_give+0xf4>
#     uart_send_str(obj);
 cb8:	00090513          	addi	x10,x18,0
 cbc:	00000097          	auipc	x1,0x0
 cc0:	1c8080e7          	jalr	x1,456(x1) # e84 <uart_send_str>
#     uart_send_str(" not in inventory\r\n\r\n");
 cc4:	00001537          	lui	x10,0x1
 cc8:	14450513          	addi	x10,x10,324 # 1144 <delay+0x214>
# }
 ccc:	03812403          	lw	x8,56(x2)
 cd0:	03c12083          	lw	x1,60(x2)
 cd4:	03412483          	lw	x9,52(x2)
 cd8:	03012903          	lw	x18,48(x2)
 cdc:	02c12983          	lw	x19,44(x2)
 ce0:	02812a03          	lw	x20,40(x2)
 ce4:	02412a83          	lw	x21,36(x2)
 ce8:	02012b03          	lw	x22,32(x2)
 cec:	01c12b83          	lw	x23,28(x2)
 cf0:	01812c03          	lw	x24,24(x2)
 cf4:	01412c83          	lw	x25,20(x2)
 cf8:	04010113          	addi	x2,x2,64
#   uart_send_str(" is not here\r\n\r\n");
 cfc:	00000317          	auipc	x6,0x0
 d00:	18830067          	jalr	x0,392(x6) # e84 <uart_send_str>
#       if (add_object_to_list(to->objects, ENTITY_MAX_OBJECTS, oid)) {
 d04:	01798533          	add	x10,x19,x23
 d08:	00351513          	slli	x10,x10,0x3
 d0c:	00550513          	addi	x10,x10,5
 d10:	02000593          	addi	x11,x0,32
 d14:	00aa0533          	add	x10,x20,x10
 d18:	00000097          	auipc	x1,0x0
 d1c:	95c080e7          	jalr	x1,-1700(x1) # 674 <add_object_to_list>
 d20:	04050263          	beq	x10,x0,d64 <action_give+0x1dc>
#         remove_object_from_list_by_index(objs, j);
 d24:	00040513          	addi	x10,x8,0
# }
 d28:	03812403          	lw	x8,56(x2)
 d2c:	03c12083          	lw	x1,60(x2)
 d30:	03012903          	lw	x18,48(x2)
 d34:	02c12983          	lw	x19,44(x2)
 d38:	02812a03          	lw	x20,40(x2)
 d3c:	02412a83          	lw	x21,36(x2)
 d40:	02012b03          	lw	x22,32(x2)
 d44:	01c12b83          	lw	x23,28(x2)
 d48:	01812c03          	lw	x24,24(x2)
 d4c:	01412c83          	lw	x25,20(x2)
#         remove_object_from_list_by_index(objs, j);
 d50:	00048593          	addi	x11,x9,0
# }
 d54:	03412483          	lw	x9,52(x2)
 d58:	04010113          	addi	x2,x2,64
#         remove_object_from_list_by_index(objs, j);
 d5c:	00000317          	auipc	x6,0x0
 d60:	8fc30067          	jalr	x0,-1796(x6) # 658 <remove_object_from_list_by_index>
# }
 d64:	03c12083          	lw	x1,60(x2)
 d68:	03812403          	lw	x8,56(x2)
 d6c:	03412483          	lw	x9,52(x2)
 d70:	03012903          	lw	x18,48(x2)
 d74:	02c12983          	lw	x19,44(x2)
 d78:	02812a03          	lw	x20,40(x2)
 d7c:	02412a83          	lw	x21,36(x2)
 d80:	02012b03          	lw	x22,32(x2)
 d84:	01c12b83          	lw	x23,28(x2)
 d88:	01812c03          	lw	x24,24(x2)
 d8c:	01412c83          	lw	x25,20(x2)
 d90:	04010113          	addi	x2,x2,64
 d94:	00008067          	jalr	x0,0(x1)

00000d98 <print_help>:
# 
# void print_help() {
#   uart_send_str(
 d98:	00001537          	lui	x10,0x1
 d9c:	17050513          	addi	x10,x10,368 # 1170 <delay+0x240>
 da0:	00000317          	auipc	x6,0x0
 da4:	0e430067          	jalr	x0,228(x6) # e84 <uart_send_str>

00000da8 <input_inbuf>:
#       "inventory\r\n  t <object>: take object\r\n  d <object>: drop "
#       "object\r\n  g <object> <entity>: give object to entity\r\n  help: this "
#       "message\r\n\r\n");
# }
# 
# void input_inbuf() { // ? infbuf as argument
 da8:	fe010113          	addi	x2,x2,-32
 dac:	00812c23          	sw	x8,24(x2)
#   while (1) {
#     const char ch = uart_read_char();
#     if (ch == CHAR_BACKSPACE) {
#       if (inbuf.ix > 0) {
 db0:	00002437          	lui	x8,0x2
# void input_inbuf() { // ? infbuf as argument
 db4:	00912a23          	sw	x9,20(x2)
 db8:	01212823          	sw	x18,16(x2)
 dbc:	01312623          	sw	x19,12(x2)
 dc0:	01412423          	sw	x20,8(x2)
 dc4:	00112e23          	sw	x1,28(x2)
#       if (inbuf.ix > 0) {
 dc8:	5dc40413          	addi	x8,x8,1500 # 25dc <inbuf>
#     if (ch == CHAR_BACKSPACE) {
 dcc:	07f00913          	addi	x18,x0,127
#         inbuf.ix--;
#         uart_send_char(ch);
#       }
#     } else if (ch == CHAR_CARRIAGE_RETURN ||
 dd0:	00d00993          	addi	x19,x0,13
 dd4:	04f00a13          	addi	x20,x0,79
#     } else {
#       inbuf.line[inbuf.ix] = ch;
#       inbuf.ix++;
#       uart_send_char(ch);
#     }
#     *leds = inbuf.ix;
 dd8:	000024b7          	lui	x9,0x2
#     const char ch = uart_read_char();
 ddc:	00000097          	auipc	x1,0x0
 de0:	13c080e7          	jalr	x1,316(x1) # f18 <uart_read_char>
#       if (inbuf.ix > 0) {
 de4:	05044783          	lbu	x15,80(x8)
#     if (ch == CHAR_BACKSPACE) {
 de8:	03251463          	bne	x10,x18,e10 <input_inbuf+0x68>
#       if (inbuf.ix > 0) {
 dec:	00078a63          	beq	x15,x0,e00 <input_inbuf+0x58>
#         inbuf.ix--;
 df0:	fff78793          	addi	x15,x15,-1
#       inbuf.ix++;
 df4:	04f40823          	sb	x15,80(x8)
#       uart_send_char(ch);
 df8:	00000097          	auipc	x1,0x0
 dfc:	108080e7          	jalr	x1,264(x1) # f00 <uart_send_char>
#     *leds = inbuf.ix;
 e00:	5c84a783          	lw	x15,1480(x9) # 25c8 <leds>
 e04:	05044703          	lbu	x14,80(x8)
 e08:	00e78023          	sb	x14,0(x15)
#   while (1) {
 e0c:	fd1ff06f          	jal	x0,ddc <input_inbuf+0x34>
#     } else if (ch == CHAR_CARRIAGE_RETURN ||
 e10:	01350463          	beq	x10,x19,e18 <input_inbuf+0x70>
 e14:	03479863          	bne	x15,x20,e44 <input_inbuf+0x9c>
#       inbuf.line[inbuf.ix] = 0;
 e18:	00f407b3          	add	x15,x8,x15
 e1c:	00078023          	sb	x0,0(x15)
#       inbuf.ix = 0;
 e20:	04040823          	sb	x0,80(x8)
#   }
# }
 e24:	01c12083          	lw	x1,28(x2)
 e28:	01812403          	lw	x8,24(x2)
 e2c:	01412483          	lw	x9,20(x2)
 e30:	01012903          	lw	x18,16(x2)
 e34:	00c12983          	lw	x19,12(x2)
 e38:	00812a03          	lw	x20,8(x2)
 e3c:	02010113          	addi	x2,x2,32
 e40:	00008067          	jalr	x0,0(x1)
#       inbuf.line[inbuf.ix] = ch;
 e44:	00f406b3          	add	x13,x8,x15
 e48:	00a68023          	sb	x10,0(x13)
#       inbuf.ix++;
 e4c:	00178793          	addi	x15,x15,1
 e50:	fa5ff06f          	jal	x0,df4 <input_inbuf+0x4c>

00000e54 <strings_equal>:
# 
# bool strings_equal(const char *s1, const char *s2) {
 e54:	00050793          	addi	x15,x10,0
#   while (1) {
#     char diff = *s1 - *s2;
 e58:	0007c703          	lbu	x14,0(x15)
 e5c:	0005c503          	lbu	x10,0(x11)
#     if (diff)
 e60:	00a71e63          	bne	x14,x10,e7c <strings_equal+0x28>
#       return FALSE;
#     if (!*s1 && !*s2)
 e64:	00051663          	bne	x10,x0,e70 <strings_equal+0x1c>
 e68:	00100513          	addi	x10,x0,1
 e6c:	00008067          	jalr	x0,0(x1)
#       return TRUE;
#     if (!*s1 || !*s2)
#       return FALSE;
#     s1++;
 e70:	00178793          	addi	x15,x15,1
#     s2++;
 e74:	00158593          	addi	x11,x11,1
#   while (1) {
 e78:	fe1ff06f          	jal	x0,e58 <strings_equal+0x4>
#       return FALSE;
 e7c:	00000513          	addi	x10,x0,0
#   }
# }
 e80:	00008067          	jalr	x0,0(x1)

00000e84 <uart_send_str>:
# 
# void uart_send_str(const char *str) {
#   while (*str) {
#     while (*uart_out)
 e84:	000026b7          	lui	x13,0x2
#   while (*str) {
 e88:	00054783          	lbu	x15,0(x10)
 e8c:	00079463          	bne	x15,x0,e94 <uart_send_str+0x10>
#       ;
#     *uart_out = *str++;
#   }
# }
 e90:	00008067          	jalr	x0,0(x1)
#     while (*uart_out)
 e94:	5cc6a703          	lw	x14,1484(x13) # 25cc <uart_out>
 e98:	00074603          	lbu	x12,0(x14)
 e9c:	fe061ee3          	bne	x12,x0,e98 <uart_send_str+0x14>
#     *uart_out = *str++;
 ea0:	00150513          	addi	x10,x10,1
 ea4:	00f70023          	sb	x15,0(x14)
 ea8:	fe1ff06f          	jal	x0,e88 <uart_send_str+0x4>

00000eac <uart_send_hex_byte>:
# 
# void uart_send_hex_byte(char ch) {
 eac:	ff010113          	addi	x2,x2,-16
 eb0:	00812423          	sw	x8,8(x2)
 eb4:	00050413          	addi	x8,x10,0
#   uart_send_hex_nibble((ch & 0xf0) >> 4);
 eb8:	00455513          	srli	x10,x10,0x4
# void uart_send_hex_byte(char ch) {
 ebc:	00112623          	sw	x1,12(x2)
#   uart_send_hex_nibble((ch & 0xf0) >> 4);
 ec0:	00000097          	auipc	x1,0x0
 ec4:	020080e7          	jalr	x1,32(x1) # ee0 <uart_send_hex_nibble>
#   uart_send_hex_nibble(ch & 0x0f);
 ec8:	00f47513          	andi	x10,x8,15
# }
 ecc:	00812403          	lw	x8,8(x2)
 ed0:	00c12083          	lw	x1,12(x2)
 ed4:	01010113          	addi	x2,x2,16
#   uart_send_hex_nibble(ch & 0x0f);
 ed8:	00000317          	auipc	x6,0x0
 edc:	00830067          	jalr	x0,8(x6) # ee0 <uart_send_hex_nibble>

00000ee0 <uart_send_hex_nibble>:
# 
# void uart_send_hex_nibble(char nibble) {
#   if (nibble < 10) {
 ee0:	00900793          	addi	x15,x0,9
 ee4:	00a7ea63          	bltu	x15,x10,ef8 <uart_send_hex_nibble+0x18>
#     uart_send_char('0' + nibble);
 ee8:	03050513          	addi	x10,x10,48
#   } else {
#     uart_send_char('A' + (nibble - 10));
 eec:	0ff57513          	andi	x10,x10,255
 ef0:	00000317          	auipc	x6,0x0
 ef4:	01030067          	jalr	x0,16(x6) # f00 <uart_send_char>
 ef8:	03750513          	addi	x10,x10,55
 efc:	ff1ff06f          	jal	x0,eec <uart_send_hex_nibble+0xc>

00000f00 <uart_send_char>:
#   }
# }
# 
# void uart_send_char(char ch) {
#   while (*uart_out)
 f00:	000027b7          	lui	x15,0x2
 f04:	5cc7a783          	lw	x15,1484(x15) # 25cc <uart_out>
 f08:	0007c703          	lbu	x14,0(x15)
 f0c:	fe071ee3          	bne	x14,x0,f08 <uart_send_char+0x8>
#     ;
#   *uart_out = ch;
 f10:	00a78023          	sb	x10,0(x15)
# }
 f14:	00008067          	jalr	x0,0(x1)

00000f18 <uart_read_char>:
# 
# char uart_read_char() {
#   char ch;
#   while ((ch = *uart_in) == 0)
 f18:	000027b7          	lui	x15,0x2
 f1c:	5d07a703          	lw	x14,1488(x15) # 25d0 <uart_in>
 f20:	00074783          	lbu	x15,0(x14)
 f24:	0ff7f513          	andi	x10,x15,255
 f28:	fe078ce3          	beq	x15,x0,f20 <uart_read_char+0x8>
#     ;
#   return ch;
# }
 f2c:	00008067          	jalr	x0,0(x1)

00000f30 <delay>:
# 
# inline void delay(volatile unsigned int ticks) {
 f30:	ff010113          	addi	x2,x2,-16
 f34:	00a12623          	sw	x10,12(x2)
#   while (ticks--)
 f38:	00c12783          	lw	x15,12(x2)
 f3c:	fff78713          	addi	x14,x15,-1
 f40:	00e12623          	sw	x14,12(x2)
 f44:	fe079ae3          	bne	x15,x0,f38 <delay+0x8>
#     ;
# }
 f48:	01010113          	addi	x2,x2,16
 f4c:	00008067          	jalr	x0,0(x1)
