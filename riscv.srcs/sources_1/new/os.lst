
os:     file format elf32-littleriscv


Disassembly of section .text:

00000000 <_start>:
# .global _start
# 
# # sets up the stack before calling c function 'run' in 'os.c'
# _start:
#     lui sp, 0x2         # set stack at # 0x1fff0
   0:	00002137          	lui	x2,0x2
#     addi sp, sp, -16    #
   4:	ff010113          	addi	x2,x2,-16 # 1ff0 <delay+0x10b8>
   8:	004000ef          	jal	x1,c <run>

0000000c <run>:
# void handle_inbuf();
# 
# unsigned char active_entity = 1;
# 
# void run() {
#   uart_send_str(hello);
   c:	000027b7          	lui	x15,0x2
  10:	5dc7a503          	lw	x10,1500(x15) # 25dc <hello>
# void run() {
  14:	fe010113          	addi	x2,x2,-32
  18:	01212823          	sw	x18,16(x2)
#   while (1) {
#     entity *ent = &entities[active_entity];
#     print_location(ent->location);
  1c:	00002937          	lui	x18,0x2
# void run() {
  20:	00912a23          	sw	x9,20(x2)
  24:	01312623          	sw	x19,12(x2)
  28:	01412423          	sw	x20,8(x2)
  2c:	01512223          	sw	x21,4(x2)
  30:	00112e23          	sw	x1,28(x2)
  34:	00812c23          	sw	x8,24(x2)
#     entity *ent = &entities[active_entity];
  38:	000024b7          	lui	x9,0x2
#   uart_send_str(hello);
  3c:	00001097          	auipc	x1,0x1
  40:	e50080e7          	jalr	x1,-432(x1) # e8c <uart_send_str>
#     print_location(ent->location);
  44:	54890913          	addi	x18,x18,1352 # 2548 <entities>
#     uart_send_str(ent->name);
#     uart_send_str(" > ");
  48:	000019b7          	lui	x19,0x1
#     input_inbuf();
#     uart_send_str("\r\n");
  4c:	00001a37          	lui	x20,0x1
#     handle_inbuf();
#     if (active_entity == 1)
  50:	00100a93          	addi	x21,x0,1
#     entity *ent = &entities[active_entity];
  54:	5e04c783          	lbu	x15,1504(x9) # 25e0 <active_entity>
#     print_location(ent->location);
  58:	00279413          	slli	x8,x15,0x2
  5c:	00f40433          	add	x8,x8,x15
  60:	00341413          	slli	x8,x8,0x3
  64:	00890433          	add	x8,x18,x8
  68:	00444503          	lbu	x10,4(x8)
  6c:	00000097          	auipc	x1,0x0
  70:	084080e7          	jalr	x1,132(x1) # f0 <print_location>
#     uart_send_str(ent->name);
  74:	00042503          	lw	x10,0(x8)
  78:	00001097          	auipc	x1,0x1
  7c:	e14080e7          	jalr	x1,-492(x1) # e8c <uart_send_str>
#     uart_send_str(" > ");
  80:	ffc98513          	addi	x10,x19,-4 # ffc <delay+0xc4>
  84:	00001097          	auipc	x1,0x1
  88:	e08080e7          	jalr	x1,-504(x1) # e8c <uart_send_str>
#     input_inbuf();
  8c:	00001097          	auipc	x1,0x1
  90:	d54080e7          	jalr	x1,-684(x1) # de0 <input_inbuf>
#     uart_send_str("\r\n");
  94:	248a0513          	addi	x10,x20,584 # 1248 <delay+0x310>
  98:	00001097          	auipc	x1,0x1
  9c:	df4080e7          	jalr	x1,-524(x1) # e8c <uart_send_str>
#     handle_inbuf();
  a0:	00001097          	auipc	x1,0x1
  a4:	ac0080e7          	jalr	x1,-1344(x1) # b60 <handle_inbuf>
#     if (active_entity == 1)
  a8:	5e04c703          	lbu	x14,1504(x9)
#       active_entity = 2;
  ac:	00200793          	addi	x15,x0,2
#     if (active_entity == 1)
  b0:	01570463          	beq	x14,x21,b8 <run+0xac>
#     else
#       active_entity = 1;
  b4:	00100793          	addi	x15,x0,1
  b8:	5ef48023          	sb	x15,1504(x9)
  bc:	f99ff06f          	jal	x0,54 <run+0x48>

000000c0 <strings_equal>:
#   }
# }
# 
# bool strings_equal(const char *s1, const char *s2) {
  c0:	00050793          	addi	x15,x10,0
#   while (1) {
#     char diff = *s1 - *s2;
  c4:	0007c703          	lbu	x14,0(x15)
  c8:	0005c503          	lbu	x10,0(x11)
#     if (diff)
  cc:	00a71e63          	bne	x14,x10,e8 <strings_equal+0x28>
#       return FALSE;
#     if (!*s1 && !*s2)
  d0:	00051663          	bne	x10,x0,dc <strings_equal+0x1c>
  d4:	00100513          	addi	x10,x0,1
  d8:	00008067          	jalr	x0,0(x1)
#       return TRUE;
#     if (!*s1 || !*s2)
#       return FALSE;
#     s1++;
  dc:	00178793          	addi	x15,x15,1
#     s2++;
  e0:	00158593          	addi	x11,x11,1
#   while (1) {
  e4:	fe1ff06f          	jal	x0,c4 <strings_equal+0x4>
#       return FALSE;
  e8:	00000513          	addi	x10,x0,0
#   }
# }
  ec:	00008067          	jalr	x0,0(x1)

000000f0 <print_location>:
# 
# void print_location(location_id lid) {
  f0:	fd010113          	addi	x2,x2,-48
  f4:	03212023          	sw	x18,32(x2)
  f8:	00050913          	addi	x18,x10,0
  fc:	02812423          	sw	x8,40(x2)
#   const location *loc = &locations[lid];
#   uart_send_str("u r in ");
#   uart_send_str(loc->name);
 100:	00391413          	slli	x8,x18,0x3
 104:	01240433          	add	x8,x8,x18
#   uart_send_str("u r in ");
 108:	00001537          	lui	x10,0x1
#   uart_send_str(loc->name);
 10c:	00241413          	slli	x8,x8,0x2
# void print_location(location_id lid) {
 110:	02912223          	sw	x9,36(x2)
#   uart_send_str("u r in ");
 114:	00050513          	addi	x10,x10,0 # 1000 <delay+0xc8>
#   uart_send_str(loc->name);
 118:	000024b7          	lui	x9,0x2
 11c:	01240433          	add	x8,x8,x18
# void print_location(location_id lid) {
 120:	02112623          	sw	x1,44(x2)
 124:	01312e23          	sw	x19,28(x2)
 128:	01412c23          	sw	x20,24(x2)
#   uart_send_str(loc->name);
 12c:	26448993          	addi	x19,x9,612 # 2264 <locations>
 130:	00241413          	slli	x8,x8,0x2
# void print_location(location_id lid) {
 134:	01512a23          	sw	x21,20(x2)
 138:	01612823          	sw	x22,16(x2)
 13c:	01712623          	sw	x23,12(x2)
 140:	01812423          	sw	x24,8(x2)
 144:	01912223          	sw	x25,4(x2)
#   uart_send_str("u r in ");
 148:	00001097          	auipc	x1,0x1
 14c:	d44080e7          	jalr	x1,-700(x1) # e8c <uart_send_str>
#   uart_send_str(loc->name);
 150:	008987b3          	add	x15,x19,x8
 154:	0007a503          	lw	x10,0(x15)
#   uart_send_str("\r\nu c: ");
# 
#   // print objects in current location
#   bool add_list_sep = FALSE;
#   const object_id *objs = loc->objects;
 158:	00440a13          	addi	x20,x8,4
 15c:	013a0a33          	add	x20,x20,x19
#   uart_send_str(loc->name);
 160:	00001097          	auipc	x1,0x1
 164:	d2c080e7          	jalr	x1,-724(x1) # e8c <uart_send_str>
#   uart_send_str("\r\nu c: ");
 168:	00001537          	lui	x10,0x1
 16c:	00850513          	addi	x10,x10,8 # 1008 <delay+0xd0>
 170:	00001097          	auipc	x1,0x1
 174:	d1c080e7          	jalr	x1,-740(x1) # e8c <uart_send_str>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
#     const object_id oid = objs[i];
 178:	000a4903          	lbu	x18,0(x20)
#     if (!oid)
 17c:	26448493          	addi	x9,x9,612
 180:	18090863          	beq	x18,x0,310 <print_location+0x220>
#     if (add_list_sep) {
#       uart_send_str(", ");
#     } else {
#       add_list_sep = TRUE;
#     }
#     uart_send_str(objects[oid].name);
 184:	00002ab7          	lui	x21,0x2
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 188:	00000993          	addi	x19,x0,0
#     uart_send_str(objects[oid].name);
 18c:	5c0a8a93          	addi	x21,x21,1472 # 25c0 <objects>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 190:	08000b13          	addi	x22,x0,128
#       uart_send_str(", ");
 194:	00001bb7          	lui	x23,0x1
#     uart_send_str(objects[oid].name);
 198:	00291913          	slli	x18,x18,0x2
 19c:	012a8933          	add	x18,x21,x18
 1a0:	00092503          	lw	x10,0(x18)
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 1a4:	00198993          	addi	x19,x19,1
#     uart_send_str(objects[oid].name);
 1a8:	00001097          	auipc	x1,0x1
 1ac:	ce4080e7          	jalr	x1,-796(x1) # e8c <uart_send_str>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 1b0:	01698863          	beq	x19,x22,1c0 <print_location+0xd0>
#     const object_id oid = objs[i];
 1b4:	013a07b3          	add	x15,x20,x19
 1b8:	0007c903          	lbu	x18,0(x15)
#     if (!oid)
 1bc:	14091263          	bne	x18,x0,300 <print_location+0x210>
#   }
#   if (!add_list_sep) {
#     uart_send_str("nothing");
#   }
#   uart_send_str("\r\n");
 1c0:	000019b7          	lui	x19,0x1
 1c4:	24898513          	addi	x10,x19,584 # 1248 <delay+0x310>
 1c8:	00001097          	auipc	x1,0x1
 1cc:	cc4080e7          	jalr	x1,-828(x1) # e8c <uart_send_str>
#     if (add_list_sep) {
#       uart_send_str(", ");
#     } else {
#       add_list_sep = TRUE;
#     }
#     uart_send_str(entities[eid].name);
 1d0:	00002937          	lui	x18,0x2
 1d4:	08440a93          	addi	x21,x8,132
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 1d8:	00000c13          	addi	x24,x0,0
#   add_list_sep = FALSE;
 1dc:	00000793          	addi	x15,x0,0
#     if (eid == active_entity)
 1e0:	00002b37          	lui	x22,0x2
#     uart_send_str(entities[eid].name);
 1e4:	54890913          	addi	x18,x18,1352 # 2548 <entities>
#       uart_send_str(", ");
 1e8:	00001bb7          	lui	x23,0x1
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 1ec:	00800a13          	addi	x20,x0,8
#     const entity_id eid = ents[i];
 1f0:	015c0733          	add	x14,x24,x21
 1f4:	00e48733          	add	x14,x9,x14
 1f8:	00074c83          	lbu	x25,0(x14)
#     if (!eid)
 1fc:	040c8263          	beq	x25,x0,240 <print_location+0x150>
#     if (eid == active_entity)
 200:	5e0b4703          	lbu	x14,1504(x22) # 25e0 <active_entity>
 204:	03970a63          	beq	x14,x25,238 <print_location+0x148>
#     if (add_list_sep) {
 208:	00078863          	beq	x15,x0,218 <print_location+0x128>
#       uart_send_str(", ");
 20c:	010b8513          	addi	x10,x23,16 # 1010 <delay+0xd8>
 210:	00001097          	auipc	x1,0x1
 214:	c7c080e7          	jalr	x1,-900(x1) # e8c <uart_send_str>
#     uart_send_str(entities[eid].name);
 218:	002c9793          	slli	x15,x25,0x2
 21c:	019787b3          	add	x15,x15,x25
 220:	00379793          	slli	x15,x15,0x3
 224:	00f907b3          	add	x15,x18,x15
 228:	0007a503          	lw	x10,0(x15)
 22c:	00001097          	auipc	x1,0x1
 230:	c60080e7          	jalr	x1,-928(x1) # e8c <uart_send_str>
 234:	00100793          	addi	x15,x0,1
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 238:	001c0c13          	addi	x24,x24,1
 23c:	fb4c1ae3          	bne	x24,x20,1f0 <print_location+0x100>
#   }
#   if (add_list_sep) {
 240:	00078a63          	beq	x15,x0,254 <print_location+0x164>
#     uart_send_str(" is here\r\n");
 244:	00001537          	lui	x10,0x1
 248:	01450513          	addi	x10,x10,20 # 1014 <delay+0xdc>
 24c:	00001097          	auipc	x1,0x1
 250:	c40080e7          	jalr	x1,-960(x1) # e8c <uart_send_str>
#   }
# 
#   // print exits from current location
#   add_list_sep = FALSE;
#   uart_send_str("exits: ");
 254:	00001537          	lui	x10,0x1
 258:	02050513          	addi	x10,x10,32 # 1020 <delay+0xe8>
 25c:	008484b3          	add	x9,x9,x8
 260:	00002437          	lui	x8,0x2
 264:	00001097          	auipc	x1,0x1
 268:	c28080e7          	jalr	x1,-984(x1) # e8c <uart_send_str>
#   for (unsigned i = 0; i < LOCATION_MAX_EXITS; i++) {
 26c:	24c40413          	addi	x8,x8,588 # 224c <exit_names>
 270:	01840913          	addi	x18,x8,24
#   add_list_sep = FALSE;
 274:	00000793          	addi	x15,x0,0
#     if (!loc->exits[i])
#       continue;
#     if (add_list_sep) {
#       uart_send_str(", ");
 278:	00001a37          	lui	x20,0x1
#     if (!loc->exits[i])
 27c:	08c4c703          	lbu	x14,140(x9)
 280:	02070263          	beq	x14,x0,2a4 <print_location+0x1b4>
#     if (add_list_sep) {
 284:	00078863          	beq	x15,x0,294 <print_location+0x1a4>
#       uart_send_str(", ");
 288:	010a0513          	addi	x10,x20,16 # 1010 <delay+0xd8>
 28c:	00001097          	auipc	x1,0x1
 290:	c00080e7          	jalr	x1,-1024(x1) # e8c <uart_send_str>
#     } else {
#       add_list_sep = TRUE;
#     }
#     uart_send_str(exit_names[i]);
 294:	00042503          	lw	x10,0(x8)
 298:	00001097          	auipc	x1,0x1
 29c:	bf4080e7          	jalr	x1,-1036(x1) # e8c <uart_send_str>
 2a0:	00100793          	addi	x15,x0,1
#   for (unsigned i = 0; i < LOCATION_MAX_EXITS; i++) {
 2a4:	00440413          	addi	x8,x8,4
 2a8:	00148493          	addi	x9,x9,1
 2ac:	fd2418e3          	bne	x8,x18,27c <print_location+0x18c>
#   }
#   if (!add_list_sep) {
 2b0:	00079a63          	bne	x15,x0,2c4 <print_location+0x1d4>
#     uart_send_str("none");
 2b4:	00001537          	lui	x10,0x1
 2b8:	02850513          	addi	x10,x10,40 # 1028 <delay+0xf0>
 2bc:	00001097          	auipc	x1,0x1
 2c0:	bd0080e7          	jalr	x1,-1072(x1) # e8c <uart_send_str>
#   }
#   uart_send_str("\r\n");
# }
 2c4:	02812403          	lw	x8,40(x2)
 2c8:	02c12083          	lw	x1,44(x2)
 2cc:	02412483          	lw	x9,36(x2)
 2d0:	02012903          	lw	x18,32(x2)
 2d4:	01812a03          	lw	x20,24(x2)
 2d8:	01412a83          	lw	x21,20(x2)
 2dc:	01012b03          	lw	x22,16(x2)
 2e0:	00c12b83          	lw	x23,12(x2)
 2e4:	00812c03          	lw	x24,8(x2)
 2e8:	00412c83          	lw	x25,4(x2)
#   uart_send_str("\r\n");
 2ec:	24898513          	addi	x10,x19,584
# }
 2f0:	01c12983          	lw	x19,28(x2)
 2f4:	03010113          	addi	x2,x2,48
#   uart_send_str("\r\n");
 2f8:	00001317          	auipc	x6,0x1
 2fc:	b9430067          	jalr	x0,-1132(x6) # e8c <uart_send_str>
#       uart_send_str(", ");
 300:	010b8513          	addi	x10,x23,16
 304:	00001097          	auipc	x1,0x1
 308:	b88080e7          	jalr	x1,-1144(x1) # e8c <uart_send_str>
 30c:	e8dff06f          	jal	x0,198 <print_location+0xa8>
#     uart_send_str("nothing");
 310:	00001537          	lui	x10,0x1
 314:	03050513          	addi	x10,x10,48 # 1030 <delay+0xf8>
 318:	00001097          	auipc	x1,0x1
 31c:	b74080e7          	jalr	x1,-1164(x1) # e8c <uart_send_str>
 320:	ea1ff06f          	jal	x0,1c0 <print_location+0xd0>

00000324 <print_inventory>:
# 
# void print_inventory(entity_id eid) {
 324:	fe010113          	addi	x2,x2,-32
 328:	00912a23          	sw	x9,20(x2)
 32c:	00050493          	addi	x9,x10,0
#   uart_send_str("u have: ");
 330:	00001537          	lui	x10,0x1
# void print_inventory(entity_id eid) {
 334:	00812c23          	sw	x8,24(x2)
#   uart_send_str("u have: ");
 338:	03850513          	addi	x10,x10,56 # 1038 <delay+0x100>
#   bool add_list_sep = FALSE;
#   const object_id *objs = entities[eid].objects;
 33c:	00249413          	slli	x8,x9,0x2
 340:	00940433          	add	x8,x8,x9
# void print_inventory(entity_id eid) {
 344:	00112e23          	sw	x1,28(x2)
 348:	01212823          	sw	x18,16(x2)
 34c:	01312623          	sw	x19,12(x2)
 350:	01412423          	sw	x20,8(x2)
 354:	01512223          	sw	x21,4(x2)
#   uart_send_str("u have: ");
 358:	00001097          	auipc	x1,0x1
 35c:	b34080e7          	jalr	x1,-1228(x1) # e8c <uart_send_str>
#   const object_id *objs = entities[eid].objects;
 360:	00341413          	slli	x8,x8,0x3
 364:	000027b7          	lui	x15,0x2
 368:	00540413          	addi	x8,x8,5
 36c:	54878793          	addi	x15,x15,1352 # 2548 <entities>
 370:	00f40433          	add	x8,x8,x15
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
#     const object_id id = objs[i];
 374:	00044483          	lbu	x9,0(x8)
#     if (!id)
 378:	08048063          	beq	x9,x0,3f8 <print_inventory+0xd4>
#     if (add_list_sep) {
#       uart_send_str(", ");
#     } else {
#       add_list_sep = TRUE;
#     }
#     uart_send_str(objects[id].name);
 37c:	000029b7          	lui	x19,0x2
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 380:	00000913          	addi	x18,x0,0
#     uart_send_str(objects[id].name);
 384:	5c098993          	addi	x19,x19,1472 # 25c0 <objects>
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 388:	02000a13          	addi	x20,x0,32
#       uart_send_str(", ");
 38c:	00001ab7          	lui	x21,0x1
#     uart_send_str(objects[id].name);
 390:	00249493          	slli	x9,x9,0x2
 394:	009984b3          	add	x9,x19,x9
 398:	0004a503          	lw	x10,0(x9)
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 39c:	00190913          	addi	x18,x18,1
#     uart_send_str(objects[id].name);
 3a0:	00001097          	auipc	x1,0x1
 3a4:	aec080e7          	jalr	x1,-1300(x1) # e8c <uart_send_str>
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 3a8:	01490863          	beq	x18,x20,3b8 <print_inventory+0x94>
#     const object_id id = objs[i];
 3ac:	012407b3          	add	x15,x8,x18
 3b0:	0007c483          	lbu	x9,0(x15)
#     if (!id)
 3b4:	02049a63          	bne	x9,x0,3e8 <print_inventory+0xc4>
#   }
#   if (!add_list_sep) {
#     uart_send_str("nothing");
#   }
#   uart_send_str("\r\n");
# }
 3b8:	01812403          	lw	x8,24(x2)
 3bc:	01c12083          	lw	x1,28(x2)
 3c0:	01412483          	lw	x9,20(x2)
 3c4:	01012903          	lw	x18,16(x2)
 3c8:	00c12983          	lw	x19,12(x2)
 3cc:	00812a03          	lw	x20,8(x2)
 3d0:	00412a83          	lw	x21,4(x2)
#   uart_send_str("\r\n");
 3d4:	00001537          	lui	x10,0x1
 3d8:	24850513          	addi	x10,x10,584 # 1248 <delay+0x310>
# }
 3dc:	02010113          	addi	x2,x2,32
#   uart_send_str("\r\n");
 3e0:	00001317          	auipc	x6,0x1
 3e4:	aac30067          	jalr	x0,-1364(x6) # e8c <uart_send_str>
#       uart_send_str(", ");
 3e8:	010a8513          	addi	x10,x21,16 # 1010 <delay+0xd8>
 3ec:	00001097          	auipc	x1,0x1
 3f0:	aa0080e7          	jalr	x1,-1376(x1) # e8c <uart_send_str>
 3f4:	f9dff06f          	jal	x0,390 <print_inventory+0x6c>
#     uart_send_str("nothing");
 3f8:	00001537          	lui	x10,0x1
 3fc:	03050513          	addi	x10,x10,48 # 1030 <delay+0xf8>
 400:	00001097          	auipc	x1,0x1
 404:	a8c080e7          	jalr	x1,-1396(x1) # e8c <uart_send_str>
 408:	fb1ff06f          	jal	x0,3b8 <print_inventory+0x94>

0000040c <remove_object_from_list_by_index>:
# 
# void remove_object_from_list_by_index(object_id list[], unsigned ix) {
#   object_id *ptr = &list[ix];
 40c:	00b50533          	add	x10,x10,x11
#   while (1) {
#     object_id *nxt = ptr + 1;
#     *ptr = *nxt;
 410:	00154783          	lbu	x15,1(x10)
 414:	00f50023          	sb	x15,0(x10)
#     if (!*ptr)
 418:	00078663          	beq	x15,x0,424 <remove_object_from_list_by_index+0x18>
#       return;
#     ptr++;
 41c:	00150513          	addi	x10,x10,1
#   while (1) {
 420:	ff1ff06f          	jal	x0,410 <remove_object_from_list_by_index+0x4>
#   }
# }
 424:	00008067          	jalr	x0,0(x1)

00000428 <add_object_to_list>:
# 
# bool add_object_to_list(object_id list[], unsigned list_max_size,
#                         object_id oid) {
#   for (unsigned i = 0; i < list_max_size - 1; i++) {
 428:	00000793          	addi	x15,x0,0
 42c:	fff58593          	addi	x11,x11,-1
 430:	02b7e663          	bltu	x15,x11,45c <add_object_to_list+0x34>
#       continue;
#     list[i] = oid;
#     list[i + 1] = 0;
#     return TRUE;
#   }
#   uart_send_str("space full\r\n");
 434:	00001537          	lui	x10,0x1
#                         object_id oid) {
 438:	ff010113          	addi	x2,x2,-16
#   uart_send_str("space full\r\n");
 43c:	04450513          	addi	x10,x10,68 # 1044 <delay+0x10c>
#                         object_id oid) {
 440:	00112623          	sw	x1,12(x2)
#   uart_send_str("space full\r\n");
 444:	00001097          	auipc	x1,0x1
 448:	a48080e7          	jalr	x1,-1464(x1) # e8c <uart_send_str>
#   return FALSE;
# }
 44c:	00c12083          	lw	x1,12(x2)
#   return FALSE;
 450:	00000513          	addi	x10,x0,0
# }
 454:	01010113          	addi	x2,x2,16
 458:	00008067          	jalr	x0,0(x1)
#   for (unsigned i = 0; i < list_max_size - 1; i++) {
 45c:	00178713          	addi	x14,x15,1
#     if (list[i])
 460:	00f507b3          	add	x15,x10,x15
 464:	0007c683          	lbu	x13,0(x15)
 468:	00069c63          	bne	x13,x0,480 <add_object_to_list+0x58>
#     list[i + 1] = 0;
 46c:	00e50533          	add	x10,x10,x14
#     list[i] = oid;
 470:	00c78023          	sb	x12,0(x15)
#     list[i + 1] = 0;
 474:	00050023          	sb	x0,0(x10)
#     return TRUE;
 478:	00100513          	addi	x10,x0,1
# }
 47c:	00008067          	jalr	x0,0(x1)
#   for (unsigned i = 0; i < list_max_size - 1; i++) {
 480:	00070793          	addi	x15,x14,0
 484:	fadff06f          	jal	x0,430 <add_object_to_list+0x8>

00000488 <add_entity_to_list>:
# 
# bool add_entity_to_list(entity_id list[], unsigned list_max_size,
#                         entity_id eid) {
#   for (unsigned i = 0; i < list_max_size - 1; i++) {
 488:	00000793          	addi	x15,x0,0
 48c:	fff58593          	addi	x11,x11,-1
 490:	02b7e663          	bltu	x15,x11,4bc <add_entity_to_list+0x34>
#       continue;
#     list[i] = eid;
#     list[i + 1] = 0;
#     return TRUE;
#   }
#   uart_send_str("location full\r\n");
 494:	00001537          	lui	x10,0x1
#                         entity_id eid) {
 498:	ff010113          	addi	x2,x2,-16
#   uart_send_str("location full\r\n");
 49c:	05450513          	addi	x10,x10,84 # 1054 <delay+0x11c>
#                         entity_id eid) {
 4a0:	00112623          	sw	x1,12(x2)
#   uart_send_str("location full\r\n");
 4a4:	00001097          	auipc	x1,0x1
 4a8:	9e8080e7          	jalr	x1,-1560(x1) # e8c <uart_send_str>
#   return FALSE;
# }
 4ac:	00c12083          	lw	x1,12(x2)
#   return FALSE;
 4b0:	00000513          	addi	x10,x0,0
# }
 4b4:	01010113          	addi	x2,x2,16
 4b8:	00008067          	jalr	x0,0(x1)
#   for (unsigned i = 0; i < list_max_size - 1; i++) {
 4bc:	00178713          	addi	x14,x15,1
#     if (list[i])
 4c0:	00f507b3          	add	x15,x10,x15
 4c4:	0007c683          	lbu	x13,0(x15)
 4c8:	00069c63          	bne	x13,x0,4e0 <add_entity_to_list+0x58>
#     list[i + 1] = 0;
 4cc:	00e50533          	add	x10,x10,x14
#     list[i] = eid;
 4d0:	00c78023          	sb	x12,0(x15)
#     list[i + 1] = 0;
 4d4:	00050023          	sb	x0,0(x10)
#     return TRUE;
 4d8:	00100513          	addi	x10,x0,1
# }
 4dc:	00008067          	jalr	x0,0(x1)
#   for (unsigned i = 0; i < list_max_size - 1; i++) {
 4e0:	00070793          	addi	x15,x14,0
 4e4:	fadff06f          	jal	x0,490 <add_entity_to_list+0x8>

000004e8 <remove_entity_from_list>:
# 
# void remove_entity_from_list(entity_id list[], unsigned list_max_size,
#                              entity_id eid) {
#   for (unsigned i = 0; i < list_max_size - 1; i++) {
 4e8:	fff58693          	addi	x13,x11,-1
 4ec:	00b505b3          	add	x11,x10,x11
 4f0:	00000713          	addi	x14,x0,0
 4f4:	fff58593          	addi	x11,x11,-1
 4f8:	00d76a63          	bltu	x14,x13,50c <remove_entity_from_list+0x24>
#       list[j] = list[j + 1];
#       if (!list[i])
#         return;
#     }
#   }
#   uart_send_str("entity not here\r\n");
 4fc:	00001537          	lui	x10,0x1
 500:	06450513          	addi	x10,x10,100 # 1064 <delay+0x12c>
 504:	00001317          	auipc	x6,0x1
 508:	98830067          	jalr	x0,-1656(x6) # e8c <uart_send_str>
#     if (list[i] != eid)
 50c:	00054783          	lbu	x15,0(x10)
 510:	00c79663          	bne	x15,x12,51c <remove_entity_from_list+0x34>
 514:	00050793          	addi	x15,x10,0
#     for (unsigned j = i; j < list_max_size - 1; j++) {
 518:	00b79863          	bne	x15,x11,528 <remove_entity_from_list+0x40>
#   for (unsigned i = 0; i < list_max_size - 1; i++) {
 51c:	00170713          	addi	x14,x14,1
 520:	00150513          	addi	x10,x10,1
 524:	fd5ff06f          	jal	x0,4f8 <remove_entity_from_list+0x10>
#       list[j] = list[j + 1];
 528:	0017c803          	lbu	x16,1(x15)
#       if (!list[i])
 52c:	00178793          	addi	x15,x15,1
#       list[j] = list[j + 1];
 530:	ff078fa3          	sb	x16,-1(x15)
#       if (!list[i])
 534:	00054803          	lbu	x16,0(x10)
 538:	fe0810e3          	bne	x16,x0,518 <remove_entity_from_list+0x30>
# }
 53c:	00008067          	jalr	x0,0(x1)

00000540 <remove_entity_from_list_by_index>:
# 
# void remove_entity_from_list_by_index(entity_id list[], unsigned ix) {
 540:	00000317          	auipc	x6,0x0
 544:	ecc30067          	jalr	x0,-308(x6) # 40c <remove_object_from_list_by_index>

00000548 <action_take>:
#       return;
#     ptr++;
#   }
# }
# 
# void action_take(entity_id eid, const char *object_name) {
 548:	fd010113          	addi	x2,x2,-48
 54c:	01312e23          	sw	x19,28(x2)
 550:	00050993          	addi	x19,x10,0
 554:	02912223          	sw	x9,36(x2)
#   entity *ent = &entities[eid];
#   object_id *objs = locations[ent->location].objects;
 558:	00299493          	slli	x9,x19,0x2
 55c:	00002537          	lui	x10,0x2
 560:	01348733          	add	x14,x9,x19
 564:	54850793          	addi	x15,x10,1352 # 2548 <entities>
 568:	00371713          	slli	x14,x14,0x3
 56c:	00e787b3          	add	x15,x15,x14
 570:	0047c783          	lbu	x15,4(x15)
# void action_take(entity_id eid, const char *object_name) {
 574:	02812423          	sw	x8,40(x2)
 578:	01612823          	sw	x22,16(x2)
#   object_id *objs = locations[ent->location].objects;
 57c:	00379413          	slli	x8,x15,0x3
 580:	00f40433          	add	x8,x8,x15
 584:	00241413          	slli	x8,x8,0x2
 588:	00f40433          	add	x8,x8,x15
 58c:	00241413          	slli	x8,x8,0x2
 590:	000027b7          	lui	x15,0x2
 594:	00440413          	addi	x8,x8,4
 598:	26478793          	addi	x15,x15,612 # 2264 <locations>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
#     const object_id oid = objs[i];
#     if (!oid)
#       break;
#     if (!strings_equal(objects[oid].name, object_name))
 59c:	00002b37          	lui	x22,0x2
# void action_take(entity_id eid, const char *object_name) {
 5a0:	03212023          	sw	x18,32(x2)
 5a4:	01412c23          	sw	x20,24(x2)
 5a8:	01512a23          	sw	x21,20(x2)
 5ac:	02112623          	sw	x1,44(x2)
 5b0:	00058a13          	addi	x20,x11,0
#   object_id *objs = locations[ent->location].objects;
 5b4:	00f40433          	add	x8,x8,x15
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 5b8:	00000913          	addi	x18,x0,0
 5bc:	54850a93          	addi	x21,x10,1352
#     if (!strings_equal(objects[oid].name, object_name))
 5c0:	5c0b0b13          	addi	x22,x22,1472 # 25c0 <objects>
#     const object_id oid = objs[i];
 5c4:	012407b3          	add	x15,x8,x18
 5c8:	0007c603          	lbu	x12,0(x15)
#     if (!oid)
 5cc:	02060a63          	beq	x12,x0,600 <action_take+0xb8>
#     if (!strings_equal(objects[oid].name, object_name))
 5d0:	00261793          	slli	x15,x12,0x2
 5d4:	00fb07b3          	add	x15,x22,x15
 5d8:	0007a503          	lw	x10,0(x15)
 5dc:	000a0593          	addi	x11,x20,0
 5e0:	00c12623          	sw	x12,12(x2)
 5e4:	00000097          	auipc	x1,0x0
 5e8:	adc080e7          	jalr	x1,-1316(x1) # c0 <strings_equal>
 5ec:	00c12603          	lw	x12,12(x2)
 5f0:	04051863          	bne	x10,x0,640 <action_take+0xf8>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 5f4:	00190913          	addi	x18,x18,1
 5f8:	08000793          	addi	x15,x0,128
 5fc:	fcf914e3          	bne	x18,x15,5c4 <action_take+0x7c>
#     if (add_object_to_list(ent->objects, ENTITY_MAX_OBJECTS, oid)) {
#       remove_object_from_list_by_index(objs, i);
#     }
#     return;
#   }
#   uart_send_str(object_name);
 600:	000a0513          	addi	x10,x20,0
 604:	00001097          	auipc	x1,0x1
 608:	888080e7          	jalr	x1,-1912(x1) # e8c <uart_send_str>
#   uart_send_str(" not here\r\n\r\n");
# }
 60c:	02812403          	lw	x8,40(x2)
 610:	02c12083          	lw	x1,44(x2)
 614:	02412483          	lw	x9,36(x2)
 618:	02012903          	lw	x18,32(x2)
 61c:	01c12983          	lw	x19,28(x2)
 620:	01812a03          	lw	x20,24(x2)
 624:	01412a83          	lw	x21,20(x2)
 628:	01012b03          	lw	x22,16(x2)
#   uart_send_str(" not here\r\n\r\n");
 62c:	00001537          	lui	x10,0x1
 630:	07850513          	addi	x10,x10,120 # 1078 <delay+0x140>
# }
 634:	03010113          	addi	x2,x2,48
#   uart_send_str(" not here\r\n\r\n");
 638:	00001317          	auipc	x6,0x1
 63c:	85430067          	jalr	x0,-1964(x6) # e8c <uart_send_str>
#     if (add_object_to_list(ent->objects, ENTITY_MAX_OBJECTS, oid)) {
 640:	01348533          	add	x10,x9,x19
 644:	00351513          	slli	x10,x10,0x3
 648:	00550513          	addi	x10,x10,5
 64c:	02000593          	addi	x11,x0,32
 650:	00aa8533          	add	x10,x21,x10
 654:	00000097          	auipc	x1,0x0
 658:	dd4080e7          	jalr	x1,-556(x1) # 428 <add_object_to_list>
 65c:	02050c63          	beq	x10,x0,694 <action_take+0x14c>
#       remove_object_from_list_by_index(objs, i);
 660:	00040513          	addi	x10,x8,0
# }
 664:	02812403          	lw	x8,40(x2)
 668:	02c12083          	lw	x1,44(x2)
 66c:	02412483          	lw	x9,36(x2)
 670:	01c12983          	lw	x19,28(x2)
 674:	01812a03          	lw	x20,24(x2)
 678:	01412a83          	lw	x21,20(x2)
 67c:	01012b03          	lw	x22,16(x2)
#       remove_object_from_list_by_index(objs, i);
 680:	00090593          	addi	x11,x18,0
# }
 684:	02012903          	lw	x18,32(x2)
 688:	03010113          	addi	x2,x2,48
#       remove_object_from_list_by_index(objs, i);
 68c:	00000317          	auipc	x6,0x0
 690:	d8030067          	jalr	x0,-640(x6) # 40c <remove_object_from_list_by_index>
# }
 694:	02c12083          	lw	x1,44(x2)
 698:	02812403          	lw	x8,40(x2)
 69c:	02412483          	lw	x9,36(x2)
 6a0:	02012903          	lw	x18,32(x2)
 6a4:	01c12983          	lw	x19,28(x2)
 6a8:	01812a03          	lw	x20,24(x2)
 6ac:	01412a83          	lw	x21,20(x2)
 6b0:	01012b03          	lw	x22,16(x2)
 6b4:	03010113          	addi	x2,x2,48
 6b8:	00008067          	jalr	x0,0(x1)

000006bc <action_drop>:
# 
# void action_drop(entity_id eid, const char *object_name) {
 6bc:	fd010113          	addi	x2,x2,-48
 6c0:	03212023          	sw	x18,32(x2)
#   entity *ent = &entities[eid];
#   object_id *objs = ent->objects;
 6c4:	00251913          	slli	x18,x10,0x2
# void action_drop(entity_id eid, const char *object_name) {
 6c8:	02812423          	sw	x8,40(x2)
#   object_id *objs = ent->objects;
 6cc:	00a90433          	add	x8,x18,x10
 6d0:	000027b7          	lui	x15,0x2
 6d4:	00341413          	slli	x8,x8,0x3
# void action_drop(entity_id eid, const char *object_name) {
 6d8:	01612823          	sw	x22,16(x2)
#   object_id *objs = ent->objects;
 6dc:	00540413          	addi	x8,x8,5
 6e0:	54878713          	addi	x14,x15,1352 # 2548 <entities>
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
#     const object_id oid = objs[i];
#     if (!oid)
#       break;
#     if (!strings_equal(objects[oid].name, object_name))
 6e4:	00002b37          	lui	x22,0x2
# void action_drop(entity_id eid, const char *object_name) {
 6e8:	02912223          	sw	x9,36(x2)
 6ec:	01312e23          	sw	x19,28(x2)
 6f0:	01412c23          	sw	x20,24(x2)
 6f4:	01512a23          	sw	x21,20(x2)
 6f8:	02112623          	sw	x1,44(x2)
 6fc:	00050a13          	addi	x20,x10,0
 700:	00058a93          	addi	x21,x11,0
#   object_id *objs = ent->objects;
 704:	00e40433          	add	x8,x8,x14
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 708:	00000993          	addi	x19,x0,0
 70c:	54878493          	addi	x9,x15,1352
#     if (!strings_equal(objects[oid].name, object_name))
 710:	5c0b0b13          	addi	x22,x22,1472 # 25c0 <objects>
#     const object_id oid = objs[i];
 714:	013407b3          	add	x15,x8,x19
 718:	0007c603          	lbu	x12,0(x15)
#     if (!oid)
 71c:	02060a63          	beq	x12,x0,750 <action_drop+0x94>
#     if (!strings_equal(objects[oid].name, object_name))
 720:	00261793          	slli	x15,x12,0x2
 724:	00fb07b3          	add	x15,x22,x15
 728:	0007a503          	lw	x10,0(x15)
 72c:	000a8593          	addi	x11,x21,0
 730:	00c12623          	sw	x12,12(x2)
 734:	00000097          	auipc	x1,0x0
 738:	98c080e7          	jalr	x1,-1652(x1) # c0 <strings_equal>
 73c:	00c12603          	lw	x12,12(x2)
 740:	06051063          	bne	x10,x0,7a0 <action_drop+0xe4>
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 744:	00198993          	addi	x19,x19,1
 748:	02000793          	addi	x15,x0,32
 74c:	fcf994e3          	bne	x19,x15,714 <action_drop+0x58>
#                            LOCATION_MAX_OBJECTS, oid)) {
#       remove_object_from_list_by_index(objs, i);
#     }
#     return;
#   }
#   uart_send_str("u don't have ");
 750:	00001537          	lui	x10,0x1
 754:	08850513          	addi	x10,x10,136 # 1088 <delay+0x150>
 758:	00000097          	auipc	x1,0x0
 75c:	734080e7          	jalr	x1,1844(x1) # e8c <uart_send_str>
#   uart_send_str(object_name);
 760:	000a8513          	addi	x10,x21,0
 764:	00000097          	auipc	x1,0x0
 768:	728080e7          	jalr	x1,1832(x1) # e8c <uart_send_str>
#   uart_send_str("\r\n\r\n");
# }
 76c:	02812403          	lw	x8,40(x2)
 770:	02c12083          	lw	x1,44(x2)
 774:	02412483          	lw	x9,36(x2)
 778:	02012903          	lw	x18,32(x2)
 77c:	01c12983          	lw	x19,28(x2)
 780:	01812a03          	lw	x20,24(x2)
 784:	01412a83          	lw	x21,20(x2)
 788:	01012b03          	lw	x22,16(x2)
#   uart_send_str("\r\n\r\n");
 78c:	00001537          	lui	x10,0x1
 790:	f8050513          	addi	x10,x10,-128 # f80 <delay+0x48>
# }
 794:	03010113          	addi	x2,x2,48
#   uart_send_str("\r\n\r\n");
 798:	00000317          	auipc	x6,0x0
 79c:	6f430067          	jalr	x0,1780(x6) # e8c <uart_send_str>
#     if (add_object_to_list(locations[ent->location].objects,
 7a0:	01490933          	add	x18,x18,x20
 7a4:	00391913          	slli	x18,x18,0x3
 7a8:	012487b3          	add	x15,x9,x18
 7ac:	0047c703          	lbu	x14,4(x15)
 7b0:	00002537          	lui	x10,0x2
 7b4:	26450513          	addi	x10,x10,612 # 2264 <locations>
 7b8:	00371793          	slli	x15,x14,0x3
 7bc:	00e787b3          	add	x15,x15,x14
 7c0:	00279793          	slli	x15,x15,0x2
 7c4:	00e787b3          	add	x15,x15,x14
 7c8:	00279793          	slli	x15,x15,0x2
 7cc:	00478793          	addi	x15,x15,4
 7d0:	08000593          	addi	x11,x0,128
 7d4:	00f50533          	add	x10,x10,x15
 7d8:	00000097          	auipc	x1,0x0
 7dc:	c50080e7          	jalr	x1,-944(x1) # 428 <add_object_to_list>
 7e0:	02050c63          	beq	x10,x0,818 <action_drop+0x15c>
#       remove_object_from_list_by_index(objs, i);
 7e4:	00040513          	addi	x10,x8,0
# }
 7e8:	02812403          	lw	x8,40(x2)
 7ec:	02c12083          	lw	x1,44(x2)
 7f0:	02412483          	lw	x9,36(x2)
 7f4:	02012903          	lw	x18,32(x2)
 7f8:	01812a03          	lw	x20,24(x2)
 7fc:	01412a83          	lw	x21,20(x2)
 800:	01012b03          	lw	x22,16(x2)
#       remove_object_from_list_by_index(objs, i);
 804:	00098593          	addi	x11,x19,0
# }
 808:	01c12983          	lw	x19,28(x2)
 80c:	03010113          	addi	x2,x2,48
#       remove_object_from_list_by_index(objs, i);
 810:	00000317          	auipc	x6,0x0
 814:	bfc30067          	jalr	x0,-1028(x6) # 40c <remove_object_from_list_by_index>
# }
 818:	02c12083          	lw	x1,44(x2)
 81c:	02812403          	lw	x8,40(x2)
 820:	02412483          	lw	x9,36(x2)
 824:	02012903          	lw	x18,32(x2)
 828:	01c12983          	lw	x19,28(x2)
 82c:	01812a03          	lw	x20,24(x2)
 830:	01412a83          	lw	x21,20(x2)
 834:	01012b03          	lw	x22,16(x2)
 838:	03010113          	addi	x2,x2,48
 83c:	00008067          	jalr	x0,0(x1)

00000840 <action_go>:
# 
# void action_go(entity_id eid, unsigned char dir) {
 840:	fe010113          	addi	x2,x2,-32
#   entity *ent = &entities[eid];
#   location *loc = &locations[ent->location];
 844:	00251793          	slli	x15,x10,0x2
# void action_go(entity_id eid, unsigned char dir) {
 848:	00912a23          	sw	x9,20(x2)
#   location *loc = &locations[ent->location];
 84c:	00a787b3          	add	x15,x15,x10
 850:	000024b7          	lui	x9,0x2
 854:	00379793          	slli	x15,x15,0x3
 858:	54848493          	addi	x9,x9,1352 # 2548 <entities>
 85c:	00f484b3          	add	x9,x9,x15
 860:	0044c783          	lbu	x15,4(x9)
# void action_go(entity_id eid, unsigned char dir) {
 864:	00812c23          	sw	x8,24(x2)
 868:	01312623          	sw	x19,12(x2)
#   location_id to = loc->exits[dir];
 86c:	00379413          	slli	x8,x15,0x3
 870:	00f40433          	add	x8,x8,x15
 874:	00241413          	slli	x8,x8,0x2
 878:	00f40433          	add	x8,x8,x15
 87c:	000029b7          	lui	x19,0x2
 880:	26498993          	addi	x19,x19,612 # 2264 <locations>
 884:	00241413          	slli	x8,x8,0x2
 888:	008987b3          	add	x15,x19,x8
 88c:	00b787b3          	add	x15,x15,x11
# void action_go(entity_id eid, unsigned char dir) {
 890:	01212823          	sw	x18,16(x2)
#   location_id to = loc->exits[dir];
 894:	08c7c903          	lbu	x18,140(x15)
# void action_go(entity_id eid, unsigned char dir) {
 898:	00112e23          	sw	x1,28(x2)
 89c:	01412423          	sw	x20,8(x2)
#   if (!to) {
 8a0:	02091863          	bne	x18,x0,8d0 <action_go+0x90>
#                          active_entity)) {
#     remove_entity_from_list(loc->entities, LOCATION_MAX_ENTITIES,
#                             active_entity);
#     ent->location = to;
#   }
# }
 8a4:	01812403          	lw	x8,24(x2)
 8a8:	01c12083          	lw	x1,28(x2)
 8ac:	01412483          	lw	x9,20(x2)
 8b0:	01012903          	lw	x18,16(x2)
 8b4:	00c12983          	lw	x19,12(x2)
 8b8:	00812a03          	lw	x20,8(x2)
#     uart_send_str("cannot go there\r\n\r\n");
 8bc:	00001537          	lui	x10,0x1
 8c0:	09850513          	addi	x10,x10,152 # 1098 <delay+0x160>
# }
 8c4:	02010113          	addi	x2,x2,32
#     uart_send_str("cannot go there\r\n\r\n");
 8c8:	00000317          	auipc	x6,0x0
 8cc:	5c430067          	jalr	x0,1476(x6) # e8c <uart_send_str>
#   if (add_entity_to_list(locations[to].entities, LOCATION_MAX_ENTITIES,
 8d0:	00391513          	slli	x10,x18,0x3
 8d4:	01250533          	add	x10,x10,x18
 8d8:	00251513          	slli	x10,x10,0x2
 8dc:	00002a37          	lui	x20,0x2
 8e0:	01250533          	add	x10,x10,x18
 8e4:	00251513          	slli	x10,x10,0x2
 8e8:	5e0a4603          	lbu	x12,1504(x20) # 25e0 <active_entity>
 8ec:	08450513          	addi	x10,x10,132
 8f0:	00800593          	addi	x11,x0,8
 8f4:	00a98533          	add	x10,x19,x10
 8f8:	00000097          	auipc	x1,0x0
 8fc:	b90080e7          	jalr	x1,-1136(x1) # 488 <add_entity_to_list>
 900:	02050063          	beq	x10,x0,920 <action_go+0xe0>
#     remove_entity_from_list(loc->entities, LOCATION_MAX_ENTITIES,
 904:	5e0a4603          	lbu	x12,1504(x20)
 908:	08440513          	addi	x10,x8,132
 90c:	00800593          	addi	x11,x0,8
 910:	00a98533          	add	x10,x19,x10
 914:	00000097          	auipc	x1,0x0
 918:	bd4080e7          	jalr	x1,-1068(x1) # 4e8 <remove_entity_from_list>
#     ent->location = to;
 91c:	01248223          	sb	x18,4(x9)
# }
 920:	01c12083          	lw	x1,28(x2)
 924:	01812403          	lw	x8,24(x2)
 928:	01412483          	lw	x9,20(x2)
 92c:	01012903          	lw	x18,16(x2)
 930:	00c12983          	lw	x19,12(x2)
 934:	00812a03          	lw	x20,8(x2)
 938:	02010113          	addi	x2,x2,32
 93c:	00008067          	jalr	x0,0(x1)

00000940 <action_give>:
# 
# void action_give(entity_id eid, const char *object_name,
#                  const char *entity_name) {
 940:	fc010113          	addi	x2,x2,-64
 944:	02912a23          	sw	x9,52(x2)
#   entity *ent = &entities[eid];
#   location *loc = &locations[ent->location];
 948:	00251493          	slli	x9,x10,0x2
#                  const char *entity_name) {
 94c:	03412423          	sw	x20,40(x2)
#   location *loc = &locations[ent->location];
 950:	00a48733          	add	x14,x9,x10
 954:	00002a37          	lui	x20,0x2
 958:	548a0793          	addi	x15,x20,1352 # 2548 <entities>
 95c:	00371713          	slli	x14,x14,0x3
 960:	00e787b3          	add	x15,x15,x14
 964:	0047c783          	lbu	x15,4(x15)
#                  const char *entity_name) {
 968:	02812c23          	sw	x8,56(x2)
 96c:	01912a23          	sw	x25,20(x2)
 970:	00379413          	slli	x8,x15,0x3
 974:	00f40433          	add	x8,x8,x15
 978:	00241413          	slli	x8,x8,0x2
 97c:	00f40433          	add	x8,x8,x15
 980:	00241413          	slli	x8,x8,0x2
#   entity_id *ents = loc->entities;
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
#     if (!ents[i])
 984:	00002cb7          	lui	x25,0x2
#                  const char *entity_name) {
 988:	03212823          	sw	x18,48(x2)
 98c:	03512223          	sw	x21,36(x2)
 990:	03612023          	sw	x22,32(x2)
 994:	01812c23          	sw	x24,24(x2)
 998:	02112e23          	sw	x1,60(x2)
 99c:	03312623          	sw	x19,44(x2)
 9a0:	01712e23          	sw	x23,28(x2)
 9a4:	00050a93          	addi	x21,x10,0
 9a8:	00058913          	addi	x18,x11,0
 9ac:	00060b13          	addi	x22,x12,0
 9b0:	08440413          	addi	x8,x8,132
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 9b4:	00000c13          	addi	x24,x0,0
 9b8:	548a0a13          	addi	x20,x20,1352
#     if (!ents[i])
 9bc:	264c8c93          	addi	x25,x25,612 # 2264 <locations>
 9c0:	018407b3          	add	x15,x8,x24
 9c4:	019787b3          	add	x15,x15,x25
 9c8:	0007cb83          	lbu	x23,0(x15)
 9cc:	020b8a63          	beq	x23,x0,a00 <action_give+0xc0>
#       break;
#     entity *to = &entities[ents[i]];
#     if (!strings_equal(to->name, entity_name))
 9d0:	002b9993          	slli	x19,x23,0x2
 9d4:	017987b3          	add	x15,x19,x23
 9d8:	00379793          	slli	x15,x15,0x3
 9dc:	00fa07b3          	add	x15,x20,x15
 9e0:	0007a503          	lw	x10,0(x15)
 9e4:	000b0593          	addi	x11,x22,0
 9e8:	fffff097          	auipc	x1,0xfffff
 9ec:	6d8080e7          	jalr	x1,1752(x1) # c0 <strings_equal>
 9f0:	02051463          	bne	x10,x0,a18 <action_give+0xd8>
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 9f4:	001c0c13          	addi	x24,x24,1
 9f8:	00800793          	addi	x15,x0,8
 9fc:	fcfc12e3          	bne	x24,x15,9c0 <action_give+0x80>
#     }
#     uart_send_str(object_name);
#     uart_send_str(" not in inventory\r\n\r\n");
#     return;
#   }
#   uart_send_str(entity_name);
 a00:	000b0513          	addi	x10,x22,0
 a04:	00000097          	auipc	x1,0x0
 a08:	488080e7          	jalr	x1,1160(x1) # e8c <uart_send_str>
#   uart_send_str(" is not here\r\n\r\n");
 a0c:	00001537          	lui	x10,0x1
 a10:	0c450513          	addi	x10,x10,196 # 10c4 <delay+0x18c>
 a14:	0700006f          	jal	x0,a84 <action_give+0x144>
#     object_id *objs = ent->objects;
 a18:	01548433          	add	x8,x9,x21
 a1c:	00341413          	slli	x8,x8,0x3
 a20:	00540413          	addi	x8,x8,5
#       if (!strings_equal(objects[oid].name, object_name))
 a24:	00002ab7          	lui	x21,0x2
#     object_id *objs = ent->objects;
 a28:	008a0433          	add	x8,x20,x8
#     for (unsigned j = 0; j < ENTITY_MAX_OBJECTS; j++) {
 a2c:	00000493          	addi	x9,x0,0
#       if (!strings_equal(objects[oid].name, object_name))
 a30:	5c0a8a93          	addi	x21,x21,1472 # 25c0 <objects>
#       const object_id oid = objs[j];
 a34:	009407b3          	add	x15,x8,x9
 a38:	0007c603          	lbu	x12,0(x15)
#       if (!oid)
 a3c:	02060a63          	beq	x12,x0,a70 <action_give+0x130>
#       if (!strings_equal(objects[oid].name, object_name))
 a40:	00261793          	slli	x15,x12,0x2
 a44:	00fa87b3          	add	x15,x21,x15
 a48:	0007a503          	lw	x10,0(x15)
 a4c:	00090593          	addi	x11,x18,0
 a50:	00c12623          	sw	x12,12(x2)
 a54:	fffff097          	auipc	x1,0xfffff
 a58:	66c080e7          	jalr	x1,1644(x1) # c0 <strings_equal>
 a5c:	00c12603          	lw	x12,12(x2)
 a60:	04051e63          	bne	x10,x0,abc <action_give+0x17c>
#     for (unsigned j = 0; j < ENTITY_MAX_OBJECTS; j++) {
 a64:	00148493          	addi	x9,x9,1
 a68:	02000793          	addi	x15,x0,32
 a6c:	fcf494e3          	bne	x9,x15,a34 <action_give+0xf4>
#     uart_send_str(object_name);
 a70:	00090513          	addi	x10,x18,0
 a74:	00000097          	auipc	x1,0x0
 a78:	418080e7          	jalr	x1,1048(x1) # e8c <uart_send_str>
#     uart_send_str(" not in inventory\r\n\r\n");
 a7c:	00001537          	lui	x10,0x1
 a80:	0ac50513          	addi	x10,x10,172 # 10ac <delay+0x174>
# }
 a84:	03812403          	lw	x8,56(x2)
 a88:	03c12083          	lw	x1,60(x2)
 a8c:	03412483          	lw	x9,52(x2)
 a90:	03012903          	lw	x18,48(x2)
 a94:	02c12983          	lw	x19,44(x2)
 a98:	02812a03          	lw	x20,40(x2)
 a9c:	02412a83          	lw	x21,36(x2)
 aa0:	02012b03          	lw	x22,32(x2)
 aa4:	01c12b83          	lw	x23,28(x2)
 aa8:	01812c03          	lw	x24,24(x2)
 aac:	01412c83          	lw	x25,20(x2)
 ab0:	04010113          	addi	x2,x2,64
#   uart_send_str(" is not here\r\n\r\n");
 ab4:	00000317          	auipc	x6,0x0
 ab8:	3d830067          	jalr	x0,984(x6) # e8c <uart_send_str>
#       if (add_object_to_list(to->objects, ENTITY_MAX_OBJECTS, oid)) {
 abc:	01798533          	add	x10,x19,x23
 ac0:	00351513          	slli	x10,x10,0x3
 ac4:	00550513          	addi	x10,x10,5
 ac8:	02000593          	addi	x11,x0,32
 acc:	00aa0533          	add	x10,x20,x10
 ad0:	00000097          	auipc	x1,0x0
 ad4:	958080e7          	jalr	x1,-1704(x1) # 428 <add_object_to_list>
 ad8:	04050263          	beq	x10,x0,b1c <action_give+0x1dc>
#         remove_object_from_list_by_index(objs, j);
 adc:	00040513          	addi	x10,x8,0
# }
 ae0:	03812403          	lw	x8,56(x2)
 ae4:	03c12083          	lw	x1,60(x2)
 ae8:	03012903          	lw	x18,48(x2)
 aec:	02c12983          	lw	x19,44(x2)
 af0:	02812a03          	lw	x20,40(x2)
 af4:	02412a83          	lw	x21,36(x2)
 af8:	02012b03          	lw	x22,32(x2)
 afc:	01c12b83          	lw	x23,28(x2)
 b00:	01812c03          	lw	x24,24(x2)
 b04:	01412c83          	lw	x25,20(x2)
#         remove_object_from_list_by_index(objs, j);
 b08:	00048593          	addi	x11,x9,0
# }
 b0c:	03412483          	lw	x9,52(x2)
 b10:	04010113          	addi	x2,x2,64
#         remove_object_from_list_by_index(objs, j);
 b14:	00000317          	auipc	x6,0x0
 b18:	8f830067          	jalr	x0,-1800(x6) # 40c <remove_object_from_list_by_index>
# }
 b1c:	03c12083          	lw	x1,60(x2)
 b20:	03812403          	lw	x8,56(x2)
 b24:	03412483          	lw	x9,52(x2)
 b28:	03012903          	lw	x18,48(x2)
 b2c:	02c12983          	lw	x19,44(x2)
 b30:	02812a03          	lw	x20,40(x2)
 b34:	02412a83          	lw	x21,36(x2)
 b38:	02012b03          	lw	x22,32(x2)
 b3c:	01c12b83          	lw	x23,28(x2)
 b40:	01812c03          	lw	x24,24(x2)
 b44:	01412c83          	lw	x25,20(x2)
 b48:	04010113          	addi	x2,x2,64
 b4c:	00008067          	jalr	x0,0(x1)

00000b50 <print_help>:
# 
# void print_help() {
#   uart_send_str(
 b50:	00001537          	lui	x10,0x1
 b54:	0d850513          	addi	x10,x10,216 # 10d8 <delay+0x1a0>
 b58:	00000317          	auipc	x6,0x0
 b5c:	33430067          	jalr	x0,820(x6) # e8c <uart_send_str>

00000b60 <handle_inbuf>:
#       "inventory\r\n  t <object>: take object\r\n  d <object>: drop "
#       "object\r\n  g <object> <entity>: give object to entity\r\n  help: this "
#       "message\r\n\r\n");
# }
# 
# void handle_inbuf() {
 b60:	fd010113          	addi	x2,x2,-48
#   const char *words[8];
#   char *ptr = inbuf.line;
 b64:	000027b7          	lui	x15,0x2
# void handle_inbuf() {
 b68:	02912223          	sw	x9,36(x2)
 b6c:	02112623          	sw	x1,44(x2)
 b70:	02812423          	sw	x8,40(x2)
 b74:	00010713          	addi	x14,x2,0
#   unsigned nwords = 0;
 b78:	00000493          	addi	x9,x0,0
#   char *ptr = inbuf.line;
 b7c:	5e478793          	addi	x15,x15,1508 # 25e4 <inbuf>
#   while (1) {
#     words[nwords++] = ptr;
#     while (*ptr && *ptr != ' ') {
 b80:	02000513          	addi	x10,x0,32
#     }
#     if (!*ptr)
#       break;
#     *ptr = 0;
#     ptr++;
#     if (nwords == sizeof(words) / sizeof(const char *)) {
 b84:	00800593          	addi	x11,x0,8
#     words[nwords++] = ptr;
 b88:	00148493          	addi	x9,x9,1
 b8c:	00f72023          	sw	x15,0(x14)
#     while (*ptr && *ptr != ' ') {
 b90:	0007c603          	lbu	x12,0(x15)
#       ptr++;
 b94:	00078693          	addi	x13,x15,0
#     while (*ptr && *ptr != ' ') {
 b98:	02060463          	beq	x12,x0,bc0 <handle_inbuf+0x60>
#       ptr++;
 b9c:	00178793          	addi	x15,x15,1
#     while (*ptr && *ptr != ' ') {
 ba0:	fea618e3          	bne	x12,x10,b90 <handle_inbuf+0x30>
#     *ptr = 0;
 ba4:	00068023          	sb	x0,0(x13)
#     if (nwords == sizeof(words) / sizeof(const char *)) {
 ba8:	00470713          	addi	x14,x14,4
 bac:	fcb49ee3          	bne	x9,x11,b88 <handle_inbuf+0x28>
#       uart_send_str("too many words, some ignored\r\n\r\n");
 bb0:	00001537          	lui	x10,0x1
 bb4:	1ac50513          	addi	x10,x10,428 # 11ac <delay+0x274>
 bb8:	00000097          	auipc	x1,0x0
 bbc:	2d4080e7          	jalr	x1,724(x1) # e8c <uart_send_str>
#   }
#   //  for (unsigned i = 0; i < nwords; i++) {
#   //    uart_send_str(words[i]);
#   //    uart_send_str("\r\n");
#   //  }
#   if (strings_equal(words[0], "help")) {
 bc0:	00012403          	lw	x8,0(x2)
 bc4:	000015b7          	lui	x11,0x1
 bc8:	1d058593          	addi	x11,x11,464 # 11d0 <delay+0x298>
 bcc:	00040513          	addi	x10,x8,0
 bd0:	fffff097          	auipc	x1,0xfffff
 bd4:	4f0080e7          	jalr	x1,1264(x1) # c0 <strings_equal>
 bd8:	00050e63          	beq	x10,x0,bf4 <handle_inbuf+0x94>
#     }
#     action_give(active_entity, words[1], words[2]);
#   } else {
#     uart_send_str("not understood\r\n\r\n");
#   }
# }
 bdc:	02812403          	lw	x8,40(x2)
 be0:	02c12083          	lw	x1,44(x2)
 be4:	02412483          	lw	x9,36(x2)
 be8:	03010113          	addi	x2,x2,48
#     print_help();
 bec:	00000317          	auipc	x6,0x0
 bf0:	f6430067          	jalr	x0,-156(x6) # b50 <print_help>
#   } else if (strings_equal(words[0], "i")) {
 bf4:	000015b7          	lui	x11,0x1
 bf8:	1d858593          	addi	x11,x11,472 # 11d8 <delay+0x2a0>
 bfc:	00040513          	addi	x10,x8,0
 c00:	fffff097          	auipc	x1,0xfffff
 c04:	4c0080e7          	jalr	x1,1216(x1) # c0 <strings_equal>
 c08:	02050a63          	beq	x10,x0,c3c <handle_inbuf+0xdc>
#     print_inventory(active_entity);
 c0c:	000027b7          	lui	x15,0x2
 c10:	5e07c503          	lbu	x10,1504(x15) # 25e0 <active_entity>
 c14:	fffff097          	auipc	x1,0xfffff
 c18:	710080e7          	jalr	x1,1808(x1) # 324 <print_inventory>
#     uart_send_str("\r\n");
 c1c:	00001537          	lui	x10,0x1
 c20:	24850513          	addi	x10,x10,584 # 1248 <delay+0x310>
# }
 c24:	02812403          	lw	x8,40(x2)
 c28:	02c12083          	lw	x1,44(x2)
 c2c:	02412483          	lw	x9,36(x2)
 c30:	03010113          	addi	x2,x2,48
#     uart_send_str("not understood\r\n\r\n");
 c34:	00000317          	auipc	x6,0x0
 c38:	25830067          	jalr	x0,600(x6) # e8c <uart_send_str>
#   } else if (strings_equal(words[0], "t")) {
 c3c:	000015b7          	lui	x11,0x1
 c40:	1dc58593          	addi	x11,x11,476 # 11dc <delay+0x2a4>
 c44:	00040513          	addi	x10,x8,0
 c48:	fffff097          	auipc	x1,0xfffff
 c4c:	478080e7          	jalr	x1,1144(x1) # c0 <strings_equal>
 c50:	02050e63          	beq	x10,x0,c8c <handle_inbuf+0x12c>
#     if (nwords < 2) {
 c54:	00100793          	addi	x15,x0,1
 c58:	00f49863          	bne	x9,x15,c68 <handle_inbuf+0x108>
#       uart_send_str("take what\r\n\r\n");
 c5c:	00001537          	lui	x10,0x1
 c60:	1e050513          	addi	x10,x10,480 # 11e0 <delay+0x2a8>
 c64:	fc1ff06f          	jal	x0,c24 <handle_inbuf+0xc4>
# }
 c68:	02812403          	lw	x8,40(x2)
#     action_take(active_entity, words[1]);
 c6c:	000027b7          	lui	x15,0x2
 c70:	00412583          	lw	x11,4(x2)
# }
 c74:	02c12083          	lw	x1,44(x2)
 c78:	02412483          	lw	x9,36(x2)
#     action_take(active_entity, words[1]);
 c7c:	5e07c503          	lbu	x10,1504(x15) # 25e0 <active_entity>
# }
 c80:	03010113          	addi	x2,x2,48
#     action_take(active_entity, words[1]);
 c84:	00000317          	auipc	x6,0x0
 c88:	8c430067          	jalr	x0,-1852(x6) # 548 <action_take>
#   } else if (strings_equal(words[0], "d")) {
 c8c:	000015b7          	lui	x11,0x1
 c90:	1f058593          	addi	x11,x11,496 # 11f0 <delay+0x2b8>
 c94:	00040513          	addi	x10,x8,0
 c98:	fffff097          	auipc	x1,0xfffff
 c9c:	428080e7          	jalr	x1,1064(x1) # c0 <strings_equal>
 ca0:	02050e63          	beq	x10,x0,cdc <handle_inbuf+0x17c>
#     if (nwords < 2) {
 ca4:	00100793          	addi	x15,x0,1
 ca8:	00f49863          	bne	x9,x15,cb8 <handle_inbuf+0x158>
#       uart_send_str("drop what\r\n\r\n");
 cac:	00001537          	lui	x10,0x1
 cb0:	1f450513          	addi	x10,x10,500 # 11f4 <delay+0x2bc>
 cb4:	f71ff06f          	jal	x0,c24 <handle_inbuf+0xc4>
# }
 cb8:	02812403          	lw	x8,40(x2)
#     action_drop(active_entity, words[1]);
 cbc:	000027b7          	lui	x15,0x2
 cc0:	00412583          	lw	x11,4(x2)
# }
 cc4:	02c12083          	lw	x1,44(x2)
 cc8:	02412483          	lw	x9,36(x2)
#     action_drop(active_entity, words[1]);
 ccc:	5e07c503          	lbu	x10,1504(x15) # 25e0 <active_entity>
# }
 cd0:	03010113          	addi	x2,x2,48
#     action_drop(active_entity, words[1]);
 cd4:	00000317          	auipc	x6,0x0
 cd8:	9e830067          	jalr	x0,-1560(x6) # 6bc <action_drop>
#   } else if (strings_equal(words[0], "n")) {
 cdc:	000015b7          	lui	x11,0x1
 ce0:	20458593          	addi	x11,x11,516 # 1204 <delay+0x2cc>
 ce4:	00040513          	addi	x10,x8,0
 ce8:	fffff097          	auipc	x1,0xfffff
 cec:	3d8080e7          	jalr	x1,984(x1) # c0 <strings_equal>
#     action_go(active_entity, 0);
 cf0:	00000593          	addi	x11,x0,0
#   } else if (strings_equal(words[0], "n")) {
 cf4:	04051c63          	bne	x10,x0,d4c <handle_inbuf+0x1ec>
#   } else if (strings_equal(words[0], "e")) {
 cf8:	000015b7          	lui	x11,0x1
 cfc:	fb858593          	addi	x11,x11,-72 # fb8 <delay+0x80>
 d00:	00040513          	addi	x10,x8,0
 d04:	fffff097          	auipc	x1,0xfffff
 d08:	3bc080e7          	jalr	x1,956(x1) # c0 <strings_equal>
#     action_go(active_entity, 1);
 d0c:	00100593          	addi	x11,x0,1
#   } else if (strings_equal(words[0], "e")) {
 d10:	02051e63          	bne	x10,x0,d4c <handle_inbuf+0x1ec>
#   } else if (strings_equal(words[0], "s")) {
 d14:	000015b7          	lui	x11,0x1
 d18:	20858593          	addi	x11,x11,520 # 1208 <delay+0x2d0>
 d1c:	00040513          	addi	x10,x8,0
 d20:	fffff097          	auipc	x1,0xfffff
 d24:	3a0080e7          	jalr	x1,928(x1) # c0 <strings_equal>
#     action_go(active_entity, 2);
 d28:	00200593          	addi	x11,x0,2
#   } else if (strings_equal(words[0], "s")) {
 d2c:	02051063          	bne	x10,x0,d4c <handle_inbuf+0x1ec>
#   } else if (strings_equal(words[0], "w")) {
 d30:	000015b7          	lui	x11,0x1
 d34:	20c58593          	addi	x11,x11,524 # 120c <delay+0x2d4>
 d38:	00040513          	addi	x10,x8,0
 d3c:	fffff097          	auipc	x1,0xfffff
 d40:	384080e7          	jalr	x1,900(x1) # c0 <strings_equal>
 d44:	02050463          	beq	x10,x0,d6c <handle_inbuf+0x20c>
#     action_go(active_entity, 3);
 d48:	00300593          	addi	x11,x0,3
# }
 d4c:	02812403          	lw	x8,40(x2)
#     action_go(active_entity, 3);
 d50:	000027b7          	lui	x15,0x2
# }
 d54:	02c12083          	lw	x1,44(x2)
 d58:	02412483          	lw	x9,36(x2)
#     action_go(active_entity, 3);
 d5c:	5e07c503          	lbu	x10,1504(x15) # 25e0 <active_entity>
# }
 d60:	03010113          	addi	x2,x2,48
#     action_go(active_entity, 3);
 d64:	00000317          	auipc	x6,0x0
 d68:	adc30067          	jalr	x0,-1316(x6) # 840 <action_go>
#   } else if (strings_equal(words[0], "g")) {
 d6c:	000015b7          	lui	x11,0x1
 d70:	21058593          	addi	x11,x11,528 # 1210 <delay+0x2d8>
 d74:	00040513          	addi	x10,x8,0
 d78:	fffff097          	auipc	x1,0xfffff
 d7c:	348080e7          	jalr	x1,840(x1) # c0 <strings_equal>
 d80:	04050a63          	beq	x10,x0,dd4 <handle_inbuf+0x274>
#     if (nwords < 2) {
 d84:	00100793          	addi	x15,x0,1
 d88:	00f49863          	bne	x9,x15,d98 <handle_inbuf+0x238>
#       uart_send_str("give what\r\n\r\n");
 d8c:	00001537          	lui	x10,0x1
 d90:	21450513          	addi	x10,x10,532 # 1214 <delay+0x2dc>
 d94:	e91ff06f          	jal	x0,c24 <handle_inbuf+0xc4>
#     if (nwords < 3) {
 d98:	00200793          	addi	x15,x0,2
 d9c:	00f49863          	bne	x9,x15,dac <handle_inbuf+0x24c>
#       uart_send_str("give to whom\r\n\r\n");
 da0:	00001537          	lui	x10,0x1
 da4:	22450513          	addi	x10,x10,548 # 1224 <delay+0x2ec>
 da8:	e7dff06f          	jal	x0,c24 <handle_inbuf+0xc4>
# }
 dac:	02812403          	lw	x8,40(x2)
#     action_give(active_entity, words[1], words[2]);
 db0:	000027b7          	lui	x15,0x2
 db4:	00812603          	lw	x12,8(x2)
 db8:	00412583          	lw	x11,4(x2)
# }
 dbc:	02c12083          	lw	x1,44(x2)
 dc0:	02412483          	lw	x9,36(x2)
#     action_give(active_entity, words[1], words[2]);
 dc4:	5e07c503          	lbu	x10,1504(x15) # 25e0 <active_entity>
# }
 dc8:	03010113          	addi	x2,x2,48
#     action_give(active_entity, words[1], words[2]);
 dcc:	00000317          	auipc	x6,0x0
 dd0:	b7430067          	jalr	x0,-1164(x6) # 940 <action_give>
#     uart_send_str("not understood\r\n\r\n");
 dd4:	00001537          	lui	x10,0x1
 dd8:	23850513          	addi	x10,x10,568 # 1238 <delay+0x300>
 ddc:	e49ff06f          	jal	x0,c24 <handle_inbuf+0xc4>

00000de0 <input_inbuf>:
# 
# void input_inbuf() {
 de0:	fe010113          	addi	x2,x2,-32
 de4:	00812c23          	sw	x8,24(x2)
#   while (1) {
#     const char ch = uart_read_char();
#     if (ch == CHAR_BACKSPACE) {
#       if (inbuf.ix > 0) {
 de8:	00002437          	lui	x8,0x2
# void input_inbuf() {
 dec:	00912a23          	sw	x9,20(x2)
 df0:	01212823          	sw	x18,16(x2)
 df4:	01312623          	sw	x19,12(x2)
 df8:	01412423          	sw	x20,8(x2)
 dfc:	00112e23          	sw	x1,28(x2)
#       if (inbuf.ix > 0) {
 e00:	5e440413          	addi	x8,x8,1508 # 25e4 <inbuf>
#     if (ch == CHAR_BACKSPACE) {
 e04:	07f00913          	addi	x18,x0,127
#         inbuf.ix--;
#         uart_send_char(ch);
#       }
#     } else if (ch == CHAR_CARRIAGE_RETURN ||
 e08:	00d00993          	addi	x19,x0,13
 e0c:	04f00a13          	addi	x20,x0,79
#     } else {
#       inbuf.line[inbuf.ix] = ch;
#       inbuf.ix++;
#       uart_send_char(ch);
#     }
#     *leds = inbuf.ix;
 e10:	000024b7          	lui	x9,0x2
#     const char ch = uart_read_char();
 e14:	00000097          	auipc	x1,0x0
 e18:	10c080e7          	jalr	x1,268(x1) # f20 <uart_read_char>
#       if (inbuf.ix > 0) {
 e1c:	05044783          	lbu	x15,80(x8)
#     if (ch == CHAR_BACKSPACE) {
 e20:	03251463          	bne	x10,x18,e48 <input_inbuf+0x68>
#       if (inbuf.ix > 0) {
 e24:	00078a63          	beq	x15,x0,e38 <input_inbuf+0x58>
#         inbuf.ix--;
 e28:	fff78793          	addi	x15,x15,-1
#       inbuf.ix++;
 e2c:	04f40823          	sb	x15,80(x8)
#       uart_send_char(ch);
 e30:	00000097          	auipc	x1,0x0
 e34:	0d8080e7          	jalr	x1,216(x1) # f08 <uart_send_char>
#     *leds = inbuf.ix;
 e38:	5d04a783          	lw	x15,1488(x9) # 25d0 <leds>
 e3c:	05044703          	lbu	x14,80(x8)
 e40:	00e78023          	sb	x14,0(x15)
#   while (1) {
 e44:	fd1ff06f          	jal	x0,e14 <input_inbuf+0x34>
#     } else if (ch == CHAR_CARRIAGE_RETURN ||
 e48:	01350463          	beq	x10,x19,e50 <input_inbuf+0x70>
 e4c:	03479863          	bne	x15,x20,e7c <input_inbuf+0x9c>
#       inbuf.line[inbuf.ix] = 0;
 e50:	00f407b3          	add	x15,x8,x15
 e54:	00078023          	sb	x0,0(x15)
#       inbuf.ix = 0;
 e58:	04040823          	sb	x0,80(x8)
#   }
# }
 e5c:	01c12083          	lw	x1,28(x2)
 e60:	01812403          	lw	x8,24(x2)
 e64:	01412483          	lw	x9,20(x2)
 e68:	01012903          	lw	x18,16(x2)
 e6c:	00c12983          	lw	x19,12(x2)
 e70:	00812a03          	lw	x20,8(x2)
 e74:	02010113          	addi	x2,x2,32
 e78:	00008067          	jalr	x0,0(x1)
#       inbuf.line[inbuf.ix] = ch;
 e7c:	00f406b3          	add	x13,x8,x15
 e80:	00a68023          	sb	x10,0(x13)
#       inbuf.ix++;
 e84:	00178793          	addi	x15,x15,1
 e88:	fa5ff06f          	jal	x0,e2c <input_inbuf+0x4c>

00000e8c <uart_send_str>:
# 
# void uart_send_str(const char *str) {
#   while (*str) {
#     while (*uart_out)
 e8c:	000026b7          	lui	x13,0x2
#   while (*str) {
 e90:	00054783          	lbu	x15,0(x10)
 e94:	00079463          	bne	x15,x0,e9c <uart_send_str+0x10>
#       ;
#     *uart_out = *str++;
#   }
# }
 e98:	00008067          	jalr	x0,0(x1)
#     while (*uart_out)
 e9c:	5d46a703          	lw	x14,1492(x13) # 25d4 <uart_out>
 ea0:	00074603          	lbu	x12,0(x14)
 ea4:	fe061ee3          	bne	x12,x0,ea0 <uart_send_str+0x14>
#     *uart_out = *str++;
 ea8:	00150513          	addi	x10,x10,1
 eac:	00f70023          	sb	x15,0(x14)
 eb0:	fe1ff06f          	jal	x0,e90 <uart_send_str+0x4>

00000eb4 <uart_send_hex_byte>:
# 
# void uart_send_hex_byte(char ch) {
 eb4:	ff010113          	addi	x2,x2,-16
 eb8:	00812423          	sw	x8,8(x2)
 ebc:	00050413          	addi	x8,x10,0
#   uart_send_hex_nibble((ch & 0xf0) >> 4);
 ec0:	00455513          	srli	x10,x10,0x4
# void uart_send_hex_byte(char ch) {
 ec4:	00112623          	sw	x1,12(x2)
#   uart_send_hex_nibble((ch & 0xf0) >> 4);
 ec8:	00000097          	auipc	x1,0x0
 ecc:	020080e7          	jalr	x1,32(x1) # ee8 <uart_send_hex_nibble>
#   uart_send_hex_nibble(ch & 0x0f);
 ed0:	00f47513          	andi	x10,x8,15
# }
 ed4:	00812403          	lw	x8,8(x2)
 ed8:	00c12083          	lw	x1,12(x2)
 edc:	01010113          	addi	x2,x2,16
#   uart_send_hex_nibble(ch & 0x0f);
 ee0:	00000317          	auipc	x6,0x0
 ee4:	00830067          	jalr	x0,8(x6) # ee8 <uart_send_hex_nibble>

00000ee8 <uart_send_hex_nibble>:
# 
# void uart_send_hex_nibble(char nibble) {
#   if (nibble < 10) {
 ee8:	00900793          	addi	x15,x0,9
 eec:	00a7ea63          	bltu	x15,x10,f00 <uart_send_hex_nibble+0x18>
#     uart_send_char('0' + nibble);
 ef0:	03050513          	addi	x10,x10,48
#   } else {
#     uart_send_char('A' + (nibble - 10));
 ef4:	0ff57513          	andi	x10,x10,255
 ef8:	00000317          	auipc	x6,0x0
 efc:	01030067          	jalr	x0,16(x6) # f08 <uart_send_char>
 f00:	03750513          	addi	x10,x10,55
 f04:	ff1ff06f          	jal	x0,ef4 <uart_send_hex_nibble+0xc>

00000f08 <uart_send_char>:
#   }
# }
# 
# void uart_send_char(char ch) {
#   while (*uart_out)
 f08:	000027b7          	lui	x15,0x2
 f0c:	5d47a783          	lw	x15,1492(x15) # 25d4 <uart_out>
 f10:	0007c703          	lbu	x14,0(x15)
 f14:	fe071ee3          	bne	x14,x0,f10 <uart_send_char+0x8>
#     ;
#   *uart_out = ch;
 f18:	00a78023          	sb	x10,0(x15)
# }
 f1c:	00008067          	jalr	x0,0(x1)

00000f20 <uart_read_char>:
# 
# char uart_read_char() {
#   char ch;
#   while ((ch = *uart_in) == 0)
 f20:	000027b7          	lui	x15,0x2
 f24:	5d87a703          	lw	x14,1496(x15) # 25d8 <uart_in>
 f28:	00074783          	lbu	x15,0(x14)
 f2c:	0ff7f513          	andi	x10,x15,255
 f30:	fe078ce3          	beq	x15,x0,f28 <uart_read_char+0x8>
#     ;
#   return ch;
# }
 f34:	00008067          	jalr	x0,0(x1)

00000f38 <delay>:
# 
# inline void delay(volatile unsigned int ticks) {
 f38:	ff010113          	addi	x2,x2,-16
 f3c:	00a12623          	sw	x10,12(x2)
#   while (ticks--)
 f40:	00c12783          	lw	x15,12(x2)
 f44:	fff78713          	addi	x14,x15,-1
 f48:	00e12623          	sw	x14,12(x2)
 f4c:	fe079ae3          	bne	x15,x0,f40 <delay+0x8>
#     ;
# }
 f50:	01010113          	addi	x2,x2,16
 f54:	00008067          	jalr	x0,0(x1)
