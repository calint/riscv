
os:     file format elf32-littleriscv


Disassembly of section .text:

00000000 <_start>:
# .global _start
# 
# # sets up the stack before calling c function 'run' in 'os.c'
# _start:
#     lui sp, 0x2         # set stack at # 0x1fff0
   0:	00002137          	lui	x2,0x2
#     addi sp, sp, -16    #
   4:	ff010113          	addi	x2,x2,-16 # 1ff0 <__BSS_END__+0x1fc>
   8:	004000ef          	jal	x1,c <run>

0000000c <run>:
# void handle_inbuf();
# 
# unsigned char active_entity = 1;
# 
# void run() {
#   uart_send_str(hello);
   c:	000027b7          	lui	x15,0x2
  10:	d987a503          	lw	x10,-616(x15) # 1d98 <hello>
# void run() {
  14:	ff010113          	addi	x2,x2,-16
  18:	00812423          	sw	x8,8(x2)
  1c:	00112623          	sw	x1,12(x2)
#   while (1) {
#     describe_current_location();
#     uart_send_str("> ");
  20:	00001437          	lui	x8,0x1
#   uart_send_str(hello);
  24:	00001097          	auipc	x1,0x1
  28:	890080e7          	jalr	x1,-1904(x1) # 8b4 <uart_send_str>
#     describe_current_location();
  2c:	00000097          	auipc	x1,0x0
  30:	058080e7          	jalr	x1,88(x1) # 84 <describe_current_location>
#     uart_send_str("> ");
  34:	a0840513          	addi	x10,x8,-1528 # a08 <delay+0xa8>
  38:	00001097          	auipc	x1,0x1
  3c:	87c080e7          	jalr	x1,-1924(x1) # 8b4 <uart_send_str>
#     input_inbuf();
  40:	00000097          	auipc	x1,0x0
  44:	7bc080e7          	jalr	x1,1980(x1) # 7fc <input_inbuf>
#     handle_inbuf();
  48:	00000097          	auipc	x1,0x0
  4c:	5a4080e7          	jalr	x1,1444(x1) # 5ec <handle_inbuf>
#   while (1) {
  50:	fddff06f          	jal	x0,2c <run+0x20>

00000054 <strings_equal>:
#   }
# }
# 
# bool strings_equal(const char *s1, const char *s2) {
  54:	00050793          	addi	x15,x10,0
#   while (1) {
#     char diff = *s1 - *s2;
  58:	0007c703          	lbu	x14,0(x15)
  5c:	0005c503          	lbu	x10,0(x11)
#     if (diff)
  60:	00a71e63          	bne	x14,x10,7c <strings_equal+0x28>
#       return FALSE;
#     if (!*s1 && !*s2)
  64:	00051663          	bne	x10,x0,70 <strings_equal+0x1c>
  68:	00100513          	addi	x10,x0,1
  6c:	00008067          	jalr	x0,0(x1)
#       return TRUE;
#     if (!*s1 || !*s2)
#       return FALSE;
#     s1++;
  70:	00178793          	addi	x15,x15,1
#     s2++;
  74:	00158593          	addi	x11,x11,1
#   while (1) {
  78:	fe1ff06f          	jal	x0,58 <strings_equal+0x4>
#       return FALSE;
  7c:	00000513          	addi	x10,x0,0
#   }
# }
  80:	00008067          	jalr	x0,0(x1)

00000084 <describe_current_location>:
# 
# void describe_current_location() {
#   uart_send_str("u r in ");
  84:	00001537          	lui	x10,0x1
# void describe_current_location() {
  88:	fd010113          	addi	x2,x2,-48
#   uart_send_str("u r in ");
  8c:	a0c50513          	addi	x10,x10,-1524 # a0c <delay+0xac>
# void describe_current_location() {
  90:	02112623          	sw	x1,44(x2)
  94:	02812423          	sw	x8,40(x2)
  98:	02912223          	sw	x9,36(x2)
  9c:	03212023          	sw	x18,32(x2)
  a0:	01312e23          	sw	x19,28(x2)
  a4:	01412c23          	sw	x20,24(x2)
  a8:	01512a23          	sw	x21,20(x2)
  ac:	01612823          	sw	x22,16(x2)
  b0:	01712623          	sw	x23,12(x2)
  b4:	01812423          	sw	x24,8(x2)
#   const location_id current_location = entities[active_entity].location;
  b8:	00002937          	lui	x18,0x2
#   uart_send_str("u r in ");
  bc:	00000097          	auipc	x1,0x0
  c0:	7f8080e7          	jalr	x1,2040(x1) # 8b4 <uart_send_str>
#   const location_id current_location = entities[active_entity].location;
  c4:	d9c94683          	lbu	x13,-612(x18) # 1d9c <active_entity>
  c8:	000029b7          	lui	x19,0x2
  cc:	d0498713          	addi	x14,x19,-764 # 1d04 <entities>
  d0:	00269793          	slli	x15,x13,0x2
  d4:	00d787b3          	add	x15,x15,x13
  d8:	00379793          	slli	x15,x15,0x3
  dc:	00f707b3          	add	x15,x14,x15
  e0:	0047c703          	lbu	x14,4(x15)
#   uart_send_str(locations[current_location].name);
  e4:	000024b7          	lui	x9,0x2
  e8:	ab448793          	addi	x15,x9,-1356 # 1ab4 <locations>
  ec:	00371413          	slli	x8,x14,0x3
  f0:	00e40433          	add	x8,x8,x14
  f4:	00241413          	slli	x8,x8,0x2
  f8:	00e40433          	add	x8,x8,x14
  fc:	00241413          	slli	x8,x8,0x2
 100:	008787b3          	add	x15,x15,x8
 104:	0007a503          	lw	x10,0(x15)
 108:	08440a93          	addi	x21,x8,132
#   uart_send_str("\r\nu c: ");
#   // print entities in current location
#   unsigned char add_list_sep = 0;
#   const entity_id *ents = locations[current_location].entities;
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 10c:	00000b93          	addi	x23,x0,0
#   uart_send_str(locations[current_location].name);
 110:	00000097          	auipc	x1,0x0
 114:	7a4080e7          	jalr	x1,1956(x1) # 8b4 <uart_send_str>
#   uart_send_str("\r\nu c: ");
 118:	00001537          	lui	x10,0x1
 11c:	a1450513          	addi	x10,x10,-1516 # a14 <delay+0xb4>
 120:	00000097          	auipc	x1,0x0
 124:	794080e7          	jalr	x1,1940(x1) # 8b4 <uart_send_str>
#   unsigned char add_list_sep = 0;
 128:	00000793          	addi	x15,x0,0
 12c:	d0498993          	addi	x19,x19,-764
 130:	ab448493          	addi	x9,x9,-1356
#     const entity_id id = ents[i];
#     if (!id)
#       break;
#     if (id != active_entity) {
#       if (add_list_sep) {
#         uart_send_str(", ");
 134:	00001b37          	lui	x22,0x1
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 138:	00800a13          	addi	x20,x0,8
#     const entity_id id = ents[i];
 13c:	015b8733          	add	x14,x23,x21
 140:	00e48733          	add	x14,x9,x14
 144:	00074c03          	lbu	x24,0(x14)
#     if (!id)
 148:	040c0263          	beq	x24,x0,18c <describe_current_location+0x108>
#     if (id != active_entity) {
 14c:	d9c94703          	lbu	x14,-612(x18)
 150:	03870a63          	beq	x14,x24,184 <describe_current_location+0x100>
#       if (add_list_sep) {
 154:	00078863          	beq	x15,x0,164 <describe_current_location+0xe0>
#         uart_send_str(", ");
 158:	a1cb0513          	addi	x10,x22,-1508 # a1c <delay+0xbc>
 15c:	00000097          	auipc	x1,0x0
 160:	758080e7          	jalr	x1,1880(x1) # 8b4 <uart_send_str>
#       } else {
#         add_list_sep = 1;
#       }
#       uart_send_str(entities[id].name);
 164:	002c1793          	slli	x15,x24,0x2
 168:	018787b3          	add	x15,x15,x24
 16c:	00379793          	slli	x15,x15,0x3
 170:	00f987b3          	add	x15,x19,x15
 174:	0007a503          	lw	x10,0(x15)
 178:	00000097          	auipc	x1,0x0
 17c:	73c080e7          	jalr	x1,1852(x1) # 8b4 <uart_send_str>
 180:	00100793          	addi	x15,x0,1
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 184:	001b8b93          	addi	x23,x23,1
 188:	fb4b9ae3          	bne	x23,x20,13c <describe_current_location+0xb8>
#     }
#   }
#   // print objects in current location
#   const object_id *objs = locations[current_location].objects;
 18c:	00440a13          	addi	x20,x8,4
 190:	01448a33          	add	x20,x9,x20
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
#     const object_id id = objs[i];
 194:	000a4903          	lbu	x18,0(x20)
#     if (!id)
 198:	12090263          	beq	x18,x0,2bc <describe_current_location+0x238>
#       break;
#     if (add_list_sep) {
 19c:	000029b7          	lui	x19,0x2
 1a0:	d7c98993          	addi	x19,x19,-644 # 1d7c <objects>
 1a4:	00291913          	slli	x18,x18,0x2
 1a8:	10079063          	bne	x15,x0,2a8 <describe_current_location+0x224>
#       uart_send_str(", ");
#     } else {
#       add_list_sep = 1;
#     }
#     uart_send_str(objects[id].name);
 1ac:	01298933          	add	x18,x19,x18
 1b0:	00092503          	lw	x10,0(x18)
#       uart_send_str(entities[id].name);
 1b4:	00100a93          	addi	x21,x0,1
#       uart_send_str(", ");
 1b8:	00001b37          	lui	x22,0x1
#     uart_send_str(objects[id].name);
 1bc:	00000097          	auipc	x1,0x0
 1c0:	6f8080e7          	jalr	x1,1784(x1) # 8b4 <uart_send_str>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 1c4:	08000b93          	addi	x23,x0,128
#     const object_id id = objs[i];
 1c8:	015a07b3          	add	x15,x20,x21
 1cc:	0007c903          	lbu	x18,0(x15)
#     if (!id)
 1d0:	02090663          	beq	x18,x0,1fc <describe_current_location+0x178>
#       uart_send_str(", ");
 1d4:	a1cb0513          	addi	x10,x22,-1508 # a1c <delay+0xbc>
#     uart_send_str(objects[id].name);
 1d8:	00291913          	slli	x18,x18,0x2
#       uart_send_str(", ");
 1dc:	00000097          	auipc	x1,0x0
 1e0:	6d8080e7          	jalr	x1,1752(x1) # 8b4 <uart_send_str>
#     uart_send_str(objects[id].name);
 1e4:	01298933          	add	x18,x19,x18
 1e8:	00092503          	lw	x10,0(x18)
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 1ec:	001a8a93          	addi	x21,x21,1
#     uart_send_str(objects[id].name);
 1f0:	00000097          	auipc	x1,0x0
 1f4:	6c4080e7          	jalr	x1,1732(x1) # 8b4 <uart_send_str>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 1f8:	fd7a98e3          	bne	x21,x23,1c8 <describe_current_location+0x144>
#   if (!add_list_sep) {
#     uart_send_str("no one");
#   }
#   // print exits from current location
#   add_list_sep = 0;
#   uart_send_str("\r\nexits: ");
 1fc:	00001537          	lui	x10,0x1
 200:	a2850513          	addi	x10,x10,-1496 # a28 <delay+0xc8>
 204:	008484b3          	add	x9,x9,x8
 208:	00002437          	lui	x8,0x2
 20c:	00000097          	auipc	x1,0x0
 210:	6a8080e7          	jalr	x1,1704(x1) # 8b4 <uart_send_str>
#   for (unsigned i = 0; i < LOCATION_MAX_EXITS; i++) {
 214:	a9c40413          	addi	x8,x8,-1380 # 1a9c <exit_names>
 218:	01840913          	addi	x18,x8,24
#   add_list_sep = 0;
 21c:	00000793          	addi	x15,x0,0
#     if (locations[current_location].exits[i]) {
 220:	08c4c703          	lbu	x14,140(x9)
 224:	02070463          	beq	x14,x0,24c <describe_current_location+0x1c8>
#       if (add_list_sep) {
 228:	00078a63          	beq	x15,x0,23c <describe_current_location+0x1b8>
#         uart_send_str(", ");
 22c:	00001537          	lui	x10,0x1
 230:	a1c50513          	addi	x10,x10,-1508 # a1c <delay+0xbc>
 234:	00000097          	auipc	x1,0x0
 238:	680080e7          	jalr	x1,1664(x1) # 8b4 <uart_send_str>
#       } else {
#         add_list_sep = 1;
#       }
#       uart_send_str(exit_names[i]);
 23c:	00042503          	lw	x10,0(x8)
 240:	00000097          	auipc	x1,0x0
 244:	674080e7          	jalr	x1,1652(x1) # 8b4 <uart_send_str>
 248:	00100793          	addi	x15,x0,1
#   for (unsigned i = 0; i < LOCATION_MAX_EXITS; i++) {
 24c:	00440413          	addi	x8,x8,4
 250:	00148493          	addi	x9,x9,1
 254:	fd2416e3          	bne	x8,x18,220 <describe_current_location+0x19c>
#     }
#   }
#   if (!add_list_sep) {
 258:	00079a63          	bne	x15,x0,26c <describe_current_location+0x1e8>
#     uart_send_str("none");
 25c:	00001537          	lui	x10,0x1
 260:	a3450513          	addi	x10,x10,-1484 # a34 <delay+0xd4>
 264:	00000097          	auipc	x1,0x0
 268:	650080e7          	jalr	x1,1616(x1) # 8b4 <uart_send_str>
#   }
#   uart_send_str("\r\n");
# }
 26c:	02812403          	lw	x8,40(x2)
 270:	02c12083          	lw	x1,44(x2)
 274:	02412483          	lw	x9,36(x2)
 278:	02012903          	lw	x18,32(x2)
 27c:	01c12983          	lw	x19,28(x2)
 280:	01812a03          	lw	x20,24(x2)
 284:	01412a83          	lw	x21,20(x2)
 288:	01012b03          	lw	x22,16(x2)
 28c:	00c12b83          	lw	x23,12(x2)
 290:	00812c03          	lw	x24,8(x2)
#   uart_send_str("\r\n");
 294:	00001537          	lui	x10,0x1
 298:	a3c50513          	addi	x10,x10,-1476 # a3c <delay+0xdc>
# }
 29c:	03010113          	addi	x2,x2,48
#   uart_send_str("\r\n");
 2a0:	00000317          	auipc	x6,0x0
 2a4:	61430067          	jalr	x0,1556(x6) # 8b4 <uart_send_str>
#       uart_send_str(", ");
 2a8:	00001537          	lui	x10,0x1
 2ac:	a1c50513          	addi	x10,x10,-1508 # a1c <delay+0xbc>
 2b0:	00000097          	auipc	x1,0x0
 2b4:	604080e7          	jalr	x1,1540(x1) # 8b4 <uart_send_str>
 2b8:	ef5ff06f          	jal	x0,1ac <describe_current_location+0x128>
#   if (!add_list_sep) {
 2bc:	f40790e3          	bne	x15,x0,1fc <describe_current_location+0x178>
#     uart_send_str("no one");
 2c0:	00001537          	lui	x10,0x1
 2c4:	a2050513          	addi	x10,x10,-1504 # a20 <delay+0xc0>
 2c8:	00000097          	auipc	x1,0x0
 2cc:	5ec080e7          	jalr	x1,1516(x1) # 8b4 <uart_send_str>
 2d0:	f2dff06f          	jal	x0,1fc <describe_current_location+0x178>

000002d4 <remove_object_from_list_by_index>:
# 
# void remove_object_from_list_by_index(object_id list[], unsigned ix) {
#   object_id *ptr = &list[ix];
 2d4:	00b50533          	add	x10,x10,x11
#   while (1) {
#     object_id *nxt = ptr + 1;
#     *ptr = *nxt;
 2d8:	00154783          	lbu	x15,1(x10)
 2dc:	00f50023          	sb	x15,0(x10)
#     if (!*nxt)
 2e0:	00078663          	beq	x15,x0,2ec <remove_object_from_list_by_index+0x18>
#       return;
#     ptr++;
 2e4:	00150513          	addi	x10,x10,1
#   while (1) {
 2e8:	ff1ff06f          	jal	x0,2d8 <remove_object_from_list_by_index+0x4>
#   }
# }
 2ec:	00008067          	jalr	x0,0(x1)

000002f0 <add_object_to_list>:
# 
# void add_object_to_list(object_id list[], unsigned list_max_size,
#                         object_id id) {
#   for (unsigned i = 0; i < list_max_size - 1; i++) {
 2f0:	00000793          	addi	x15,x0,0
 2f4:	fff58593          	addi	x11,x11,-1
 2f8:	00b7ea63          	bltu	x15,x11,30c <add_object_to_list+0x1c>
#       list[i] = id;
#       list[i + 1] = 0;
#       return;
#     }
#   }
#   uart_send_str("inventory full\r\n");
 2fc:	00001537          	lui	x10,0x1
 300:	a4050513          	addi	x10,x10,-1472 # a40 <delay+0xe0>
 304:	00000317          	auipc	x6,0x0
 308:	5b030067          	jalr	x0,1456(x6) # 8b4 <uart_send_str>
#       list[i + 1] = 0;
 30c:	00178713          	addi	x14,x15,1
#     if (!list[i]) {
 310:	00f507b3          	add	x15,x10,x15
 314:	0007c683          	lbu	x13,0(x15)
 318:	00069a63          	bne	x13,x0,32c <add_object_to_list+0x3c>
#       list[i] = id;
 31c:	00c78023          	sb	x12,0(x15)
#       list[i + 1] = 0;
 320:	00e50533          	add	x10,x10,x14
 324:	00050023          	sb	x0,0(x10)
# }
 328:	00008067          	jalr	x0,0(x1)
#       list[i + 1] = 0;
 32c:	00070793          	addi	x15,x14,0
 330:	fc9ff06f          	jal	x0,2f8 <add_object_to_list+0x8>

00000334 <action_take>:
# 
# void action_take(const char *object_name) {
 334:	fd010113          	addi	x2,x2,-48
#   entity *ent = &entities[active_entity];
 338:	000027b7          	lui	x15,0x2
# void action_take(const char *object_name) {
 33c:	01612823          	sw	x22,16(x2)
#   entity *ent = &entities[active_entity];
 340:	d9c7cb03          	lbu	x22,-612(x15) # 1d9c <active_entity>
# void action_take(const char *object_name) {
 344:	02912223          	sw	x9,36(x2)
 348:	01412c23          	sw	x20,24(x2)
#   object_id *objs = locations[ent->location].objects;
 34c:	002b1493          	slli	x9,x22,0x2
 350:	00002a37          	lui	x20,0x2
 354:	01648733          	add	x14,x9,x22
 358:	d04a0793          	addi	x15,x20,-764 # 1d04 <entities>
 35c:	00371713          	slli	x14,x14,0x3
 360:	00e787b3          	add	x15,x15,x14
 364:	0047c783          	lbu	x15,4(x15)
# void action_take(const char *object_name) {
 368:	02812423          	sw	x8,40(x2)
 36c:	01712623          	sw	x23,12(x2)
#   object_id *objs = locations[ent->location].objects;
 370:	00379413          	slli	x8,x15,0x3
 374:	00f40433          	add	x8,x8,x15
 378:	00241413          	slli	x8,x8,0x2
 37c:	00f40433          	add	x8,x8,x15
 380:	00241413          	slli	x8,x8,0x2
 384:	000027b7          	lui	x15,0x2
 388:	00440413          	addi	x8,x8,4
 38c:	ab478793          	addi	x15,x15,-1356 # 1ab4 <locations>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
#     const object_id id = objs[i];
#     if (!id)
#       break;
#     if (!strings_equal(objects[id].name, object_name))
 390:	00002bb7          	lui	x23,0x2
# void action_take(const char *object_name) {
 394:	03212023          	sw	x18,32(x2)
 398:	01312e23          	sw	x19,28(x2)
 39c:	02112623          	sw	x1,44(x2)
 3a0:	01512a23          	sw	x21,20(x2)
 3a4:	00050993          	addi	x19,x10,0
#   object_id *objs = locations[ent->location].objects;
 3a8:	00f40433          	add	x8,x8,x15
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 3ac:	00000913          	addi	x18,x0,0
 3b0:	d04a0a13          	addi	x20,x20,-764
#     if (!strings_equal(objects[id].name, object_name))
 3b4:	d7cb8b93          	addi	x23,x23,-644 # 1d7c <objects>
#     const object_id id = objs[i];
 3b8:	012407b3          	add	x15,x8,x18
 3bc:	0007ca83          	lbu	x21,0(x15)
#     if (!id)
 3c0:	020a8663          	beq	x21,x0,3ec <action_take+0xb8>
#     if (!strings_equal(objects[id].name, object_name))
 3c4:	002a9793          	slli	x15,x21,0x2
 3c8:	00fb87b3          	add	x15,x23,x15
 3cc:	0007a503          	lw	x10,0(x15)
 3d0:	00098593          	addi	x11,x19,0
 3d4:	00000097          	auipc	x1,0x0
 3d8:	c80080e7          	jalr	x1,-896(x1) # 54 <strings_equal>
 3dc:	04051a63          	bne	x10,x0,430 <action_take+0xfc>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 3e0:	00190913          	addi	x18,x18,1
 3e4:	08000793          	addi	x15,x0,128
 3e8:	fcf918e3          	bne	x18,x15,3b8 <action_take+0x84>
#       continue;
#     remove_object_from_list_by_index(objs, i);
#     add_object_to_list(ent->inventory, ENTITY_MAX_OBJECTS, id);
#     return;
#   }
#   uart_send_str(object_name);
 3ec:	00098513          	addi	x10,x19,0
 3f0:	00000097          	auipc	x1,0x0
 3f4:	4c4080e7          	jalr	x1,1220(x1) # 8b4 <uart_send_str>
#   uart_send_str(" not here\r\n\r\n");
# }
 3f8:	02812403          	lw	x8,40(x2)
 3fc:	02c12083          	lw	x1,44(x2)
 400:	02412483          	lw	x9,36(x2)
 404:	02012903          	lw	x18,32(x2)
 408:	01c12983          	lw	x19,28(x2)
 40c:	01812a03          	lw	x20,24(x2)
 410:	01412a83          	lw	x21,20(x2)
 414:	01012b03          	lw	x22,16(x2)
 418:	00c12b83          	lw	x23,12(x2)
#   uart_send_str(" not here\r\n\r\n");
 41c:	00001537          	lui	x10,0x1
 420:	a5450513          	addi	x10,x10,-1452 # a54 <delay+0xf4>
# }
 424:	03010113          	addi	x2,x2,48
#   uart_send_str(" not here\r\n\r\n");
 428:	00000317          	auipc	x6,0x0
 42c:	48c30067          	jalr	x0,1164(x6) # 8b4 <uart_send_str>
#     remove_object_from_list_by_index(objs, i);
 430:	00090593          	addi	x11,x18,0
 434:	00040513          	addi	x10,x8,0
 438:	00000097          	auipc	x1,0x0
 43c:	e9c080e7          	jalr	x1,-356(x1) # 2d4 <remove_object_from_list_by_index>
#     add_object_to_list(ent->inventory, ENTITY_MAX_OBJECTS, id);
 440:	01648533          	add	x10,x9,x22
 444:	00351513          	slli	x10,x10,0x3
# }
 448:	02812403          	lw	x8,40(x2)
#     add_object_to_list(ent->inventory, ENTITY_MAX_OBJECTS, id);
 44c:	00550513          	addi	x10,x10,5
# }
 450:	02c12083          	lw	x1,44(x2)
 454:	02412483          	lw	x9,36(x2)
 458:	02012903          	lw	x18,32(x2)
 45c:	01c12983          	lw	x19,28(x2)
 460:	01012b03          	lw	x22,16(x2)
 464:	00c12b83          	lw	x23,12(x2)
#     add_object_to_list(ent->inventory, ENTITY_MAX_OBJECTS, id);
 468:	000a8613          	addi	x12,x21,0
 46c:	00aa0533          	add	x10,x20,x10
# }
 470:	01412a83          	lw	x21,20(x2)
 474:	01812a03          	lw	x20,24(x2)
#     add_object_to_list(ent->inventory, ENTITY_MAX_OBJECTS, id);
 478:	02000593          	addi	x11,x0,32
# }
 47c:	03010113          	addi	x2,x2,48
#     add_object_to_list(ent->inventory, ENTITY_MAX_OBJECTS, id);
 480:	00000317          	auipc	x6,0x0
 484:	e7030067          	jalr	x0,-400(x6) # 2f0 <add_object_to_list>

00000488 <action_drop>:
# 
# void action_drop(const char *object_name) {
 488:	fd010113          	addi	x2,x2,-48
#   entity *ent = &entities[active_entity];
 48c:	000027b7          	lui	x15,0x2
# void action_drop(const char *object_name) {
 490:	01612823          	sw	x22,16(x2)
#   entity *ent = &entities[active_entity];
 494:	d9c7cb03          	lbu	x22,-612(x15) # 1d9c <active_entity>
# void action_drop(const char *object_name) {
 498:	01412c23          	sw	x20,24(x2)
 49c:	02812423          	sw	x8,40(x2)
#   object_id *objs = ent->inventory;
 4a0:	002b1a13          	slli	x20,x22,0x2
 4a4:	016a0433          	add	x8,x20,x22
# void action_drop(const char *object_name) {
 4a8:	02912223          	sw	x9,36(x2)
#   object_id *objs = ent->inventory;
 4ac:	00341413          	slli	x8,x8,0x3
 4b0:	000024b7          	lui	x9,0x2
 4b4:	d0448793          	addi	x15,x9,-764 # 1d04 <entities>
# void action_drop(const char *object_name) {
 4b8:	01712623          	sw	x23,12(x2)
#   object_id *objs = ent->inventory;
 4bc:	00540413          	addi	x8,x8,5
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
#     const object_id id = objs[i];
#     if (!id)
#       break;
#     if (!strings_equal(objects[id].name, object_name))
 4c0:	00002bb7          	lui	x23,0x2
# void action_drop(const char *object_name) {
 4c4:	03212023          	sw	x18,32(x2)
 4c8:	01512a23          	sw	x21,20(x2)
 4cc:	02112623          	sw	x1,44(x2)
 4d0:	01312e23          	sw	x19,28(x2)
 4d4:	00050a93          	addi	x21,x10,0
#   object_id *objs = ent->inventory;
 4d8:	00f40433          	add	x8,x8,x15
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 4dc:	00000913          	addi	x18,x0,0
 4e0:	d0448493          	addi	x9,x9,-764
#     if (!strings_equal(objects[id].name, object_name))
 4e4:	d7cb8b93          	addi	x23,x23,-644 # 1d7c <objects>
#     const object_id id = objs[i];
 4e8:	012407b3          	add	x15,x8,x18
 4ec:	0007c983          	lbu	x19,0(x15)
#     if (!id)
 4f0:	02098663          	beq	x19,x0,51c <action_drop+0x94>
#     if (!strings_equal(objects[id].name, object_name))
 4f4:	00299793          	slli	x15,x19,0x2
 4f8:	00fb87b3          	add	x15,x23,x15
 4fc:	0007a503          	lw	x10,0(x15)
 500:	000a8593          	addi	x11,x21,0
 504:	00000097          	auipc	x1,0x0
 508:	b50080e7          	jalr	x1,-1200(x1) # 54 <strings_equal>
 50c:	06051263          	bne	x10,x0,570 <action_drop+0xe8>
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 510:	00190913          	addi	x18,x18,1
 514:	02000793          	addi	x15,x0,32
 518:	fcf918e3          	bne	x18,x15,4e8 <action_drop+0x60>
#     remove_object_from_list_by_index(objs, i);
#     add_object_to_list(locations[ent->location].objects, LOCATION_MAX_OBJECTS,
#                        id);
#     return;
#   }
#   uart_send_str("u don't have ");
 51c:	00001537          	lui	x10,0x1
 520:	a6450513          	addi	x10,x10,-1436 # a64 <delay+0x104>
 524:	00000097          	auipc	x1,0x0
 528:	390080e7          	jalr	x1,912(x1) # 8b4 <uart_send_str>
#   uart_send_str(object_name);
 52c:	000a8513          	addi	x10,x21,0
 530:	00000097          	auipc	x1,0x0
 534:	384080e7          	jalr	x1,900(x1) # 8b4 <uart_send_str>
#   uart_send_str("\r\n\r\n");
# }
 538:	02812403          	lw	x8,40(x2)
 53c:	02c12083          	lw	x1,44(x2)
 540:	02412483          	lw	x9,36(x2)
 544:	02012903          	lw	x18,32(x2)
 548:	01c12983          	lw	x19,28(x2)
 54c:	01812a03          	lw	x20,24(x2)
 550:	01412a83          	lw	x21,20(x2)
 554:	01012b03          	lw	x22,16(x2)
 558:	00c12b83          	lw	x23,12(x2)
#   uart_send_str("\r\n\r\n");
 55c:	00001537          	lui	x10,0x1
 560:	a7450513          	addi	x10,x10,-1420 # a74 <delay+0x114>
# }
 564:	03010113          	addi	x2,x2,48
#   uart_send_str("\r\n\r\n");
 568:	00000317          	auipc	x6,0x0
 56c:	34c30067          	jalr	x0,844(x6) # 8b4 <uart_send_str>
#     remove_object_from_list_by_index(objs, i);
 570:	00090593          	addi	x11,x18,0
 574:	00040513          	addi	x10,x8,0
 578:	00000097          	auipc	x1,0x0
 57c:	d5c080e7          	jalr	x1,-676(x1) # 2d4 <remove_object_from_list_by_index>
#     add_object_to_list(locations[ent->location].objects, LOCATION_MAX_OBJECTS,
 580:	016a07b3          	add	x15,x20,x22
 584:	00379793          	slli	x15,x15,0x3
 588:	00f484b3          	add	x9,x9,x15
 58c:	0044c703          	lbu	x14,4(x9)
# }
 590:	02812403          	lw	x8,40(x2)
 594:	02c12083          	lw	x1,44(x2)
#     add_object_to_list(locations[ent->location].objects, LOCATION_MAX_OBJECTS,
 598:	00371793          	slli	x15,x14,0x3
 59c:	00e787b3          	add	x15,x15,x14
 5a0:	00279793          	slli	x15,x15,0x2
 5a4:	00e787b3          	add	x15,x15,x14
# }
 5a8:	02412483          	lw	x9,36(x2)
 5ac:	02012903          	lw	x18,32(x2)
 5b0:	01812a03          	lw	x20,24(x2)
 5b4:	01412a83          	lw	x21,20(x2)
 5b8:	01012b03          	lw	x22,16(x2)
 5bc:	00c12b83          	lw	x23,12(x2)
#     add_object_to_list(locations[ent->location].objects, LOCATION_MAX_OBJECTS,
 5c0:	00279793          	slli	x15,x15,0x2
 5c4:	00098613          	addi	x12,x19,0
 5c8:	00002537          	lui	x10,0x2
# }
 5cc:	01c12983          	lw	x19,28(x2)
#     add_object_to_list(locations[ent->location].objects, LOCATION_MAX_OBJECTS,
 5d0:	00478793          	addi	x15,x15,4
 5d4:	ab450513          	addi	x10,x10,-1356 # 1ab4 <locations>
 5d8:	08000593          	addi	x11,x0,128
 5dc:	00f50533          	add	x10,x10,x15
# }
 5e0:	03010113          	addi	x2,x2,48
#     add_object_to_list(locations[ent->location].objects, LOCATION_MAX_OBJECTS,
 5e4:	00000317          	auipc	x6,0x0
 5e8:	d0c30067          	jalr	x0,-756(x6) # 2f0 <add_object_to_list>

000005ec <handle_inbuf>:
# 
# void handle_inbuf() {
 5ec:	ff010113          	addi	x2,x2,-16
 5f0:	00912223          	sw	x9,4(x2)
#   uart_send_str("\r\n");
 5f4:	000014b7          	lui	x9,0x1
 5f8:	a3c48513          	addi	x10,x9,-1476 # a3c <delay+0xdc>
# void handle_inbuf() {
 5fc:	00812423          	sw	x8,8(x2)
 600:	00112623          	sw	x1,12(x2)
#   uart_send_str("\r\n");
 604:	00000097          	auipc	x1,0x0
 608:	2b0080e7          	jalr	x1,688(x1) # 8b4 <uart_send_str>
#   if (strings_equal(inbuf.line, "i")) {
 60c:	000015b7          	lui	x11,0x1
 610:	00002437          	lui	x8,0x2
 614:	a7c58593          	addi	x11,x11,-1412 # a7c <delay+0x11c>
 618:	da040513          	addi	x10,x8,-608 # 1da0 <inbuf>
 61c:	00000097          	auipc	x1,0x0
 620:	a38080e7          	jalr	x1,-1480(x1) # 54 <strings_equal>
 624:	02050463          	beq	x10,x0,64c <handle_inbuf+0x60>
#     describe_inventory();
 628:	00000097          	auipc	x1,0x0
 62c:	0e8080e7          	jalr	x1,232(x1) # 710 <describe_inventory>
# 
#   entities[active_entity].location++;
#   if (entities[active_entity].location > 3) {
#     entities[active_entity].location = 1;
#   }
# }
 630:	00812403          	lw	x8,8(x2)
 634:	00c12083          	lw	x1,12(x2)
#     uart_send_str("\r\n");
 638:	a3c48513          	addi	x10,x9,-1476
# }
 63c:	00412483          	lw	x9,4(x2)
 640:	01010113          	addi	x2,x2,16
#     uart_send_str("\r\n");
 644:	00000317          	auipc	x6,0x0
 648:	27030067          	jalr	x0,624(x6) # 8b4 <uart_send_str>
#   if (strings_equal(inbuf.line, "t")) {
 64c:	000015b7          	lui	x11,0x1
 650:	a8058593          	addi	x11,x11,-1408 # a80 <delay+0x120>
 654:	da040513          	addi	x10,x8,-608
 658:	00000097          	auipc	x1,0x0
 65c:	9fc080e7          	jalr	x1,-1540(x1) # 54 <strings_equal>
 660:	02050263          	beq	x10,x0,684 <handle_inbuf+0x98>
# }
 664:	00812403          	lw	x8,8(x2)
 668:	00c12083          	lw	x1,12(x2)
 66c:	00412483          	lw	x9,4(x2)
#     action_take("notebook");
 670:	00001537          	lui	x10,0x1
 674:	9ec50513          	addi	x10,x10,-1556 # 9ec <delay+0x8c>
# }
 678:	01010113          	addi	x2,x2,16
#     action_take("notebook");
 67c:	00000317          	auipc	x6,0x0
 680:	cb830067          	jalr	x0,-840(x6) # 334 <action_take>
#   if (strings_equal(inbuf.line, "d")) {
 684:	000015b7          	lui	x11,0x1
 688:	a8458593          	addi	x11,x11,-1404 # a84 <delay+0x124>
 68c:	da040513          	addi	x10,x8,-608
 690:	00000097          	auipc	x1,0x0
 694:	9c4080e7          	jalr	x1,-1596(x1) # 54 <strings_equal>
 698:	02050263          	beq	x10,x0,6bc <handle_inbuf+0xd0>
# }
 69c:	00812403          	lw	x8,8(x2)
 6a0:	00c12083          	lw	x1,12(x2)
 6a4:	00412483          	lw	x9,4(x2)
#     action_drop("notebook");
 6a8:	00001537          	lui	x10,0x1
 6ac:	9ec50513          	addi	x10,x10,-1556 # 9ec <delay+0x8c>
# }
 6b0:	01010113          	addi	x2,x2,16
#     action_drop("notebook");
 6b4:	00000317          	auipc	x6,0x0
 6b8:	dd430067          	jalr	x0,-556(x6) # 488 <action_drop>
#   entities[active_entity].location++;
 6bc:	000027b7          	lui	x15,0x2
 6c0:	d9c7c683          	lbu	x13,-612(x15) # 1d9c <active_entity>
 6c4:	000027b7          	lui	x15,0x2
 6c8:	d0478793          	addi	x15,x15,-764 # 1d04 <entities>
 6cc:	00269713          	slli	x14,x13,0x2
 6d0:	00d70733          	add	x14,x14,x13
 6d4:	00371713          	slli	x14,x14,0x3
 6d8:	00e787b3          	add	x15,x15,x14
 6dc:	0047c703          	lbu	x14,4(x15)
#   if (entities[active_entity].location > 3) {
 6e0:	00300693          	addi	x13,x0,3
#   entities[active_entity].location++;
 6e4:	00170713          	addi	x14,x14,1
 6e8:	0ff77713          	andi	x14,x14,255
#   if (entities[active_entity].location > 3) {
 6ec:	00e6ee63          	bltu	x13,x14,708 <handle_inbuf+0x11c>
#     entities[active_entity].location = 1;
 6f0:	00e78223          	sb	x14,4(x15)
# }
 6f4:	00c12083          	lw	x1,12(x2)
 6f8:	00812403          	lw	x8,8(x2)
 6fc:	00412483          	lw	x9,4(x2)
 700:	01010113          	addi	x2,x2,16
 704:	00008067          	jalr	x0,0(x1)
#     entities[active_entity].location = 1;
 708:	00100713          	addi	x14,x0,1
 70c:	fe5ff06f          	jal	x0,6f0 <handle_inbuf+0x104>

00000710 <describe_inventory>:
# 
# void describe_inventory() {
#   uart_send_str("u have: ");
 710:	00001537          	lui	x10,0x1
# void describe_inventory() {
 714:	fe010113          	addi	x2,x2,-32
#   uart_send_str("u have: ");
 718:	a8850513          	addi	x10,x10,-1400 # a88 <delay+0x128>
# void describe_inventory() {
 71c:	00812c23          	sw	x8,24(x2)
 720:	00912a23          	sw	x9,20(x2)
 724:	00112e23          	sw	x1,28(x2)
 728:	01212823          	sw	x18,16(x2)
 72c:	01312623          	sw	x19,12(x2)
 730:	01412423          	sw	x20,8(x2)
 734:	01512223          	sw	x21,4(x2)
#   uart_send_str("u have: ");
 738:	00000097          	auipc	x1,0x0
 73c:	17c080e7          	jalr	x1,380(x1) # 8b4 <uart_send_str>
#   bool add_list_sep = FALSE;
#   const object_id *inv = entities[active_entity].inventory;
 740:	000027b7          	lui	x15,0x2
 744:	d9c7c783          	lbu	x15,-612(x15) # 1d9c <active_entity>
 748:	00279413          	slli	x8,x15,0x2
 74c:	00f40433          	add	x8,x8,x15
 750:	00341413          	slli	x8,x8,0x3
 754:	000027b7          	lui	x15,0x2
 758:	00540413          	addi	x8,x8,5
 75c:	d0478793          	addi	x15,x15,-764 # 1d04 <entities>
 760:	00f40433          	add	x8,x8,x15
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
#     const object_id id = inv[i];
 764:	00044483          	lbu	x9,0(x8)
#     if (!id)
 768:	08048063          	beq	x9,x0,7e8 <describe_inventory+0xd8>
#     if (add_list_sep) {
#       uart_send_str(", ");
#     } else {
#       add_list_sep = TRUE;
#     }
#     uart_send_str(objects[id].name);
 76c:	000029b7          	lui	x19,0x2
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 770:	00000913          	addi	x18,x0,0
#     uart_send_str(objects[id].name);
 774:	d7c98993          	addi	x19,x19,-644 # 1d7c <objects>
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 778:	02000a13          	addi	x20,x0,32
#       uart_send_str(", ");
 77c:	00001ab7          	lui	x21,0x1
#     uart_send_str(objects[id].name);
 780:	00249493          	slli	x9,x9,0x2
 784:	009984b3          	add	x9,x19,x9
 788:	0004a503          	lw	x10,0(x9)
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 78c:	00190913          	addi	x18,x18,1
#     uart_send_str(objects[id].name);
 790:	00000097          	auipc	x1,0x0
 794:	124080e7          	jalr	x1,292(x1) # 8b4 <uart_send_str>
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 798:	01490863          	beq	x18,x20,7a8 <describe_inventory+0x98>
#     const object_id id = inv[i];
 79c:	012407b3          	add	x15,x8,x18
 7a0:	0007c483          	lbu	x9,0(x15)
#     if (!id)
 7a4:	02049a63          	bne	x9,x0,7d8 <describe_inventory+0xc8>
#   }
#   if (!add_list_sep) {
#     uart_send_str("nothing");
#   }
#   uart_send_str("\r\n");
# }
 7a8:	01812403          	lw	x8,24(x2)
 7ac:	01c12083          	lw	x1,28(x2)
 7b0:	01412483          	lw	x9,20(x2)
 7b4:	01012903          	lw	x18,16(x2)
 7b8:	00c12983          	lw	x19,12(x2)
 7bc:	00812a03          	lw	x20,8(x2)
 7c0:	00412a83          	lw	x21,4(x2)
#   uart_send_str("\r\n");
 7c4:	00001537          	lui	x10,0x1
 7c8:	a3c50513          	addi	x10,x10,-1476 # a3c <delay+0xdc>
# }
 7cc:	02010113          	addi	x2,x2,32
#   uart_send_str("\r\n");
 7d0:	00000317          	auipc	x6,0x0
 7d4:	0e430067          	jalr	x0,228(x6) # 8b4 <uart_send_str>
#       uart_send_str(", ");
 7d8:	a1ca8513          	addi	x10,x21,-1508 # a1c <delay+0xbc>
 7dc:	00000097          	auipc	x1,0x0
 7e0:	0d8080e7          	jalr	x1,216(x1) # 8b4 <uart_send_str>
 7e4:	f9dff06f          	jal	x0,780 <describe_inventory+0x70>
#     uart_send_str("nothing");
 7e8:	00001537          	lui	x10,0x1
 7ec:	a9450513          	addi	x10,x10,-1388 # a94 <delay+0x134>
 7f0:	00000097          	auipc	x1,0x0
 7f4:	0c4080e7          	jalr	x1,196(x1) # 8b4 <uart_send_str>
 7f8:	fb1ff06f          	jal	x0,7a8 <describe_inventory+0x98>

000007fc <input_inbuf>:
# 
# void input_inbuf() {
 7fc:	fe010113          	addi	x2,x2,-32
 800:	00812c23          	sw	x8,24(x2)
 804:	00002437          	lui	x8,0x2
 808:	01212823          	sw	x18,16(x2)
 80c:	01312623          	sw	x19,12(x2)
 810:	01412423          	sw	x20,8(x2)
 814:	01512223          	sw	x21,4(x2)
 818:	00112e23          	sw	x1,28(x2)
 81c:	00912a23          	sw	x9,20(x2)
#   while (1) {
#     const char ch = uart_read_char();
#     uart_send_char(ch);
#     if (ch == CHAR_BACKSPACE) {
 820:	07f00993          	addi	x19,x0,127
 824:	da040413          	addi	x8,x8,-608 # 1da0 <inbuf>
#       if (inbuf.ix > 0) {
#         inbuf.ix--;
#       }
#     } else if (ch == CHAR_CARRIAGE_RETURN ||
 828:	00d00a13          	addi	x20,x0,13
 82c:	04f00a93          	addi	x21,x0,79
#       return;
#     } else {
#       inbuf.line[inbuf.ix] = ch;
#       inbuf.ix++;
#     }
#     *leds = inbuf.ix;
 830:	00002937          	lui	x18,0x2
#     const char ch = uart_read_char();
 834:	00000097          	auipc	x1,0x0
 838:	114080e7          	jalr	x1,276(x1) # 948 <uart_read_char>
 83c:	00050493          	addi	x9,x10,0
#     uart_send_char(ch);
 840:	00000097          	auipc	x1,0x0
 844:	0f0080e7          	jalr	x1,240(x1) # 930 <uart_send_char>
#       if (inbuf.ix > 0) {
 848:	05044783          	lbu	x15,80(x8)
#     if (ch == CHAR_BACKSPACE) {
 84c:	03349063          	bne	x9,x19,86c <input_inbuf+0x70>
#       if (inbuf.ix > 0) {
 850:	00078663          	beq	x15,x0,85c <input_inbuf+0x60>
#         inbuf.ix--;
 854:	fff78793          	addi	x15,x15,-1
#       inbuf.ix++;
 858:	04f40823          	sb	x15,80(x8)
#     *leds = inbuf.ix;
 85c:	d8c92783          	lw	x15,-628(x18) # 1d8c <leds>
 860:	05044703          	lbu	x14,80(x8)
 864:	00e78023          	sb	x14,0(x15)
#   while (1) {
 868:	fcdff06f          	jal	x0,834 <input_inbuf+0x38>
#     } else if (ch == CHAR_CARRIAGE_RETURN ||
 86c:	01448463          	beq	x9,x20,874 <input_inbuf+0x78>
 870:	03579a63          	bne	x15,x21,8a4 <input_inbuf+0xa8>
#       inbuf.line[inbuf.ix] = 0;
 874:	00f407b3          	add	x15,x8,x15
 878:	00078023          	sb	x0,0(x15)
#       inbuf.ix = 0;
 87c:	04040823          	sb	x0,80(x8)
#   }
# }
 880:	01c12083          	lw	x1,28(x2)
 884:	01812403          	lw	x8,24(x2)
 888:	01412483          	lw	x9,20(x2)
 88c:	01012903          	lw	x18,16(x2)
 890:	00c12983          	lw	x19,12(x2)
 894:	00812a03          	lw	x20,8(x2)
 898:	00412a83          	lw	x21,4(x2)
 89c:	02010113          	addi	x2,x2,32
 8a0:	00008067          	jalr	x0,0(x1)
#       inbuf.line[inbuf.ix] = ch;
 8a4:	00f40733          	add	x14,x8,x15
 8a8:	00970023          	sb	x9,0(x14)
#       inbuf.ix++;
 8ac:	00178793          	addi	x15,x15,1
 8b0:	fa9ff06f          	jal	x0,858 <input_inbuf+0x5c>

000008b4 <uart_send_str>:
# 
# void uart_send_str(const char *str) {
#   while (*str) {
#     while (*uart_out)
 8b4:	000026b7          	lui	x13,0x2
#   while (*str) {
 8b8:	00054783          	lbu	x15,0(x10)
 8bc:	00079463          	bne	x15,x0,8c4 <uart_send_str+0x10>
#       ;
#     *uart_out = *str++;
#   }
# }
 8c0:	00008067          	jalr	x0,0(x1)
#     while (*uart_out)
 8c4:	d906a703          	lw	x14,-624(x13) # 1d90 <uart_out>
 8c8:	00074603          	lbu	x12,0(x14)
 8cc:	fe061ee3          	bne	x12,x0,8c8 <uart_send_str+0x14>
#     *uart_out = *str++;
 8d0:	00150513          	addi	x10,x10,1
 8d4:	00f70023          	sb	x15,0(x14)
 8d8:	fe1ff06f          	jal	x0,8b8 <uart_send_str+0x4>

000008dc <uart_send_hex_byte>:
# 
# void uart_send_hex_byte(char ch) {
 8dc:	ff010113          	addi	x2,x2,-16
 8e0:	00812423          	sw	x8,8(x2)
 8e4:	00050413          	addi	x8,x10,0
#   uart_send_hex_nibble((ch & 0xf0) >> 4);
 8e8:	00455513          	srli	x10,x10,0x4
# void uart_send_hex_byte(char ch) {
 8ec:	00112623          	sw	x1,12(x2)
#   uart_send_hex_nibble((ch & 0xf0) >> 4);
 8f0:	00000097          	auipc	x1,0x0
 8f4:	020080e7          	jalr	x1,32(x1) # 910 <uart_send_hex_nibble>
#   uart_send_hex_nibble(ch & 0x0f);
 8f8:	00f47513          	andi	x10,x8,15
# }
 8fc:	00812403          	lw	x8,8(x2)
 900:	00c12083          	lw	x1,12(x2)
 904:	01010113          	addi	x2,x2,16
#   uart_send_hex_nibble(ch & 0x0f);
 908:	00000317          	auipc	x6,0x0
 90c:	00830067          	jalr	x0,8(x6) # 910 <uart_send_hex_nibble>

00000910 <uart_send_hex_nibble>:
# 
# void uart_send_hex_nibble(char nibble) {
#   if (nibble < 10) {
 910:	00900793          	addi	x15,x0,9
 914:	00a7ea63          	bltu	x15,x10,928 <uart_send_hex_nibble+0x18>
#     uart_send_char('0' + nibble);
 918:	03050513          	addi	x10,x10,48
#   } else {
#     uart_send_char('A' + (nibble - 10));
 91c:	0ff57513          	andi	x10,x10,255
 920:	00000317          	auipc	x6,0x0
 924:	01030067          	jalr	x0,16(x6) # 930 <uart_send_char>
 928:	03750513          	addi	x10,x10,55
 92c:	ff1ff06f          	jal	x0,91c <uart_send_hex_nibble+0xc>

00000930 <uart_send_char>:
#   }
# }
# 
# void uart_send_char(char ch) {
#   while (*uart_out)
 930:	000027b7          	lui	x15,0x2
 934:	d907a783          	lw	x15,-624(x15) # 1d90 <uart_out>
 938:	0007c703          	lbu	x14,0(x15)
 93c:	fe071ee3          	bne	x14,x0,938 <uart_send_char+0x8>
#     ;
#   *uart_out = ch;
 940:	00a78023          	sb	x10,0(x15)
# }
 944:	00008067          	jalr	x0,0(x1)

00000948 <uart_read_char>:
# 
# char uart_read_char() {
#   char ch;
#   while ((ch = *uart_in) == 0)
 948:	000027b7          	lui	x15,0x2
 94c:	d947a703          	lw	x14,-620(x15) # 1d94 <uart_in>
 950:	00074783          	lbu	x15,0(x14)
 954:	0ff7f513          	andi	x10,x15,255
 958:	fe078ce3          	beq	x15,x0,950 <uart_read_char+0x8>
#     ;
#   return ch;
# }
 95c:	00008067          	jalr	x0,0(x1)

00000960 <delay>:
# 
# inline void delay(volatile unsigned int ticks) {
 960:	ff010113          	addi	x2,x2,-16
 964:	00a12623          	sw	x10,12(x2)
#   while (ticks--)
 968:	00c12783          	lw	x15,12(x2)
 96c:	fff78713          	addi	x14,x15,-1
 970:	00e12623          	sw	x14,12(x2)
 974:	fe079ae3          	bne	x15,x0,968 <delay+0x8>
#     ;
# }
 978:	01010113          	addi	x2,x2,16
 97c:	00008067          	jalr	x0,0(x1)
