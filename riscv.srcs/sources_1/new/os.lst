
os:     file format elf32-littleriscv


Disassembly of section .text:

00000000 <_start>:
# .global _start
# 
# # sets up the stack before calling c function 'run' in 'os.c'
# _start:
#     lui sp, 0x2         # set stack at # 0x1fff0
   0:	00002137          	lui	x2,0x2
#     addi sp, sp, -16    #
   4:	ff010113          	addi	x2,x2,-16 # 1ff0 <delay+0x11c4>
   8:	004000ef          	jal	x1,c <run>

0000000c <run>:
# void handle_inbuf();
# 
# unsigned char active_entity = 1;
# 
# void run() {
#   uart_send_str(hello);
   c:	000027b7          	lui	x15,0x2
  10:	3e07a503          	lw	x10,992(x15) # 23e0 <hello>
# void run() {
  14:	fe010113          	addi	x2,x2,-32
  18:	00812c23          	sw	x8,24(x2)
#   while (1) {
#     describe_current_location();
#     uart_send_str(entities[active_entity].name);
  1c:	00002437          	lui	x8,0x2
# void run() {
  20:	00912a23          	sw	x9,20(x2)
  24:	01212823          	sw	x18,16(x2)
  28:	01312623          	sw	x19,12(x2)
  2c:	01412423          	sw	x20,8(x2)
  30:	00112e23          	sw	x1,28(x2)
#     uart_send_str(entities[active_entity].name);
  34:	34c40413          	addi	x8,x8,844 # 234c <entities>
#   uart_send_str(hello);
  38:	00001097          	auipc	x1,0x1
  3c:	d48080e7          	jalr	x1,-696(x1) # d80 <uart_send_str>
#     uart_send_str(entities[active_entity].name);
  40:	000024b7          	lui	x9,0x2
#     uart_send_str(" > ");
  44:	00001937          	lui	x18,0x1
#     input_inbuf();
#     uart_send_str("\r\n");
  48:	000019b7          	lui	x19,0x1
#     handle_inbuf();
#     if (active_entity == 1)
  4c:	00100a13          	addi	x20,x0,1
#     describe_current_location();
  50:	00000097          	auipc	x1,0x0
  54:	098080e7          	jalr	x1,152(x1) # e8 <describe_current_location>
#     uart_send_str(entities[active_entity].name);
  58:	3e44c703          	lbu	x14,996(x9) # 23e4 <active_entity>
  5c:	00271793          	slli	x15,x14,0x2
  60:	00e787b3          	add	x15,x15,x14
  64:	00379793          	slli	x15,x15,0x3
  68:	00f407b3          	add	x15,x8,x15
  6c:	0007a503          	lw	x10,0(x15)
  70:	00001097          	auipc	x1,0x1
  74:	d10080e7          	jalr	x1,-752(x1) # d80 <uart_send_str>
#     uart_send_str(" > ");
  78:	edc90513          	addi	x10,x18,-292 # edc <delay+0xb0>
  7c:	00001097          	auipc	x1,0x1
  80:	d04080e7          	jalr	x1,-764(x1) # d80 <uart_send_str>
#     input_inbuf();
  84:	00001097          	auipc	x1,0x1
  88:	c50080e7          	jalr	x1,-944(x1) # cd4 <input_inbuf>
#     uart_send_str("\r\n");
  8c:	04098513          	addi	x10,x19,64 # 1040 <delay+0x214>
  90:	00001097          	auipc	x1,0x1
  94:	cf0080e7          	jalr	x1,-784(x1) # d80 <uart_send_str>
#     handle_inbuf();
  98:	00001097          	auipc	x1,0x1
  9c:	91c080e7          	jalr	x1,-1764(x1) # 9b4 <handle_inbuf>
#     if (active_entity == 1)
  a0:	3e44c703          	lbu	x14,996(x9)
#       active_entity = 2;
  a4:	00200793          	addi	x15,x0,2
#     if (active_entity == 1)
  a8:	01470463          	beq	x14,x20,b0 <run+0xa4>
#     else
#       active_entity = 1;
  ac:	00100793          	addi	x15,x0,1
  b0:	3ef48223          	sb	x15,996(x9)
  b4:	f9dff06f          	jal	x0,50 <run+0x44>

000000b8 <strings_equal>:
#   }
# }
# 
# bool strings_equal(const char *s1, const char *s2) {
  b8:	00050793          	addi	x15,x10,0
#   while (1) {
#     char diff = *s1 - *s2;
  bc:	0007c703          	lbu	x14,0(x15)
  c0:	0005c503          	lbu	x10,0(x11)
#     if (diff)
  c4:	00a71e63          	bne	x14,x10,e0 <strings_equal+0x28>
#       return FALSE;
#     if (!*s1 && !*s2)
  c8:	00051663          	bne	x10,x0,d4 <strings_equal+0x1c>
  cc:	00100513          	addi	x10,x0,1
  d0:	00008067          	jalr	x0,0(x1)
#       return TRUE;
#     if (!*s1 || !*s2)
#       return FALSE;
#     s1++;
  d4:	00178793          	addi	x15,x15,1
#     s2++;
  d8:	00158593          	addi	x11,x11,1
#   while (1) {
  dc:	fe1ff06f          	jal	x0,bc <strings_equal+0x4>
#       return FALSE;
  e0:	00000513          	addi	x10,x0,0
#   }
# }
  e4:	00008067          	jalr	x0,0(x1)

000000e8 <describe_current_location>:
# 
# void describe_current_location() {
#   uart_send_str("u r in ");
  e8:	00001537          	lui	x10,0x1
# void describe_current_location() {
  ec:	fd010113          	addi	x2,x2,-48
#   uart_send_str("u r in ");
  f0:	ee050513          	addi	x10,x10,-288 # ee0 <delay+0xb4>
# void describe_current_location() {
  f4:	02112623          	sw	x1,44(x2)
  f8:	02812423          	sw	x8,40(x2)
  fc:	02912223          	sw	x9,36(x2)
 100:	03212023          	sw	x18,32(x2)
 104:	01312e23          	sw	x19,28(x2)
 108:	01412c23          	sw	x20,24(x2)
 10c:	01612823          	sw	x22,16(x2)
 110:	01512a23          	sw	x21,20(x2)
 114:	01712623          	sw	x23,12(x2)
 118:	01812423          	sw	x24,8(x2)
 11c:	01912223          	sw	x25,4(x2)
#   const location_id current_location = entities[active_entity].location;
 120:	000029b7          	lui	x19,0x2
#   uart_send_str("u r in ");
 124:	00001097          	auipc	x1,0x1
 128:	c5c080e7          	jalr	x1,-932(x1) # d80 <uart_send_str>
#   const location_id current_location = entities[active_entity].location;
 12c:	3e49c683          	lbu	x13,996(x19) # 23e4 <active_entity>
 130:	00002a37          	lui	x20,0x2
 134:	34ca0713          	addi	x14,x20,844 # 234c <entities>
 138:	00269793          	slli	x15,x13,0x2
 13c:	00d787b3          	add	x15,x15,x13
 140:	00379793          	slli	x15,x15,0x3
 144:	00f707b3          	add	x15,x14,x15
 148:	0047c783          	lbu	x15,4(x15)
#   uart_send_str(locations[current_location].name);
 14c:	000024b7          	lui	x9,0x2
 150:	06848913          	addi	x18,x9,104 # 2068 <locations>
 154:	00379413          	slli	x8,x15,0x3
 158:	00f40433          	add	x8,x8,x15
 15c:	00241413          	slli	x8,x8,0x2
 160:	00f40433          	add	x8,x8,x15
 164:	00241413          	slli	x8,x8,0x2
 168:	008907b3          	add	x15,x18,x8
 16c:	0007a503          	lw	x10,0(x15)
#   uart_send_str("\r\nu c: ");
# 
#   // print objects in current location
#   unsigned char add_list_sep = 0;
#   const object_id *objs = locations[current_location].objects;
 170:	00440b13          	addi	x22,x8,4
 174:	012b0b33          	add	x22,x22,x18
#   uart_send_str(locations[current_location].name);
 178:	00001097          	auipc	x1,0x1
 17c:	c08080e7          	jalr	x1,-1016(x1) # d80 <uart_send_str>
#   uart_send_str("\r\nu c: ");
 180:	00001537          	lui	x10,0x1
 184:	ee850513          	addi	x10,x10,-280 # ee8 <delay+0xbc>
 188:	00001097          	auipc	x1,0x1
 18c:	bf8080e7          	jalr	x1,-1032(x1) # d80 <uart_send_str>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
#     const object_id id = objs[i];
 190:	000b4903          	lbu	x18,0(x22)
#     if (!id)
 194:	34ca0a13          	addi	x20,x20,844
 198:	06848493          	addi	x9,x9,104
 19c:	18090263          	beq	x18,x0,320 <describe_current_location+0x238>
#     if (add_list_sep) {
#       uart_send_str(", ");
#     } else {
#       add_list_sep = 1;
#     }
#     uart_send_str(objects[id].name);
 1a0:	00002bb7          	lui	x23,0x2
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 1a4:	00000a93          	addi	x21,x0,0
#     uart_send_str(objects[id].name);
 1a8:	3c4b8b93          	addi	x23,x23,964 # 23c4 <objects>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 1ac:	08000c13          	addi	x24,x0,128
#       uart_send_str(", ");
 1b0:	00001cb7          	lui	x25,0x1
#     uart_send_str(objects[id].name);
 1b4:	00291913          	slli	x18,x18,0x2
 1b8:	012b8933          	add	x18,x23,x18
 1bc:	00092503          	lw	x10,0(x18)
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 1c0:	001a8a93          	addi	x21,x21,1
#     uart_send_str(objects[id].name);
 1c4:	00001097          	auipc	x1,0x1
 1c8:	bbc080e7          	jalr	x1,-1092(x1) # d80 <uart_send_str>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 1cc:	018a8863          	beq	x21,x24,1dc <describe_current_location+0xf4>
#     const object_id id = objs[i];
 1d0:	015b07b3          	add	x15,x22,x21
 1d4:	0007c903          	lbu	x18,0(x15)
#     if (!id)
 1d8:	12091c63          	bne	x18,x0,310 <describe_current_location+0x228>
#   }
#   if (!add_list_sep) {
#     uart_send_str("nothing");
#   }
#   uart_send_str("\r\n");
 1dc:	00001937          	lui	x18,0x1
 1e0:	04090513          	addi	x10,x18,64 # 1040 <delay+0x214>
 1e4:	00001097          	auipc	x1,0x1
 1e8:	b9c080e7          	jalr	x1,-1124(x1) # d80 <uart_send_str>
# 
#   // print entities in current location
#   add_list_sep = 0;
#   const entity_id *ents = locations[current_location].entities;
 1ec:	08440b13          	addi	x22,x8,132
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 1f0:	00000c13          	addi	x24,x0,0
#   add_list_sep = 0;
 1f4:	00000793          	addi	x15,x0,0
#     if (!id)
#       break;
#     if (id == active_entity)
#       continue;
#     if (add_list_sep) {
#       uart_send_str(", ");
 1f8:	00001bb7          	lui	x23,0x1
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 1fc:	00800a93          	addi	x21,x0,8
#     const entity_id id = ents[i];
 200:	018b0733          	add	x14,x22,x24
 204:	00e48733          	add	x14,x9,x14
 208:	00074c83          	lbu	x25,0(x14)
#     if (!id)
 20c:	040c8263          	beq	x25,x0,250 <describe_current_location+0x168>
#     if (id == active_entity)
 210:	3e49c703          	lbu	x14,996(x19)
 214:	03970a63          	beq	x14,x25,248 <describe_current_location+0x160>
#     if (add_list_sep) {
 218:	00078863          	beq	x15,x0,228 <describe_current_location+0x140>
#       uart_send_str(", ");
 21c:	ef0b8513          	addi	x10,x23,-272 # ef0 <delay+0xc4>
 220:	00001097          	auipc	x1,0x1
 224:	b60080e7          	jalr	x1,-1184(x1) # d80 <uart_send_str>
#     } else {
#       add_list_sep = 1;
#     }
#     uart_send_str(entities[id].name);
 228:	002c9793          	slli	x15,x25,0x2
 22c:	019787b3          	add	x15,x15,x25
 230:	00379793          	slli	x15,x15,0x3
 234:	00fa07b3          	add	x15,x20,x15
 238:	0007a503          	lw	x10,0(x15)
 23c:	00001097          	auipc	x1,0x1
 240:	b44080e7          	jalr	x1,-1212(x1) # d80 <uart_send_str>
 244:	00100793          	addi	x15,x0,1
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 248:	001c0c13          	addi	x24,x24,1
 24c:	fb5c1ae3          	bne	x24,x21,200 <describe_current_location+0x118>
#   }
#   if (add_list_sep) {
 250:	00078a63          	beq	x15,x0,264 <describe_current_location+0x17c>
#     uart_send_str(" is here\r\n");
 254:	00001537          	lui	x10,0x1
 258:	ef450513          	addi	x10,x10,-268 # ef4 <delay+0xc8>
 25c:	00001097          	auipc	x1,0x1
 260:	b24080e7          	jalr	x1,-1244(x1) # d80 <uart_send_str>
#   }
# 
#   // print exits from current location
#   add_list_sep = 0;
#   uart_send_str("exits: ");
 264:	00001537          	lui	x10,0x1
 268:	f0050513          	addi	x10,x10,-256 # f00 <delay+0xd4>
 26c:	008484b3          	add	x9,x9,x8
 270:	00002437          	lui	x8,0x2
 274:	00001097          	auipc	x1,0x1
 278:	b0c080e7          	jalr	x1,-1268(x1) # d80 <uart_send_str>
#   for (unsigned i = 0; i < LOCATION_MAX_EXITS; i++) {
 27c:	05040413          	addi	x8,x8,80 # 2050 <exit_names>
 280:	01840993          	addi	x19,x8,24
#   add_list_sep = 0;
 284:	00000793          	addi	x15,x0,0
#     if (locations[current_location].exits[i]) {
 288:	08c4c703          	lbu	x14,140(x9)
 28c:	02070463          	beq	x14,x0,2b4 <describe_current_location+0x1cc>
#       if (add_list_sep) {
 290:	00078a63          	beq	x15,x0,2a4 <describe_current_location+0x1bc>
#         uart_send_str(", ");
 294:	00001537          	lui	x10,0x1
 298:	ef050513          	addi	x10,x10,-272 # ef0 <delay+0xc4>
 29c:	00001097          	auipc	x1,0x1
 2a0:	ae4080e7          	jalr	x1,-1308(x1) # d80 <uart_send_str>
#       } else {
#         add_list_sep = 1;
#       }
#       uart_send_str(exit_names[i]);
 2a4:	00042503          	lw	x10,0(x8)
 2a8:	00001097          	auipc	x1,0x1
 2ac:	ad8080e7          	jalr	x1,-1320(x1) # d80 <uart_send_str>
 2b0:	00100793          	addi	x15,x0,1
#   for (unsigned i = 0; i < LOCATION_MAX_EXITS; i++) {
 2b4:	00440413          	addi	x8,x8,4
 2b8:	00148493          	addi	x9,x9,1
 2bc:	fd3416e3          	bne	x8,x19,288 <describe_current_location+0x1a0>
#     }
#   }
#   if (!add_list_sep) {
 2c0:	00079a63          	bne	x15,x0,2d4 <describe_current_location+0x1ec>
#     uart_send_str("none");
 2c4:	00001537          	lui	x10,0x1
 2c8:	f0850513          	addi	x10,x10,-248 # f08 <delay+0xdc>
 2cc:	00001097          	auipc	x1,0x1
 2d0:	ab4080e7          	jalr	x1,-1356(x1) # d80 <uart_send_str>
#   }
#   uart_send_str("\r\n");
# }
 2d4:	02812403          	lw	x8,40(x2)
 2d8:	02c12083          	lw	x1,44(x2)
 2dc:	02412483          	lw	x9,36(x2)
 2e0:	01c12983          	lw	x19,28(x2)
 2e4:	01812a03          	lw	x20,24(x2)
 2e8:	01412a83          	lw	x21,20(x2)
 2ec:	01012b03          	lw	x22,16(x2)
 2f0:	00c12b83          	lw	x23,12(x2)
 2f4:	00812c03          	lw	x24,8(x2)
 2f8:	00412c83          	lw	x25,4(x2)
#   uart_send_str("\r\n");
 2fc:	04090513          	addi	x10,x18,64
# }
 300:	02012903          	lw	x18,32(x2)
 304:	03010113          	addi	x2,x2,48
#   uart_send_str("\r\n");
 308:	00001317          	auipc	x6,0x1
 30c:	a7830067          	jalr	x0,-1416(x6) # d80 <uart_send_str>
#       uart_send_str(", ");
 310:	ef0c8513          	addi	x10,x25,-272 # ef0 <delay+0xc4>
 314:	00001097          	auipc	x1,0x1
 318:	a6c080e7          	jalr	x1,-1428(x1) # d80 <uart_send_str>
 31c:	e99ff06f          	jal	x0,1b4 <describe_current_location+0xcc>
#     uart_send_str("nothing");
 320:	00001537          	lui	x10,0x1
 324:	f1050513          	addi	x10,x10,-240 # f10 <delay+0xe4>
 328:	00001097          	auipc	x1,0x1
 32c:	a58080e7          	jalr	x1,-1448(x1) # d80 <uart_send_str>
 330:	eadff06f          	jal	x0,1dc <describe_current_location+0xf4>

00000334 <remove_object_from_list_by_index>:
# 
# void remove_object_from_list_by_index(object_id list[], unsigned ix) {
#   object_id *ptr = &list[ix];
 334:	00b50533          	add	x10,x10,x11
#   while (1) {
#     object_id *nxt = ptr + 1;
#     *ptr = *nxt;
 338:	00154783          	lbu	x15,1(x10)
 33c:	00f50023          	sb	x15,0(x10)
#     if (!*nxt)
 340:	00078663          	beq	x15,x0,34c <remove_object_from_list_by_index+0x18>
#       return;
#     ptr++;
 344:	00150513          	addi	x10,x10,1
#   while (1) {
 348:	ff1ff06f          	jal	x0,338 <remove_object_from_list_by_index+0x4>
#   }
# }
 34c:	00008067          	jalr	x0,0(x1)

00000350 <add_object_to_list>:
# 
# void add_object_to_list(object_id list[], unsigned list_max_size,
#                         object_id id) {
#   for (unsigned i = 0; i < list_max_size - 1; i++) {
 350:	00000793          	addi	x15,x0,0
 354:	fff58593          	addi	x11,x11,-1
 358:	00b7ea63          	bltu	x15,x11,36c <add_object_to_list+0x1c>
#       list[i] = id;
#       list[i + 1] = 0;
#       return;
#     }
#   }
#   uart_send_str("inventory full\r\n");
 35c:	00001537          	lui	x10,0x1
 360:	f1850513          	addi	x10,x10,-232 # f18 <delay+0xec>
 364:	00001317          	auipc	x6,0x1
 368:	a1c30067          	jalr	x0,-1508(x6) # d80 <uart_send_str>
#       list[i + 1] = 0;
 36c:	00178713          	addi	x14,x15,1
#     if (!list[i]) {
 370:	00f507b3          	add	x15,x10,x15
 374:	0007c683          	lbu	x13,0(x15)
 378:	00069a63          	bne	x13,x0,38c <add_object_to_list+0x3c>
#       list[i] = id;
 37c:	00c78023          	sb	x12,0(x15)
#       list[i + 1] = 0;
 380:	00e50533          	add	x10,x10,x14
 384:	00050023          	sb	x0,0(x10)
# }
 388:	00008067          	jalr	x0,0(x1)
#       list[i + 1] = 0;
 38c:	00070793          	addi	x15,x14,0
 390:	fc9ff06f          	jal	x0,358 <add_object_to_list+0x8>

00000394 <add_entity_to_list>:
# 
# void add_entity_to_list(entity_id list[], unsigned list_max_size,
#                         entity_id id) {
#   for (unsigned i = 0; i < list_max_size - 1; i++) {
 394:	00000793          	addi	x15,x0,0
 398:	fff58593          	addi	x11,x11,-1
 39c:	00b7ea63          	bltu	x15,x11,3b0 <add_entity_to_list+0x1c>
#       continue;
#     list[i] = id;
#     list[i + 1] = 0;
#     return;
#   }
#   uart_send_str("location full\r\n");
 3a0:	00001537          	lui	x10,0x1
 3a4:	f2c50513          	addi	x10,x10,-212 # f2c <delay+0x100>
 3a8:	00001317          	auipc	x6,0x1
 3ac:	9d830067          	jalr	x0,-1576(x6) # d80 <uart_send_str>
#   for (unsigned i = 0; i < list_max_size - 1; i++) {
 3b0:	00178713          	addi	x14,x15,1
#     if (list[i])
 3b4:	00f507b3          	add	x15,x10,x15
 3b8:	0007c683          	lbu	x13,0(x15)
 3bc:	00069a63          	bne	x13,x0,3d0 <add_entity_to_list+0x3c>
#     list[i] = id;
 3c0:	00c78023          	sb	x12,0(x15)
#     list[i + 1] = 0;
 3c4:	00e50533          	add	x10,x10,x14
 3c8:	00050023          	sb	x0,0(x10)
# }
 3cc:	00008067          	jalr	x0,0(x1)
#   for (unsigned i = 0; i < list_max_size - 1; i++) {
 3d0:	00070793          	addi	x15,x14,0
 3d4:	fc9ff06f          	jal	x0,39c <add_entity_to_list+0x8>

000003d8 <remove_entity_from_list>:
# 
# void remove_entity_from_list(entity_id list[], unsigned list_max_size,
#                              entity_id id) {
#   for (unsigned i = 0; i < list_max_size - 1; i++) {
 3d8:	fff58813          	addi	x16,x11,-1
 3dc:	00a585b3          	add	x11,x11,x10
 3e0:	00000713          	addi	x14,x0,0
 3e4:	fff58593          	addi	x11,x11,-1
 3e8:	01076a63          	bltu	x14,x16,3fc <remove_entity_from_list+0x24>
#       list[j] = list[j + 1];
#       if (!list[j])
#         return;
#     }
#   }
#   uart_send_str("entity not here\r\n");
 3ec:	00001537          	lui	x10,0x1
 3f0:	f3c50513          	addi	x10,x10,-196 # f3c <delay+0x110>
 3f4:	00001317          	auipc	x6,0x1
 3f8:	98c30067          	jalr	x0,-1652(x6) # d80 <uart_send_str>
#     if (list[i] != id)
 3fc:	00e507b3          	add	x15,x10,x14
 400:	0007c683          	lbu	x13,0(x15)
 404:	00c68e63          	beq	x13,x12,420 <remove_entity_from_list+0x48>
#   for (unsigned i = 0; i < list_max_size - 1; i++) {
 408:	00170713          	addi	x14,x14,1
 40c:	fddff06f          	jal	x0,3e8 <remove_entity_from_list+0x10>
#       list[j] = list[j + 1];
 410:	0017c683          	lbu	x13,1(x15)
#       if (!list[j])
 414:	00178793          	addi	x15,x15,1
#       list[j] = list[j + 1];
 418:	fed78fa3          	sb	x13,-1(x15)
#       if (!list[j])
 41c:	00068663          	beq	x13,x0,428 <remove_entity_from_list+0x50>
#     for (unsigned j = i; j < list_max_size - 1; j++) {
 420:	feb798e3          	bne	x15,x11,410 <remove_entity_from_list+0x38>
 424:	fe5ff06f          	jal	x0,408 <remove_entity_from_list+0x30>
# }
 428:	00008067          	jalr	x0,0(x1)

0000042c <remove_entity_from_list_by_index>:
# 
# void remove_entity_from_list_by_index(entity_id list[], unsigned ix) {
 42c:	00000317          	auipc	x6,0x0
 430:	f0830067          	jalr	x0,-248(x6) # 334 <remove_object_from_list_by_index>

00000434 <action_take>:
#       return;
#     ptr++;
#   }
# }
# 
# void action_take(const char *object_name) {
 434:	fd010113          	addi	x2,x2,-48
#   entity *ent = &entities[active_entity];
 438:	000027b7          	lui	x15,0x2
# void action_take(const char *object_name) {
 43c:	01612823          	sw	x22,16(x2)
#   entity *ent = &entities[active_entity];
 440:	3e47cb03          	lbu	x22,996(x15) # 23e4 <active_entity>
# void action_take(const char *object_name) {
 444:	02912223          	sw	x9,36(x2)
 448:	01412c23          	sw	x20,24(x2)
#   object_id *objs = locations[ent->location].objects;
 44c:	002b1493          	slli	x9,x22,0x2
 450:	00002a37          	lui	x20,0x2
 454:	01648733          	add	x14,x9,x22
 458:	34ca0793          	addi	x15,x20,844 # 234c <entities>
 45c:	00371713          	slli	x14,x14,0x3
 460:	00e787b3          	add	x15,x15,x14
 464:	0047c783          	lbu	x15,4(x15)
# void action_take(const char *object_name) {
 468:	02812423          	sw	x8,40(x2)
 46c:	01712623          	sw	x23,12(x2)
#   object_id *objs = locations[ent->location].objects;
 470:	00379413          	slli	x8,x15,0x3
 474:	00f40433          	add	x8,x8,x15
 478:	00241413          	slli	x8,x8,0x2
 47c:	00f40433          	add	x8,x8,x15
 480:	00241413          	slli	x8,x8,0x2
 484:	000027b7          	lui	x15,0x2
 488:	00440413          	addi	x8,x8,4
 48c:	06878793          	addi	x15,x15,104 # 2068 <locations>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
#     const object_id id = objs[i];
#     if (!id)
#       break;
#     if (!strings_equal(objects[id].name, object_name))
 490:	00002bb7          	lui	x23,0x2
# void action_take(const char *object_name) {
 494:	03212023          	sw	x18,32(x2)
 498:	01312e23          	sw	x19,28(x2)
 49c:	02112623          	sw	x1,44(x2)
 4a0:	01512a23          	sw	x21,20(x2)
 4a4:	00050993          	addi	x19,x10,0
#   object_id *objs = locations[ent->location].objects;
 4a8:	00f40433          	add	x8,x8,x15
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 4ac:	00000913          	addi	x18,x0,0
 4b0:	34ca0a13          	addi	x20,x20,844
#     if (!strings_equal(objects[id].name, object_name))
 4b4:	3c4b8b93          	addi	x23,x23,964 # 23c4 <objects>
#     const object_id id = objs[i];
 4b8:	012407b3          	add	x15,x8,x18
 4bc:	0007ca83          	lbu	x21,0(x15)
#     if (!id)
 4c0:	020a8663          	beq	x21,x0,4ec <action_take+0xb8>
#     if (!strings_equal(objects[id].name, object_name))
 4c4:	002a9793          	slli	x15,x21,0x2
 4c8:	00fb87b3          	add	x15,x23,x15
 4cc:	0007a503          	lw	x10,0(x15)
 4d0:	00098593          	addi	x11,x19,0
 4d4:	00000097          	auipc	x1,0x0
 4d8:	be4080e7          	jalr	x1,-1052(x1) # b8 <strings_equal>
 4dc:	04051a63          	bne	x10,x0,530 <action_take+0xfc>
#   for (unsigned i = 0; i < LOCATION_MAX_OBJECTS; i++) {
 4e0:	00190913          	addi	x18,x18,1
 4e4:	08000793          	addi	x15,x0,128
 4e8:	fcf918e3          	bne	x18,x15,4b8 <action_take+0x84>
#       continue;
#     remove_object_from_list_by_index(objs, i);
#     add_object_to_list(ent->inventory, ENTITY_MAX_OBJECTS, id);
#     return;
#   }
#   uart_send_str(object_name);
 4ec:	00098513          	addi	x10,x19,0
 4f0:	00001097          	auipc	x1,0x1
 4f4:	890080e7          	jalr	x1,-1904(x1) # d80 <uart_send_str>
#   uart_send_str(" not here\r\n\r\n");
# }
 4f8:	02812403          	lw	x8,40(x2)
 4fc:	02c12083          	lw	x1,44(x2)
 500:	02412483          	lw	x9,36(x2)
 504:	02012903          	lw	x18,32(x2)
 508:	01c12983          	lw	x19,28(x2)
 50c:	01812a03          	lw	x20,24(x2)
 510:	01412a83          	lw	x21,20(x2)
 514:	01012b03          	lw	x22,16(x2)
 518:	00c12b83          	lw	x23,12(x2)
#   uart_send_str(" not here\r\n\r\n");
 51c:	00001537          	lui	x10,0x1
 520:	f5050513          	addi	x10,x10,-176 # f50 <delay+0x124>
# }
 524:	03010113          	addi	x2,x2,48
#   uart_send_str(" not here\r\n\r\n");
 528:	00001317          	auipc	x6,0x1
 52c:	85830067          	jalr	x0,-1960(x6) # d80 <uart_send_str>
#     remove_object_from_list_by_index(objs, i);
 530:	00090593          	addi	x11,x18,0
 534:	00040513          	addi	x10,x8,0
 538:	00000097          	auipc	x1,0x0
 53c:	dfc080e7          	jalr	x1,-516(x1) # 334 <remove_object_from_list_by_index>
#     add_object_to_list(ent->inventory, ENTITY_MAX_OBJECTS, id);
 540:	01648533          	add	x10,x9,x22
 544:	00351513          	slli	x10,x10,0x3
# }
 548:	02812403          	lw	x8,40(x2)
#     add_object_to_list(ent->inventory, ENTITY_MAX_OBJECTS, id);
 54c:	00550513          	addi	x10,x10,5
# }
 550:	02c12083          	lw	x1,44(x2)
 554:	02412483          	lw	x9,36(x2)
 558:	02012903          	lw	x18,32(x2)
 55c:	01c12983          	lw	x19,28(x2)
 560:	01012b03          	lw	x22,16(x2)
 564:	00c12b83          	lw	x23,12(x2)
#     add_object_to_list(ent->inventory, ENTITY_MAX_OBJECTS, id);
 568:	000a8613          	addi	x12,x21,0
 56c:	00aa0533          	add	x10,x20,x10
# }
 570:	01412a83          	lw	x21,20(x2)
 574:	01812a03          	lw	x20,24(x2)
#     add_object_to_list(ent->inventory, ENTITY_MAX_OBJECTS, id);
 578:	02000593          	addi	x11,x0,32
# }
 57c:	03010113          	addi	x2,x2,48
#     add_object_to_list(ent->inventory, ENTITY_MAX_OBJECTS, id);
 580:	00000317          	auipc	x6,0x0
 584:	dd030067          	jalr	x0,-560(x6) # 350 <add_object_to_list>

00000588 <action_drop>:
# 
# void action_drop(const char *object_name) {
 588:	fd010113          	addi	x2,x2,-48
#   entity *ent = &entities[active_entity];
 58c:	000027b7          	lui	x15,0x2
# void action_drop(const char *object_name) {
 590:	01612823          	sw	x22,16(x2)
#   entity *ent = &entities[active_entity];
 594:	3e47cb03          	lbu	x22,996(x15) # 23e4 <active_entity>
# void action_drop(const char *object_name) {
 598:	01412c23          	sw	x20,24(x2)
 59c:	02812423          	sw	x8,40(x2)
#   object_id *objs = ent->inventory;
 5a0:	002b1a13          	slli	x20,x22,0x2
 5a4:	016a0433          	add	x8,x20,x22
# void action_drop(const char *object_name) {
 5a8:	02912223          	sw	x9,36(x2)
#   object_id *objs = ent->inventory;
 5ac:	00341413          	slli	x8,x8,0x3
 5b0:	000024b7          	lui	x9,0x2
 5b4:	34c48793          	addi	x15,x9,844 # 234c <entities>
# void action_drop(const char *object_name) {
 5b8:	01712623          	sw	x23,12(x2)
#   object_id *objs = ent->inventory;
 5bc:	00540413          	addi	x8,x8,5
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
#     const object_id id = objs[i];
#     if (!id)
#       break;
#     if (!strings_equal(objects[id].name, object_name))
 5c0:	00002bb7          	lui	x23,0x2
# void action_drop(const char *object_name) {
 5c4:	03212023          	sw	x18,32(x2)
 5c8:	01512a23          	sw	x21,20(x2)
 5cc:	02112623          	sw	x1,44(x2)
 5d0:	01312e23          	sw	x19,28(x2)
 5d4:	00050a93          	addi	x21,x10,0
#   object_id *objs = ent->inventory;
 5d8:	00f40433          	add	x8,x8,x15
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 5dc:	00000913          	addi	x18,x0,0
 5e0:	34c48493          	addi	x9,x9,844
#     if (!strings_equal(objects[id].name, object_name))
 5e4:	3c4b8b93          	addi	x23,x23,964 # 23c4 <objects>
#     const object_id id = objs[i];
 5e8:	012407b3          	add	x15,x8,x18
 5ec:	0007c983          	lbu	x19,0(x15)
#     if (!id)
 5f0:	02098663          	beq	x19,x0,61c <action_drop+0x94>
#     if (!strings_equal(objects[id].name, object_name))
 5f4:	00299793          	slli	x15,x19,0x2
 5f8:	00fb87b3          	add	x15,x23,x15
 5fc:	0007a503          	lw	x10,0(x15)
 600:	000a8593          	addi	x11,x21,0
 604:	00000097          	auipc	x1,0x0
 608:	ab4080e7          	jalr	x1,-1356(x1) # b8 <strings_equal>
 60c:	06051263          	bne	x10,x0,670 <action_drop+0xe8>
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 610:	00190913          	addi	x18,x18,1
 614:	02000793          	addi	x15,x0,32
 618:	fcf918e3          	bne	x18,x15,5e8 <action_drop+0x60>
#     remove_object_from_list_by_index(objs, i);
#     add_object_to_list(locations[ent->location].objects, LOCATION_MAX_OBJECTS,
#                        id);
#     return;
#   }
#   uart_send_str("u don't have ");
 61c:	00001537          	lui	x10,0x1
 620:	f6050513          	addi	x10,x10,-160 # f60 <delay+0x134>
 624:	00000097          	auipc	x1,0x0
 628:	75c080e7          	jalr	x1,1884(x1) # d80 <uart_send_str>
#   uart_send_str(object_name);
 62c:	000a8513          	addi	x10,x21,0
 630:	00000097          	auipc	x1,0x0
 634:	750080e7          	jalr	x1,1872(x1) # d80 <uart_send_str>
#   uart_send_str("\r\n\r\n");
# }
 638:	02812403          	lw	x8,40(x2)
 63c:	02c12083          	lw	x1,44(x2)
 640:	02412483          	lw	x9,36(x2)
 644:	02012903          	lw	x18,32(x2)
 648:	01c12983          	lw	x19,28(x2)
 64c:	01812a03          	lw	x20,24(x2)
 650:	01412a83          	lw	x21,20(x2)
 654:	01012b03          	lw	x22,16(x2)
 658:	00c12b83          	lw	x23,12(x2)
#   uart_send_str("\r\n\r\n");
 65c:	00001537          	lui	x10,0x1
 660:	fcc50513          	addi	x10,x10,-52 # fcc <delay+0x1a0>
# }
 664:	03010113          	addi	x2,x2,48
#   uart_send_str("\r\n\r\n");
 668:	00000317          	auipc	x6,0x0
 66c:	71830067          	jalr	x0,1816(x6) # d80 <uart_send_str>
#     remove_object_from_list_by_index(objs, i);
 670:	00090593          	addi	x11,x18,0
 674:	00040513          	addi	x10,x8,0
 678:	00000097          	auipc	x1,0x0
 67c:	cbc080e7          	jalr	x1,-836(x1) # 334 <remove_object_from_list_by_index>
#     add_object_to_list(locations[ent->location].objects, LOCATION_MAX_OBJECTS,
 680:	016a07b3          	add	x15,x20,x22
 684:	00379793          	slli	x15,x15,0x3
 688:	00f484b3          	add	x9,x9,x15
 68c:	0044c703          	lbu	x14,4(x9)
# }
 690:	02812403          	lw	x8,40(x2)
 694:	02c12083          	lw	x1,44(x2)
#     add_object_to_list(locations[ent->location].objects, LOCATION_MAX_OBJECTS,
 698:	00371793          	slli	x15,x14,0x3
 69c:	00e787b3          	add	x15,x15,x14
 6a0:	00279793          	slli	x15,x15,0x2
 6a4:	00e787b3          	add	x15,x15,x14
# }
 6a8:	02412483          	lw	x9,36(x2)
 6ac:	02012903          	lw	x18,32(x2)
 6b0:	01812a03          	lw	x20,24(x2)
 6b4:	01412a83          	lw	x21,20(x2)
 6b8:	01012b03          	lw	x22,16(x2)
 6bc:	00c12b83          	lw	x23,12(x2)
#     add_object_to_list(locations[ent->location].objects, LOCATION_MAX_OBJECTS,
 6c0:	00279793          	slli	x15,x15,0x2
 6c4:	00098613          	addi	x12,x19,0
 6c8:	00002537          	lui	x10,0x2
# }
 6cc:	01c12983          	lw	x19,28(x2)
#     add_object_to_list(locations[ent->location].objects, LOCATION_MAX_OBJECTS,
 6d0:	00478793          	addi	x15,x15,4
 6d4:	06850513          	addi	x10,x10,104 # 2068 <locations>
 6d8:	08000593          	addi	x11,x0,128
 6dc:	00f50533          	add	x10,x10,x15
# }
 6e0:	03010113          	addi	x2,x2,48
#     add_object_to_list(locations[ent->location].objects, LOCATION_MAX_OBJECTS,
 6e4:	00000317          	auipc	x6,0x0
 6e8:	c6c30067          	jalr	x0,-916(x6) # 350 <add_object_to_list>

000006ec <action_go>:
# 
# void action_go(unsigned char dir) {
 6ec:	fe010113          	addi	x2,x2,-32
 6f0:	01312623          	sw	x19,12(x2)
#   entity *ent = &entities[active_entity];
 6f4:	000029b7          	lui	x19,0x2
 6f8:	3e49c603          	lbu	x12,996(x19) # 23e4 <active_entity>
# void action_go(unsigned char dir) {
 6fc:	00812c23          	sw	x8,24(x2)
#   location *loc = &locations[ent->location];
 700:	00002437          	lui	x8,0x2
 704:	00261793          	slli	x15,x12,0x2
 708:	00c787b3          	add	x15,x15,x12
 70c:	00379793          	slli	x15,x15,0x3
 710:	34c40413          	addi	x8,x8,844 # 234c <entities>
 714:	00f40433          	add	x8,x8,x15
 718:	00444703          	lbu	x14,4(x8)
# void action_go(unsigned char dir) {
 71c:	01212823          	sw	x18,16(x2)
#   location_id to = loc->exits[dir];
 720:	00002937          	lui	x18,0x2
 724:	00371793          	slli	x15,x14,0x3
 728:	00e787b3          	add	x15,x15,x14
 72c:	00279793          	slli	x15,x15,0x2
 730:	00e787b3          	add	x15,x15,x14
 734:	06890913          	addi	x18,x18,104 # 2068 <locations>
 738:	00279793          	slli	x15,x15,0x2
 73c:	00f90733          	add	x14,x18,x15
 740:	00a70733          	add	x14,x14,x10
# void action_go(unsigned char dir) {
 744:	00912a23          	sw	x9,20(x2)
#   location_id to = loc->exits[dir];
 748:	08c74483          	lbu	x9,140(x14)
# void action_go(unsigned char dir) {
 74c:	00112e23          	sw	x1,28(x2)
#   if (!to) {
 750:	02049663          	bne	x9,x0,77c <action_go+0x90>
#   }
#   remove_entity_from_list(loc->entities, LOCATION_MAX_ENTITIES, active_entity);
#   add_entity_to_list(locations[to].entities, LOCATION_MAX_ENTITIES,
#                      active_entity);
#   ent->location = to;
# }
 754:	01812403          	lw	x8,24(x2)
 758:	01c12083          	lw	x1,28(x2)
 75c:	01412483          	lw	x9,20(x2)
 760:	01012903          	lw	x18,16(x2)
 764:	00c12983          	lw	x19,12(x2)
#     uart_send_str("cannot go there\r\n\r\n");
 768:	00001537          	lui	x10,0x1
 76c:	f7050513          	addi	x10,x10,-144 # f70 <delay+0x144>
# }
 770:	02010113          	addi	x2,x2,32
#     uart_send_str("cannot go there\r\n\r\n");
 774:	00000317          	auipc	x6,0x0
 778:	60c30067          	jalr	x0,1548(x6) # d80 <uart_send_str>
#   remove_entity_from_list(loc->entities, LOCATION_MAX_ENTITIES, active_entity);
 77c:	08478513          	addi	x10,x15,132
 780:	00a90533          	add	x10,x18,x10
 784:	00800593          	addi	x11,x0,8
 788:	00000097          	auipc	x1,0x0
 78c:	c50080e7          	jalr	x1,-944(x1) # 3d8 <remove_entity_from_list>
#   add_entity_to_list(locations[to].entities, LOCATION_MAX_ENTITIES,
 790:	00349513          	slli	x10,x9,0x3
 794:	00950533          	add	x10,x10,x9
 798:	00251513          	slli	x10,x10,0x2
 79c:	00950533          	add	x10,x10,x9
 7a0:	3e49c603          	lbu	x12,996(x19)
 7a4:	00251513          	slli	x10,x10,0x2
 7a8:	08450513          	addi	x10,x10,132
 7ac:	00a90533          	add	x10,x18,x10
 7b0:	00800593          	addi	x11,x0,8
 7b4:	00000097          	auipc	x1,0x0
 7b8:	be0080e7          	jalr	x1,-1056(x1) # 394 <add_entity_to_list>
# }
 7bc:	01c12083          	lw	x1,28(x2)
#   ent->location = to;
 7c0:	00940223          	sb	x9,4(x8)
# }
 7c4:	01812403          	lw	x8,24(x2)
 7c8:	01412483          	lw	x9,20(x2)
 7cc:	01012903          	lw	x18,16(x2)
 7d0:	00c12983          	lw	x19,12(x2)
 7d4:	02010113          	addi	x2,x2,32
 7d8:	00008067          	jalr	x0,0(x1)

000007dc <action_give>:
# 
# void action_give(const char *entity_name, const char *object_name) {
 7dc:	fd010113          	addi	x2,x2,-48
#   entity *ent = &entities[active_entity];
 7e0:	000027b7          	lui	x15,0x2
# void action_give(const char *entity_name, const char *object_name) {
 7e4:	01812423          	sw	x24,8(x2)
#   entity *ent = &entities[active_entity];
 7e8:	3e47cc03          	lbu	x24,996(x15) # 23e4 <active_entity>
# void action_give(const char *entity_name, const char *object_name) {
 7ec:	02812423          	sw	x8,40(x2)
 7f0:	01412c23          	sw	x20,24(x2)
#   location *loc = &locations[ent->location];
 7f4:	002c1413          	slli	x8,x24,0x2
 7f8:	00002a37          	lui	x20,0x2
 7fc:	01840733          	add	x14,x8,x24
 800:	34ca0793          	addi	x15,x20,844 # 234c <entities>
 804:	00371713          	slli	x14,x14,0x3
 808:	00e787b3          	add	x15,x15,x14
 80c:	0047c783          	lbu	x15,4(x15)
# void action_give(const char *entity_name, const char *object_name) {
 810:	02912223          	sw	x9,36(x2)
 814:	01912223          	sw	x25,4(x2)
 818:	00379493          	slli	x9,x15,0x3
 81c:	00f484b3          	add	x9,x9,x15
 820:	00249493          	slli	x9,x9,0x2
 824:	00f484b3          	add	x9,x9,x15
 828:	00249493          	slli	x9,x9,0x2
#   entity_id *ents = loc->entities;
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
#     if (!ents[i])
 82c:	00002cb7          	lui	x25,0x2
# void action_give(const char *entity_name, const char *object_name) {
 830:	03212023          	sw	x18,32(x2)
 834:	01512a23          	sw	x21,20(x2)
 838:	01712623          	sw	x23,12(x2)
 83c:	02112623          	sw	x1,44(x2)
 840:	01312e23          	sw	x19,28(x2)
 844:	01612823          	sw	x22,16(x2)
 848:	00050a93          	addi	x21,x10,0
 84c:	00058913          	addi	x18,x11,0
 850:	08448493          	addi	x9,x9,132
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 854:	00000b93          	addi	x23,x0,0
 858:	34ca0a13          	addi	x20,x20,844
#     if (!ents[i])
 85c:	068c8c93          	addi	x25,x25,104 # 2068 <locations>
 860:	017487b3          	add	x15,x9,x23
 864:	019787b3          	add	x15,x15,x25
 868:	0007cb03          	lbu	x22,0(x15)
 86c:	020b0a63          	beq	x22,x0,8a0 <action_give+0xc4>
#       break;
#     entity *to = &entities[ents[i]];
#     if (!strings_equal(to->name, entity_name))
 870:	002b1993          	slli	x19,x22,0x2
 874:	016987b3          	add	x15,x19,x22
 878:	00379793          	slli	x15,x15,0x3
 87c:	00fa07b3          	add	x15,x20,x15
 880:	0007a503          	lw	x10,0(x15)
 884:	000a8593          	addi	x11,x21,0
 888:	00000097          	auipc	x1,0x0
 88c:	830080e7          	jalr	x1,-2000(x1) # b8 <strings_equal>
 890:	02051463          	bne	x10,x0,8b8 <action_give+0xdc>
#   for (unsigned i = 0; i < LOCATION_MAX_ENTITIES; i++) {
 894:	001b8b93          	addi	x23,x23,1
 898:	00800793          	addi	x15,x0,8
 89c:	fcfb92e3          	bne	x23,x15,860 <action_give+0x84>
#     }
#     uart_send_str(object_name);
#     uart_send_str(" not in inventory\r\n\r\n");
#     return;
#   }
#   uart_send_str(entity_name);
 8a0:	000a8513          	addi	x10,x21,0
 8a4:	00000097          	auipc	x1,0x0
 8a8:	4dc080e7          	jalr	x1,1244(x1) # d80 <uart_send_str>
#   uart_send_str(" is not here\r\n\r\n");
 8ac:	00001537          	lui	x10,0x1
 8b0:	f9c50513          	addi	x10,x10,-100 # f9c <delay+0x170>
 8b4:	0680006f          	jal	x0,91c <action_give+0x140>
#     object_id *objs = ent->inventory;
 8b8:	01840433          	add	x8,x8,x24
 8bc:	00341413          	slli	x8,x8,0x3
 8c0:	00540413          	addi	x8,x8,5
#       if (!strings_equal(objects[oid].name, object_name))
 8c4:	00002bb7          	lui	x23,0x2
#     object_id *objs = ent->inventory;
 8c8:	008a0433          	add	x8,x20,x8
#     for (unsigned j = 0; j < ENTITY_MAX_OBJECTS; j++) {
 8cc:	00000493          	addi	x9,x0,0
#       if (!strings_equal(objects[oid].name, object_name))
 8d0:	3c4b8b93          	addi	x23,x23,964 # 23c4 <objects>
#       const object_id oid = objs[j];
 8d4:	009407b3          	add	x15,x8,x9
 8d8:	0007ca83          	lbu	x21,0(x15)
#       if (!oid)
 8dc:	020a8663          	beq	x21,x0,908 <action_give+0x12c>
#       if (!strings_equal(objects[oid].name, object_name))
 8e0:	002a9793          	slli	x15,x21,0x2
 8e4:	00fb87b3          	add	x15,x23,x15
 8e8:	0007a503          	lw	x10,0(x15)
 8ec:	00090593          	addi	x11,x18,0
 8f0:	fffff097          	auipc	x1,0xfffff
 8f4:	7c8080e7          	jalr	x1,1992(x1) # b8 <strings_equal>
 8f8:	04051e63          	bne	x10,x0,954 <action_give+0x178>
#     for (unsigned j = 0; j < ENTITY_MAX_OBJECTS; j++) {
 8fc:	00148493          	addi	x9,x9,1
 900:	02000793          	addi	x15,x0,32
 904:	fcf498e3          	bne	x9,x15,8d4 <action_give+0xf8>
#     uart_send_str(object_name);
 908:	00090513          	addi	x10,x18,0
 90c:	00000097          	auipc	x1,0x0
 910:	474080e7          	jalr	x1,1140(x1) # d80 <uart_send_str>
#     uart_send_str(" not in inventory\r\n\r\n");
 914:	00001537          	lui	x10,0x1
 918:	f8450513          	addi	x10,x10,-124 # f84 <delay+0x158>
# }
 91c:	02812403          	lw	x8,40(x2)
 920:	02c12083          	lw	x1,44(x2)
 924:	02412483          	lw	x9,36(x2)
 928:	02012903          	lw	x18,32(x2)
 92c:	01c12983          	lw	x19,28(x2)
 930:	01812a03          	lw	x20,24(x2)
 934:	01412a83          	lw	x21,20(x2)
 938:	01012b03          	lw	x22,16(x2)
 93c:	00c12b83          	lw	x23,12(x2)
 940:	00812c03          	lw	x24,8(x2)
 944:	00412c83          	lw	x25,4(x2)
 948:	03010113          	addi	x2,x2,48
#   uart_send_str(" is not here\r\n\r\n");
 94c:	00000317          	auipc	x6,0x0
 950:	43430067          	jalr	x0,1076(x6) # d80 <uart_send_str>
#       remove_object_from_list_by_index(objs, j);
 954:	00048593          	addi	x11,x9,0
 958:	00040513          	addi	x10,x8,0
 95c:	00000097          	auipc	x1,0x0
 960:	9d8080e7          	jalr	x1,-1576(x1) # 334 <remove_object_from_list_by_index>
#       add_object_to_list(to->inventory, ENTITY_MAX_OBJECTS, oid);
 964:	01698533          	add	x10,x19,x22
 968:	00351513          	slli	x10,x10,0x3
# }
 96c:	02812403          	lw	x8,40(x2)
#       add_object_to_list(to->inventory, ENTITY_MAX_OBJECTS, oid);
 970:	00550513          	addi	x10,x10,5
# }
 974:	02c12083          	lw	x1,44(x2)
 978:	02412483          	lw	x9,36(x2)
 97c:	02012903          	lw	x18,32(x2)
 980:	01c12983          	lw	x19,28(x2)
 984:	01012b03          	lw	x22,16(x2)
 988:	00c12b83          	lw	x23,12(x2)
 98c:	00812c03          	lw	x24,8(x2)
 990:	00412c83          	lw	x25,4(x2)
#       add_object_to_list(to->inventory, ENTITY_MAX_OBJECTS, oid);
 994:	000a8613          	addi	x12,x21,0
 998:	00aa0533          	add	x10,x20,x10
# }
 99c:	01412a83          	lw	x21,20(x2)
 9a0:	01812a03          	lw	x20,24(x2)
#       add_object_to_list(to->inventory, ENTITY_MAX_OBJECTS, oid);
 9a4:	02000593          	addi	x11,x0,32
# }
 9a8:	03010113          	addi	x2,x2,48
#       add_object_to_list(to->inventory, ENTITY_MAX_OBJECTS, oid);
 9ac:	00000317          	auipc	x6,0x0
 9b0:	9a430067          	jalr	x0,-1628(x6) # 350 <add_object_to_list>

000009b4 <handle_inbuf>:
# 
# void handle_inbuf() {
 9b4:	fd010113          	addi	x2,x2,-48
#   const char *words[8];
#   char *ptr = inbuf.line;
 9b8:	000027b7          	lui	x15,0x2
# void handle_inbuf() {
 9bc:	02912223          	sw	x9,36(x2)
 9c0:	02112623          	sw	x1,44(x2)
 9c4:	02812423          	sw	x8,40(x2)
 9c8:	00010713          	addi	x14,x2,0
#   unsigned nwords = 0;
 9cc:	00000493          	addi	x9,x0,0
#   char *ptr = inbuf.line;
 9d0:	3e878793          	addi	x15,x15,1000 # 23e8 <inbuf>
#   while (1) {
#     words[nwords++] = ptr;
#     while (*ptr && *ptr != ' ') {
 9d4:	02000513          	addi	x10,x0,32
#     }
#     if (!*ptr)
#       break;
#     *ptr = 0;
#     ptr++;
#     if (nwords == sizeof(words) / sizeof(const char *)) {
 9d8:	00800593          	addi	x11,x0,8
#     words[nwords++] = ptr;
 9dc:	00148493          	addi	x9,x9,1
 9e0:	00f72023          	sw	x15,0(x14)
#     while (*ptr && *ptr != ' ') {
 9e4:	0007c603          	lbu	x12,0(x15)
#       ptr++;
 9e8:	00078693          	addi	x13,x15,0
#     while (*ptr && *ptr != ' ') {
 9ec:	02060463          	beq	x12,x0,a14 <handle_inbuf+0x60>
#       ptr++;
 9f0:	00178793          	addi	x15,x15,1
#     while (*ptr && *ptr != ' ') {
 9f4:	fea618e3          	bne	x12,x10,9e4 <handle_inbuf+0x30>
#     *ptr = 0;
 9f8:	00068023          	sb	x0,0(x13)
#     if (nwords == sizeof(words) / sizeof(const char *)) {
 9fc:	00470713          	addi	x14,x14,4
 a00:	fcb49ee3          	bne	x9,x11,9dc <handle_inbuf+0x28>
#       uart_send_str("too many words, some ignored\r\n\r\n");
 a04:	00001537          	lui	x10,0x1
 a08:	fb050513          	addi	x10,x10,-80 # fb0 <delay+0x184>
 a0c:	00000097          	auipc	x1,0x0
 a10:	374080e7          	jalr	x1,884(x1) # d80 <uart_send_str>
#   }
#   //  for (unsigned i = 0; i < nwords; i++) {
#   //    uart_send_str(words[i]);
#   //    uart_send_str("\r\n");
#   //  }
#   if (strings_equal(words[0], "i")) {
 a14:	00012403          	lw	x8,0(x2)
 a18:	000015b7          	lui	x11,0x1
 a1c:	fd458593          	addi	x11,x11,-44 # fd4 <delay+0x1a8>
 a20:	00040513          	addi	x10,x8,0
 a24:	fffff097          	auipc	x1,0xfffff
 a28:	694080e7          	jalr	x1,1684(x1) # b8 <strings_equal>
 a2c:	02050663          	beq	x10,x0,a58 <handle_inbuf+0xa4>
#     describe_inventory();
 a30:	00000097          	auipc	x1,0x0
 a34:	1b8080e7          	jalr	x1,440(x1) # be8 <describe_inventory>
#     uart_send_str("\r\n");
 a38:	00001537          	lui	x10,0x1
 a3c:	04050513          	addi	x10,x10,64 # 1040 <delay+0x214>
#     }
#     action_give(words[1], words[2]);
#   } else {
#     uart_send_str("not understood\r\n\r\n");
#   }
# }
 a40:	02812403          	lw	x8,40(x2)
 a44:	02c12083          	lw	x1,44(x2)
 a48:	02412483          	lw	x9,36(x2)
 a4c:	03010113          	addi	x2,x2,48
#     uart_send_str("not understood\r\n\r\n");
 a50:	00000317          	auipc	x6,0x0
 a54:	33030067          	jalr	x0,816(x6) # d80 <uart_send_str>
#   } else if (strings_equal(words[0], "t")) {
 a58:	000015b7          	lui	x11,0x1
 a5c:	fd858593          	addi	x11,x11,-40 # fd8 <delay+0x1ac>
 a60:	00040513          	addi	x10,x8,0
 a64:	fffff097          	auipc	x1,0xfffff
 a68:	654080e7          	jalr	x1,1620(x1) # b8 <strings_equal>
 a6c:	02050a63          	beq	x10,x0,aa0 <handle_inbuf+0xec>
#     if (nwords < 2) {
 a70:	00100793          	addi	x15,x0,1
 a74:	00f49863          	bne	x9,x15,a84 <handle_inbuf+0xd0>
#       uart_send_str("take what\r\n\r\n");
 a78:	00001537          	lui	x10,0x1
 a7c:	fdc50513          	addi	x10,x10,-36 # fdc <delay+0x1b0>
 a80:	fc1ff06f          	jal	x0,a40 <handle_inbuf+0x8c>
# }
 a84:	02812403          	lw	x8,40(x2)
#     action_take(words[1]);
 a88:	00412503          	lw	x10,4(x2)
# }
 a8c:	02c12083          	lw	x1,44(x2)
 a90:	02412483          	lw	x9,36(x2)
 a94:	03010113          	addi	x2,x2,48
#     action_take(words[1]);
 a98:	00000317          	auipc	x6,0x0
 a9c:	99c30067          	jalr	x0,-1636(x6) # 434 <action_take>
#   } else if (strings_equal(words[0], "d")) {
 aa0:	000015b7          	lui	x11,0x1
 aa4:	fec58593          	addi	x11,x11,-20 # fec <delay+0x1c0>
 aa8:	00040513          	addi	x10,x8,0
 aac:	fffff097          	auipc	x1,0xfffff
 ab0:	60c080e7          	jalr	x1,1548(x1) # b8 <strings_equal>
 ab4:	02050a63          	beq	x10,x0,ae8 <handle_inbuf+0x134>
#     if (nwords < 2) {
 ab8:	00100793          	addi	x15,x0,1
 abc:	00f49863          	bne	x9,x15,acc <handle_inbuf+0x118>
#       uart_send_str("drop what\r\n\r\n");
 ac0:	00001537          	lui	x10,0x1
 ac4:	ff050513          	addi	x10,x10,-16 # ff0 <delay+0x1c4>
 ac8:	f79ff06f          	jal	x0,a40 <handle_inbuf+0x8c>
# }
 acc:	02812403          	lw	x8,40(x2)
#     action_drop(words[1]);
 ad0:	00412503          	lw	x10,4(x2)
# }
 ad4:	02c12083          	lw	x1,44(x2)
 ad8:	02412483          	lw	x9,36(x2)
 adc:	03010113          	addi	x2,x2,48
#     action_drop(words[1]);
 ae0:	00000317          	auipc	x6,0x0
 ae4:	aa830067          	jalr	x0,-1368(x6) # 588 <action_drop>
#   } else if (strings_equal(words[0], "n")) {
 ae8:	000015b7          	lui	x11,0x1
 aec:	00058593          	addi	x11,x11,0 # 1000 <delay+0x1d4>
 af0:	00040513          	addi	x10,x8,0
 af4:	fffff097          	auipc	x1,0xfffff
 af8:	5c4080e7          	jalr	x1,1476(x1) # b8 <strings_equal>
 afc:	02050063          	beq	x10,x0,b1c <handle_inbuf+0x168>
#     action_go(0);
 b00:	00000513          	addi	x10,x0,0
# }
 b04:	02812403          	lw	x8,40(x2)
 b08:	02c12083          	lw	x1,44(x2)
 b0c:	02412483          	lw	x9,36(x2)
 b10:	03010113          	addi	x2,x2,48
#     action_go(3);
 b14:	00000317          	auipc	x6,0x0
 b18:	bd830067          	jalr	x0,-1064(x6) # 6ec <action_go>
#   } else if (strings_equal(words[0], "e")) {
 b1c:	000015b7          	lui	x11,0x1
 b20:	e9858593          	addi	x11,x11,-360 # e98 <delay+0x6c>
 b24:	00040513          	addi	x10,x8,0
 b28:	fffff097          	auipc	x1,0xfffff
 b2c:	590080e7          	jalr	x1,1424(x1) # b8 <strings_equal>
 b30:	00050663          	beq	x10,x0,b3c <handle_inbuf+0x188>
#     action_go(1);
 b34:	00100513          	addi	x10,x0,1
 b38:	fcdff06f          	jal	x0,b04 <handle_inbuf+0x150>
#   } else if (strings_equal(words[0], "s")) {
 b3c:	000015b7          	lui	x11,0x1
 b40:	00458593          	addi	x11,x11,4 # 1004 <delay+0x1d8>
 b44:	00040513          	addi	x10,x8,0
 b48:	fffff097          	auipc	x1,0xfffff
 b4c:	570080e7          	jalr	x1,1392(x1) # b8 <strings_equal>
 b50:	00050663          	beq	x10,x0,b5c <handle_inbuf+0x1a8>
#     action_go(2);
 b54:	00200513          	addi	x10,x0,2
 b58:	fadff06f          	jal	x0,b04 <handle_inbuf+0x150>
#   } else if (strings_equal(words[0], "w")) {
 b5c:	000015b7          	lui	x11,0x1
 b60:	00858593          	addi	x11,x11,8 # 1008 <delay+0x1dc>
 b64:	00040513          	addi	x10,x8,0
 b68:	fffff097          	auipc	x1,0xfffff
 b6c:	550080e7          	jalr	x1,1360(x1) # b8 <strings_equal>
 b70:	00050663          	beq	x10,x0,b7c <handle_inbuf+0x1c8>
#     action_go(3);
 b74:	00300513          	addi	x10,x0,3
 b78:	f8dff06f          	jal	x0,b04 <handle_inbuf+0x150>
#   } else if (strings_equal(words[0], "g")) {
 b7c:	000015b7          	lui	x11,0x1
 b80:	00c58593          	addi	x11,x11,12 # 100c <delay+0x1e0>
 b84:	00040513          	addi	x10,x8,0
 b88:	fffff097          	auipc	x1,0xfffff
 b8c:	530080e7          	jalr	x1,1328(x1) # b8 <strings_equal>
 b90:	04050663          	beq	x10,x0,bdc <handle_inbuf+0x228>
#     if (nwords < 2) {
 b94:	00100793          	addi	x15,x0,1
 b98:	00f49863          	bne	x9,x15,ba8 <handle_inbuf+0x1f4>
#       uart_send_str("give to who\r\n\r\n");
 b9c:	00001537          	lui	x10,0x1
 ba0:	01050513          	addi	x10,x10,16 # 1010 <delay+0x1e4>
 ba4:	e9dff06f          	jal	x0,a40 <handle_inbuf+0x8c>
#     if (nwords < 3) {
 ba8:	00200793          	addi	x15,x0,2
 bac:	00f49863          	bne	x9,x15,bbc <handle_inbuf+0x208>
#       uart_send_str("give what\r\n\r\n");
 bb0:	00001537          	lui	x10,0x1
 bb4:	02050513          	addi	x10,x10,32 # 1020 <delay+0x1f4>
 bb8:	e89ff06f          	jal	x0,a40 <handle_inbuf+0x8c>
# }
 bbc:	02812403          	lw	x8,40(x2)
#     action_give(words[1], words[2]);
 bc0:	00812583          	lw	x11,8(x2)
 bc4:	00412503          	lw	x10,4(x2)
# }
 bc8:	02c12083          	lw	x1,44(x2)
 bcc:	02412483          	lw	x9,36(x2)
 bd0:	03010113          	addi	x2,x2,48
#     action_give(words[1], words[2]);
 bd4:	00000317          	auipc	x6,0x0
 bd8:	c0830067          	jalr	x0,-1016(x6) # 7dc <action_give>
#     uart_send_str("not understood\r\n\r\n");
 bdc:	00001537          	lui	x10,0x1
 be0:	03050513          	addi	x10,x10,48 # 1030 <delay+0x204>
 be4:	e5dff06f          	jal	x0,a40 <handle_inbuf+0x8c>

00000be8 <describe_inventory>:
# 
# void describe_inventory() {
#   uart_send_str("u have: ");
 be8:	00001537          	lui	x10,0x1
# void describe_inventory() {
 bec:	fe010113          	addi	x2,x2,-32
#   uart_send_str("u have: ");
 bf0:	04450513          	addi	x10,x10,68 # 1044 <delay+0x218>
# void describe_inventory() {
 bf4:	00812c23          	sw	x8,24(x2)
 bf8:	00912a23          	sw	x9,20(x2)
 bfc:	00112e23          	sw	x1,28(x2)
 c00:	01212823          	sw	x18,16(x2)
 c04:	01312623          	sw	x19,12(x2)
 c08:	01412423          	sw	x20,8(x2)
 c0c:	01512223          	sw	x21,4(x2)
#   uart_send_str("u have: ");
 c10:	00000097          	auipc	x1,0x0
 c14:	170080e7          	jalr	x1,368(x1) # d80 <uart_send_str>
#   bool add_list_sep = FALSE;
#   const object_id *inv = entities[active_entity].inventory;
 c18:	000027b7          	lui	x15,0x2
 c1c:	3e47c783          	lbu	x15,996(x15) # 23e4 <active_entity>
 c20:	00279413          	slli	x8,x15,0x2
 c24:	00f40433          	add	x8,x8,x15
 c28:	00341413          	slli	x8,x8,0x3
 c2c:	000027b7          	lui	x15,0x2
 c30:	00540413          	addi	x8,x8,5
 c34:	34c78793          	addi	x15,x15,844 # 234c <entities>
 c38:	00f40433          	add	x8,x8,x15
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
#     const object_id id = inv[i];
 c3c:	00044483          	lbu	x9,0(x8)
#     if (!id)
 c40:	08048063          	beq	x9,x0,cc0 <describe_inventory+0xd8>
#     if (add_list_sep) {
#       uart_send_str(", ");
#     } else {
#       add_list_sep = TRUE;
#     }
#     uart_send_str(objects[id].name);
 c44:	000029b7          	lui	x19,0x2
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 c48:	00000913          	addi	x18,x0,0
#     uart_send_str(objects[id].name);
 c4c:	3c498993          	addi	x19,x19,964 # 23c4 <objects>
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 c50:	02000a13          	addi	x20,x0,32
#       uart_send_str(", ");
 c54:	00001ab7          	lui	x21,0x1
#     uart_send_str(objects[id].name);
 c58:	00249493          	slli	x9,x9,0x2
 c5c:	009984b3          	add	x9,x19,x9
 c60:	0004a503          	lw	x10,0(x9)
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 c64:	00190913          	addi	x18,x18,1
#     uart_send_str(objects[id].name);
 c68:	00000097          	auipc	x1,0x0
 c6c:	118080e7          	jalr	x1,280(x1) # d80 <uart_send_str>
#   for (unsigned i = 0; i < ENTITY_MAX_OBJECTS; i++) {
 c70:	01490863          	beq	x18,x20,c80 <describe_inventory+0x98>
#     const object_id id = inv[i];
 c74:	012407b3          	add	x15,x8,x18
 c78:	0007c483          	lbu	x9,0(x15)
#     if (!id)
 c7c:	02049a63          	bne	x9,x0,cb0 <describe_inventory+0xc8>
#   }
#   if (!add_list_sep) {
#     uart_send_str("nothing");
#   }
#   uart_send_str("\r\n");
# }
 c80:	01812403          	lw	x8,24(x2)
 c84:	01c12083          	lw	x1,28(x2)
 c88:	01412483          	lw	x9,20(x2)
 c8c:	01012903          	lw	x18,16(x2)
 c90:	00c12983          	lw	x19,12(x2)
 c94:	00812a03          	lw	x20,8(x2)
 c98:	00412a83          	lw	x21,4(x2)
#   uart_send_str("\r\n");
 c9c:	00001537          	lui	x10,0x1
 ca0:	04050513          	addi	x10,x10,64 # 1040 <delay+0x214>
# }
 ca4:	02010113          	addi	x2,x2,32
#   uart_send_str("\r\n");
 ca8:	00000317          	auipc	x6,0x0
 cac:	0d830067          	jalr	x0,216(x6) # d80 <uart_send_str>
#       uart_send_str(", ");
 cb0:	ef0a8513          	addi	x10,x21,-272 # ef0 <delay+0xc4>
 cb4:	00000097          	auipc	x1,0x0
 cb8:	0cc080e7          	jalr	x1,204(x1) # d80 <uart_send_str>
 cbc:	f9dff06f          	jal	x0,c58 <describe_inventory+0x70>
#     uart_send_str("nothing");
 cc0:	00001537          	lui	x10,0x1
 cc4:	f1050513          	addi	x10,x10,-240 # f10 <delay+0xe4>
 cc8:	00000097          	auipc	x1,0x0
 ccc:	0b8080e7          	jalr	x1,184(x1) # d80 <uart_send_str>
 cd0:	fb1ff06f          	jal	x0,c80 <describe_inventory+0x98>

00000cd4 <input_inbuf>:
# 
# void input_inbuf() {
 cd4:	fe010113          	addi	x2,x2,-32
 cd8:	00812c23          	sw	x8,24(x2)
#   while (1) {
#     const char ch = uart_read_char();
#     if (ch == CHAR_BACKSPACE) {
#       if (inbuf.ix > 0) {
 cdc:	00002437          	lui	x8,0x2
# void input_inbuf() {
 ce0:	00912a23          	sw	x9,20(x2)
 ce4:	01212823          	sw	x18,16(x2)
 ce8:	01312623          	sw	x19,12(x2)
 cec:	01412423          	sw	x20,8(x2)
 cf0:	00112e23          	sw	x1,28(x2)
#       if (inbuf.ix > 0) {
 cf4:	3e840413          	addi	x8,x8,1000 # 23e8 <inbuf>
#     if (ch == CHAR_BACKSPACE) {
 cf8:	07f00913          	addi	x18,x0,127
#         inbuf.ix--;
#         uart_send_char(ch);
#       }
#     } else if (ch == CHAR_CARRIAGE_RETURN ||
 cfc:	00d00993          	addi	x19,x0,13
 d00:	04f00a13          	addi	x20,x0,79
#     } else {
#       inbuf.line[inbuf.ix] = ch;
#       inbuf.ix++;
#       uart_send_char(ch);
#     }
#     *leds = inbuf.ix;
 d04:	000024b7          	lui	x9,0x2
#     const char ch = uart_read_char();
 d08:	00000097          	auipc	x1,0x0
 d0c:	10c080e7          	jalr	x1,268(x1) # e14 <uart_read_char>
#       if (inbuf.ix > 0) {
 d10:	05044783          	lbu	x15,80(x8)
#     if (ch == CHAR_BACKSPACE) {
 d14:	03251463          	bne	x10,x18,d3c <input_inbuf+0x68>
#       if (inbuf.ix > 0) {
 d18:	00078a63          	beq	x15,x0,d2c <input_inbuf+0x58>
#         inbuf.ix--;
 d1c:	fff78793          	addi	x15,x15,-1
#       inbuf.ix++;
 d20:	04f40823          	sb	x15,80(x8)
#       uart_send_char(ch);
 d24:	00000097          	auipc	x1,0x0
 d28:	0d8080e7          	jalr	x1,216(x1) # dfc <uart_send_char>
#     *leds = inbuf.ix;
 d2c:	3d44a783          	lw	x15,980(x9) # 23d4 <leds>
 d30:	05044703          	lbu	x14,80(x8)
 d34:	00e78023          	sb	x14,0(x15)
#   while (1) {
 d38:	fd1ff06f          	jal	x0,d08 <input_inbuf+0x34>
#     } else if (ch == CHAR_CARRIAGE_RETURN ||
 d3c:	01350463          	beq	x10,x19,d44 <input_inbuf+0x70>
 d40:	03479863          	bne	x15,x20,d70 <input_inbuf+0x9c>
#       inbuf.line[inbuf.ix] = 0;
 d44:	00f407b3          	add	x15,x8,x15
 d48:	00078023          	sb	x0,0(x15)
#       inbuf.ix = 0;
 d4c:	04040823          	sb	x0,80(x8)
#   }
# }
 d50:	01c12083          	lw	x1,28(x2)
 d54:	01812403          	lw	x8,24(x2)
 d58:	01412483          	lw	x9,20(x2)
 d5c:	01012903          	lw	x18,16(x2)
 d60:	00c12983          	lw	x19,12(x2)
 d64:	00812a03          	lw	x20,8(x2)
 d68:	02010113          	addi	x2,x2,32
 d6c:	00008067          	jalr	x0,0(x1)
#       inbuf.line[inbuf.ix] = ch;
 d70:	00f406b3          	add	x13,x8,x15
 d74:	00a68023          	sb	x10,0(x13)
#       inbuf.ix++;
 d78:	00178793          	addi	x15,x15,1
 d7c:	fa5ff06f          	jal	x0,d20 <input_inbuf+0x4c>

00000d80 <uart_send_str>:
# 
# void uart_send_str(const char *str) {
#   while (*str) {
#     while (*uart_out)
 d80:	000026b7          	lui	x13,0x2
#   while (*str) {
 d84:	00054783          	lbu	x15,0(x10)
 d88:	00079463          	bne	x15,x0,d90 <uart_send_str+0x10>
#       ;
#     *uart_out = *str++;
#   }
# }
 d8c:	00008067          	jalr	x0,0(x1)
#     while (*uart_out)
 d90:	3d86a703          	lw	x14,984(x13) # 23d8 <uart_out>
 d94:	00074603          	lbu	x12,0(x14)
 d98:	fe061ee3          	bne	x12,x0,d94 <uart_send_str+0x14>
#     *uart_out = *str++;
 d9c:	00150513          	addi	x10,x10,1
 da0:	00f70023          	sb	x15,0(x14)
 da4:	fe1ff06f          	jal	x0,d84 <uart_send_str+0x4>

00000da8 <uart_send_hex_byte>:
# 
# void uart_send_hex_byte(char ch) {
 da8:	ff010113          	addi	x2,x2,-16
 dac:	00812423          	sw	x8,8(x2)
 db0:	00050413          	addi	x8,x10,0
#   uart_send_hex_nibble((ch & 0xf0) >> 4);
 db4:	00455513          	srli	x10,x10,0x4
# void uart_send_hex_byte(char ch) {
 db8:	00112623          	sw	x1,12(x2)
#   uart_send_hex_nibble((ch & 0xf0) >> 4);
 dbc:	00000097          	auipc	x1,0x0
 dc0:	020080e7          	jalr	x1,32(x1) # ddc <uart_send_hex_nibble>
#   uart_send_hex_nibble(ch & 0x0f);
 dc4:	00f47513          	andi	x10,x8,15
# }
 dc8:	00812403          	lw	x8,8(x2)
 dcc:	00c12083          	lw	x1,12(x2)
 dd0:	01010113          	addi	x2,x2,16
#   uart_send_hex_nibble(ch & 0x0f);
 dd4:	00000317          	auipc	x6,0x0
 dd8:	00830067          	jalr	x0,8(x6) # ddc <uart_send_hex_nibble>

00000ddc <uart_send_hex_nibble>:
# 
# void uart_send_hex_nibble(char nibble) {
#   if (nibble < 10) {
 ddc:	00900793          	addi	x15,x0,9
 de0:	00a7ea63          	bltu	x15,x10,df4 <uart_send_hex_nibble+0x18>
#     uart_send_char('0' + nibble);
 de4:	03050513          	addi	x10,x10,48
#   } else {
#     uart_send_char('A' + (nibble - 10));
 de8:	0ff57513          	andi	x10,x10,255
 dec:	00000317          	auipc	x6,0x0
 df0:	01030067          	jalr	x0,16(x6) # dfc <uart_send_char>
 df4:	03750513          	addi	x10,x10,55
 df8:	ff1ff06f          	jal	x0,de8 <uart_send_hex_nibble+0xc>

00000dfc <uart_send_char>:
#   }
# }
# 
# void uart_send_char(char ch) {
#   while (*uart_out)
 dfc:	000027b7          	lui	x15,0x2
 e00:	3d87a783          	lw	x15,984(x15) # 23d8 <uart_out>
 e04:	0007c703          	lbu	x14,0(x15)
 e08:	fe071ee3          	bne	x14,x0,e04 <uart_send_char+0x8>
#     ;
#   *uart_out = ch;
 e0c:	00a78023          	sb	x10,0(x15)
# }
 e10:	00008067          	jalr	x0,0(x1)

00000e14 <uart_read_char>:
# 
# char uart_read_char() {
#   char ch;
#   while ((ch = *uart_in) == 0)
 e14:	000027b7          	lui	x15,0x2
 e18:	3dc7a703          	lw	x14,988(x15) # 23dc <uart_in>
 e1c:	00074783          	lbu	x15,0(x14)
 e20:	0ff7f513          	andi	x10,x15,255
 e24:	fe078ce3          	beq	x15,x0,e1c <uart_read_char+0x8>
#     ;
#   return ch;
# }
 e28:	00008067          	jalr	x0,0(x1)

00000e2c <delay>:
# 
# inline void delay(volatile unsigned int ticks) {
 e2c:	ff010113          	addi	x2,x2,-16
 e30:	00a12623          	sw	x10,12(x2)
#   while (ticks--)
 e34:	00c12783          	lw	x15,12(x2)
 e38:	fff78713          	addi	x14,x15,-1
 e3c:	00e12623          	sw	x14,12(x2)
 e40:	fe079ae3          	bne	x15,x0,e34 <delay+0x8>
#     ;
# }
 e44:	01010113          	addi	x2,x2,16
 e48:	00008067          	jalr	x0,0(x1)
